# -*- coding: utf-8 -*-
# Generated by Django 1.11.7 on 2017-11-22 03:57
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager
import django_countries.fields
import django_handleref.models
import django_inet.models
import django_peeringdb.models.abstract


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Facility',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('status', models.CharField(blank=True, max_length=255, verbose_name='Status')),
                ('created', django_handleref.models.CreatedDateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', django_handleref.models.UpdatedDateTimeField(auto_now=True, verbose_name='Updated')),
                ('version', models.IntegerField(default=0)),
                ('address1', models.CharField(blank=True, max_length=255)),
                ('address2', models.CharField(blank=True, max_length=255)),
                ('city', models.CharField(blank=True, max_length=255)),
                ('state', models.CharField(blank=True, max_length=255)),
                ('zipcode', models.CharField(blank=True, max_length=48)),
                ('country', django_countries.fields.CountryField(blank=True, max_length=2)),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, help_text=b'Latitude', max_digits=9, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, help_text=b'Longitude', max_digits=9, null=True)),
                ('name', models.CharField(max_length=255, unique=True)),
                ('website', django_peeringdb.models.abstract.URLField(blank=True, max_length=255)),
                ('clli', models.CharField(blank=True, max_length=18)),
                ('rencode', models.CharField(blank=True, max_length=18)),
                ('npanxx', models.CharField(blank=True, max_length=21)),
                ('notes', models.TextField(blank=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'peeringdb_facility',
                'verbose_name_plural': 'Facilities',
            },
            managers=[
                ('handleref', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='InternetExchange',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('status', models.CharField(blank=True, max_length=255, verbose_name='Status')),
                ('created', django_handleref.models.CreatedDateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', django_handleref.models.UpdatedDateTimeField(auto_now=True, verbose_name='Updated')),
                ('version', models.IntegerField(default=0)),
                ('name', models.CharField(max_length=64, unique=True)),
                ('name_long', models.CharField(blank=True, max_length=254)),
                ('city', models.CharField(max_length=192)),
                ('country', django_countries.fields.CountryField(max_length=2)),
                ('notes', models.TextField(blank=True)),
                ('region_continent', models.CharField(choices=[(b'North America', b'North America'), (b'Asia Pacific', b'Asia Pacific'), (b'Europe', b'Europe'), (b'South America', b'South America'), (b'Africa', b'Africa'), (b'Australia', b'Australia'), (b'Middle East', b'Middle East')], max_length=255)),
                ('media', models.CharField(choices=[(b'Ethernet', b'Ethernet'), (b'ATM', b'ATM'), (b'Multiple', b'Multiple')], max_length=128)),
                ('proto_unicast', models.BooleanField(default=False)),
                ('proto_multicast', models.BooleanField(default=False)),
                ('proto_ipv6', models.BooleanField(default=False)),
                ('website', django_peeringdb.models.abstract.URLField(blank=True, max_length=255)),
                ('url_stats', django_peeringdb.models.abstract.URLField(blank=True, max_length=255)),
                ('tech_email', models.EmailField(blank=True, max_length=254)),
                ('tech_phone', models.CharField(blank=True, max_length=192)),
                ('policy_email', models.EmailField(blank=True, max_length=254)),
                ('policy_phone', models.CharField(blank=True, max_length=192)),
            ],
            options={
                'abstract': False,
                'db_table': 'peeringdb_ix',
            },
            managers=[
                ('handleref', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='InternetExchangeFacility',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('status', models.CharField(blank=True, max_length=255, verbose_name='Status')),
                ('created', django_handleref.models.CreatedDateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', django_handleref.models.UpdatedDateTimeField(auto_now=True, verbose_name='Updated')),
                ('version', models.IntegerField(default=0)),
                ('fac', models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, related_name='ixfac_set', to='django_peeringdb.Facility')),
                ('ix', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ixfac_set', to='django_peeringdb.InternetExchange')),
            ],
            options={
                'db_table': 'peeringdb_ix_facility',
            },
            managers=[
                ('handleref', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='IXLan',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('status', models.CharField(blank=True, max_length=255, verbose_name='Status')),
                ('created', django_handleref.models.CreatedDateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', django_handleref.models.UpdatedDateTimeField(auto_now=True, verbose_name='Updated')),
                ('version', models.IntegerField(default=0)),
                ('name', models.CharField(blank=True, max_length=255)),
                ('descr', models.TextField(blank=True)),
                ('mtu', models.PositiveIntegerField(blank=True, null=True)),
                ('vlan', models.PositiveIntegerField(blank=True, null=True)),
                ('dot1q_support', models.BooleanField(default=False)),
                ('rs_asn', django_inet.models.ASNField(blank=True, default=0, null=True)),
                ('arp_sponge', django_inet.models.MacAddressField(blank=True, max_length=17, null=True, unique=True)),
                ('ix', models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, related_name='ixlan_set', to='django_peeringdb.InternetExchange')),
            ],
            options={
                'abstract': False,
                'db_table': 'peeringdb_ixlan',
            },
            managers=[
                ('handleref', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='IXLanPrefix',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('status', models.CharField(blank=True, max_length=255, verbose_name='Status')),
                ('created', django_handleref.models.CreatedDateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', django_handleref.models.UpdatedDateTimeField(auto_now=True, verbose_name='Updated')),
                ('version', models.IntegerField(default=0)),
                ('notes', models.CharField(blank=True, max_length=255)),
                ('protocol', models.CharField(choices=[(b'IPv4', b'IPv4'), (b'IPv6', b'IPv6')], max_length=64)),
                ('prefix', django_inet.models.IPPrefixField(max_length=43, unique=True)),
                ('ixlan', models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, related_name='ixpfx_set', to='django_peeringdb.IXLan')),
            ],
            options={
                'abstract': False,
                'db_table': 'peeringdb_ixlan_prefix',
            },
            managers=[
                ('handleref', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Network',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('status', models.CharField(blank=True, max_length=255, verbose_name='Status')),
                ('created', django_handleref.models.CreatedDateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', django_handleref.models.UpdatedDateTimeField(auto_now=True, verbose_name='Updated')),
                ('version', models.IntegerField(default=0)),
                ('asn', django_inet.models.ASNField(unique=True)),
                ('name', models.CharField(max_length=255, unique=True)),
                ('aka', models.CharField(blank=True, max_length=255)),
                ('irr_as_set', models.CharField(blank=True, max_length=255)),
                ('website', django_peeringdb.models.abstract.URLField(blank=True, max_length=255)),
                ('looking_glass', django_peeringdb.models.abstract.URLField(blank=True, max_length=255)),
                ('route_server', django_peeringdb.models.abstract.URLField(blank=True, max_length=255)),
                ('notes', models.TextField(blank=True)),
                ('notes_private', models.TextField(blank=True)),
                ('info_traffic', models.CharField(blank=True, choices=[(b'', b'Not Disclosed'), (b'0-20 Mbps', b'0-20 Mbps'), (b'20-100Mbps', b'20-100Mbps'), (b'100-1000Mbps', b'100-1000Mbps'), (b'1-5Gbps', b'1-5Gbps'), (b'5-10Gbps', b'5-10Gbps'), (b'10-20Gbps', b'10-20Gbps'), (b'20-50 Gbps', b'20-50 Gbps'), (b'50-100 Gbps', b'50-100 Gbps'), (b'100+ Gbps', b'100+ Gbps'), (b'100-200 Gbps', b'100-200 Gbps'), (b'200-300 Gbps', b'200-300 Gbps'), (b'300-500 Gbps', b'300-500 Gbps'), (b'500-1000 Gbps', b'500-1000 Gbps'), (b'1 Tbps+', b'1 Tbps+'), (b'10 Tbps+', b'10 Tbps+')], max_length=39)),
                ('info_ratio', models.CharField(blank=True, choices=[(b'', b'Not Disclosed'), (b'Not Disclosed', b'Not Disclosed'), (b'Heavy Outbound', b'Heavy Outbound'), (b'Mostly Outbound', b'Mostly Outbound'), (b'Balanced', b'Balanced'), (b'Mostly Inbound', b'Mostly Inbound'), (b'Heavy Inbound', b'Heavy Inbound')], default=b'Not Disclosed', max_length=45)),
                ('info_scope', models.CharField(blank=True, choices=[(b'', b'Not Disclosed'), (b'Not Disclosed', b'Not Disclosed'), (b'Regional', b'Regional'), (b'North America', b'North America'), (b'Asia Pacific', b'Asia Pacific'), (b'Europe', b'Europe'), (b'South America', b'South America'), (b'Africa', b'Africa'), (b'Australia', b'Australia'), (b'Middle East', b'Middle East'), (b'Global', b'Global')], default=b'Not Disclosed', max_length=39)),
                ('info_type', models.CharField(blank=True, choices=[(b'', b'Not Disclosed'), (b'Not Disclosed', b'Not Disclosed'), (b'NSP', b'NSP'), (b'Content', b'Content'), (b'Cable/DSL/ISP', b'Cable/DSL/ISP'), (b'Enterprise', b'Enterprise'), (b'Educational/Research', b'Educational/Research'), (b'Non-Profit', b'Non-Profit'), (b'Route Server', b'Route Server')], default=b'Not Disclosed', max_length=60)),
                ('info_prefixes4', models.PositiveIntegerField(blank=True, null=True)),
                ('info_prefixes6', models.PositiveIntegerField(blank=True, null=True)),
                ('info_unicast', models.BooleanField(default=False)),
                ('info_multicast', models.BooleanField(default=False)),
                ('info_ipv6', models.BooleanField(default=False)),
                ('policy_url', django_peeringdb.models.abstract.URLField(blank=True, max_length=255)),
                ('policy_general', models.CharField(blank=True, choices=[(b'Open', b'Open'), (b'Selective', b'Selective'), (b'Restrictive', b'Restrictive'), (b'No', b'No')], max_length=72)),
                ('policy_locations', models.CharField(blank=True, choices=[(b'Not Required', b'Not Required'), (b'Preferred', b'Preferred'), (b'Required - US', b'Required - US'), (b'Required - EU', b'Required - EU'), (b'Required - International', b'Required - International')], max_length=72)),
                ('policy_ratio', models.BooleanField(default=False)),
                ('policy_contracts', models.CharField(blank=True, choices=[(b'Not Required', b'Not Required'), (b'Private Only', b'Private Only'), (b'Required', b'Required')], max_length=36)),
            ],
            options={
                'abstract': False,
                'db_table': 'peeringdb_network',
                'verbose_name_plural': 'Networks',
            },
            managers=[
                ('handleref', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='NetworkContact',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('status', models.CharField(blank=True, max_length=255, verbose_name='Status')),
                ('created', django_handleref.models.CreatedDateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', django_handleref.models.UpdatedDateTimeField(auto_now=True, verbose_name='Updated')),
                ('version', models.IntegerField(default=0)),
                ('role', models.CharField(choices=[(b'Abuse', b'Abuse'), (b'Maintenance', b'Maintenance'), (b'Policy', b'Policy'), (b'Technical', b'Technical'), (b'NOC', b'NOC'), (b'Public Relations', b'Public Relations'), (b'Sales', b'Sales')], max_length=27)),
                ('visible', models.CharField(choices=[(b'Private', b'Private'), (b'Users', b'Users'), (b'Public', b'Public')], default=b'Public', max_length=64)),
                ('name', models.CharField(blank=True, max_length=254)),
                ('phone', models.CharField(blank=True, max_length=100)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('url', django_peeringdb.models.abstract.URLField(blank=True, max_length=255)),
                ('net', models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, related_name='poc_set', to='django_peeringdb.Network')),
            ],
            options={
                'abstract': False,
                'db_table': 'peeringdb_network_contact',
            },
            managers=[
                ('handleref', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='NetworkFacility',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('status', models.CharField(blank=True, max_length=255, verbose_name='Status')),
                ('created', django_handleref.models.CreatedDateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', django_handleref.models.UpdatedDateTimeField(auto_now=True, verbose_name='Updated')),
                ('version', models.IntegerField(default=0)),
                ('local_asn', django_inet.models.ASNField(blank=True, null=True)),
                ('avail_sonet', models.BooleanField(default=False)),
                ('avail_ethernet', models.BooleanField(default=False)),
                ('avail_atm', models.BooleanField(default=False)),
                ('fac', models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, related_name='netfac_set', to='django_peeringdb.Facility')),
                ('net', models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, related_name='netfac_set', to='django_peeringdb.Network')),
            ],
            options={
                'db_table': 'peeringdb_network_facility',
            },
            managers=[
                ('handleref', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='NetworkIXLan',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('status', models.CharField(blank=True, max_length=255, verbose_name='Status')),
                ('created', django_handleref.models.CreatedDateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', django_handleref.models.UpdatedDateTimeField(auto_now=True, verbose_name='Updated')),
                ('version', models.IntegerField(default=0)),
                ('asn', django_inet.models.ASNField()),
                ('ipaddr4', django_inet.models.IPAddressField(blank=True, max_length=39, null=True)),
                ('ipaddr6', django_inet.models.IPAddressField(blank=True, max_length=39, null=True)),
                ('is_rs_peer', models.BooleanField(default=False)),
                ('notes', models.CharField(blank=True, max_length=255)),
                ('speed', models.PositiveIntegerField()),
                ('ixlan', models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, related_name='netixlan_set', to='django_peeringdb.IXLan')),
                ('net', models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, related_name='netixlan_set', to='django_peeringdb.Network')),
            ],
            options={
                'abstract': False,
                'db_table': 'peeringdb_network_ixlan',
            },
            managers=[
                ('handleref', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('status', models.CharField(blank=True, max_length=255, verbose_name='Status')),
                ('created', django_handleref.models.CreatedDateTimeField(auto_now_add=True, verbose_name='Created')),
                ('updated', django_handleref.models.UpdatedDateTimeField(auto_now=True, verbose_name='Updated')),
                ('version', models.IntegerField(default=0)),
                ('address1', models.CharField(blank=True, max_length=255)),
                ('address2', models.CharField(blank=True, max_length=255)),
                ('city', models.CharField(blank=True, max_length=255)),
                ('state', models.CharField(blank=True, max_length=255)),
                ('zipcode', models.CharField(blank=True, max_length=48)),
                ('country', django_countries.fields.CountryField(blank=True, max_length=2)),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, help_text=b'Latitude', max_digits=9, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, help_text=b'Longitude', max_digits=9, null=True)),
                ('name', models.CharField(max_length=255, unique=True)),
                ('website', django_peeringdb.models.abstract.URLField(blank=True, max_length=255)),
                ('notes', models.TextField(blank=True)),
            ],
            options={
                'abstract': False,
                'db_table': 'peeringdb_organization',
                'verbose_name_plural': 'Organizations',
            },
            managers=[
                ('handleref', django.db.models.manager.Manager()),
            ],
        ),
        migrations.AddField(
            model_name='network',
            name='org',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='net_set', to='django_peeringdb.Organization'),
        ),
        migrations.AddField(
            model_name='internetexchange',
            name='org',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ix_set', to='django_peeringdb.Organization'),
        ),
        migrations.AddField(
            model_name='facility',
            name='org',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fac_set', to='django_peeringdb.Organization'),
        ),
        migrations.AlterUniqueTogether(
            name='networkfacility',
            unique_together=set([('net', 'fac', 'local_asn')]),
        ),
        migrations.AlterUniqueTogether(
            name='internetexchangefacility',
            unique_together=set([('ix', 'fac')]),
        ),
    ]
