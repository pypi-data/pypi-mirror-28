Metadata-Version: 1.1
Name: django-template-tree
Version: 0.1.1
Summary: Generate diagrams showing relationships between templates in Django projects
Home-page: https://github.com/paul-butcher/django_template_tree
Author: Paul Butcher
Author-email: paul.butcher@gmail.com
License: MIT
Description-Content-Type: UNKNOWN
Description: =============================
        django-template_tree
        =============================
        
        .. image:: https://badge.fury.io/py/django-template-tree.svg
            :target: https://badge.fury.io/py/django-template-tree
        
        .. image:: https://travis-ci.org/paul-butcher/django_template_tree.svg?branch=master
            :target: https://travis-ci.org/paul-butcher/django_template_tree
        
        .. image:: https://codecov.io/gh/paul-butcher/django_template_tree/branch/master/graph/badge.svg
            :target: https://codecov.io/gh/paul-butcher/django_template_tree
        
        Generate diagrams showing relationships between templates in Django projects
        
        Documentation
        -------------
        
        The full documentation is at https://django_template_tree.readthedocs.io.
        
        Quickstart
        ----------
        
        Install django-template_tree::
        
            pip install django_template_tree
        
        Add it to your `INSTALLED_APPS`:
        
        .. code-block:: python
        
            INSTALLED_APPS = (
                ...
                'template_tree',
                ...
            )
        
        Add django-template_tree's URL patterns:
        
        .. code-block:: python
        
            from template_tree import urls as template_tree_urls
            from django import settings
            if settings.DEBUG:
                urlpatterns += [
                    url(r'^__tt__/', include('template_tree.urls', namespace='template_tree')),
                ]
        
        Features
        --------
        
        Displays a collapsible tree diagram showing the hierarchy of templates used by a Django application.
        
        .. image:: _static/screenshot.png
        
        Nodes can be collapsed and expanded, by clicking on them.
        
        .. image:: _static/screenshot-collapsed.png
        
        Apps can be filtered out of the tree, using the 'exclude_app' querystring parameter, thus:
        
        http://localhost:8000/__tt__/?exclude_app=template_tree&exclude_app=admin
        
        By default, admin is excluded, so
        http://localhost:8000/__tt__/
        is equivalent to
        http://localhost:8000/__tt__/?exclude_app=admin
        
        In order to show the admin app as well, you will need to 'unexclude' it thus:
        http://localhost:8000/__tt__/?exclude_app=
        
        Visiting the template_tree url, requesting an application/json response will return json data
        compatible with d3 hierarchies, so you can roll your own diagrams.
        
        Running Tests
        -------------
        
        Does the code actually work?
        
        ::
        
            source <YOURVIRTUALENV>/bin/activate
            (myenv) $ pip install tox
            (myenv) $ tox
        
        Credits
        -------
        
        Tools used in rendering this package:
        
        *  Cookiecutter_
        *  `cookiecutter-djangopackage`_
        
        .. _Cookiecutter: https://github.com/audreyr/cookiecutter
        .. _`cookiecutter-djangopackage`: https://github.com/pydanny/cookiecutter-djangopackage
        
        
        
        
        History
        -------
        
        0.1.0 (2018-01-06)
        ++++++++++++++++++
        
        * First release on PyPI.
        
Keywords: django_template_tree
Platform: UNKNOWN
Classifier: Development Status :: 3 - Alpha
Classifier: Framework :: Django
Classifier: Framework :: Django :: 1.8
Classifier: Framework :: Django :: 1.9
Classifier: Framework :: Django :: 1.10
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: BSD License
Classifier: Natural Language :: English
Classifier: Programming Language :: Python :: 2
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.3
Classifier: Programming Language :: Python :: 3.4
Classifier: Programming Language :: Python :: 3.5
