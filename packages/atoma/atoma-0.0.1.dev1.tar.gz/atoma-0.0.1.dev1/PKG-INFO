Metadata-Version: 1.1
Name: atoma
Version: 0.0.1.dev1
Summary: Atom feed parser for Python 3
Home-page: https://github.com/NicolasLM/atoma
Author: Nicolas Le Manchet
Author-email: nicolas@lemanchet.fr
License: MIT
Description-Content-Type: UNKNOWN
Description: Atoma
        =====
        
        .. image:: https://travis-ci.org/NicolasLM/atoma.svg?branch=master
            :target: https://travis-ci.org/NicolasLM/atoma
        .. image:: https://coveralls.io/repos/github/NicolasLM/atoma/badge.svg?branch=master
            :target: https://coveralls.io/github/NicolasLM/atoma?branch=master
        
        Atom feed parser for Python 3.
        
        Quickstart
        ----------
        
        Install Atoma with pip::
        
           pip install atoma
        
        Load and parse an Atom XML file:
        
        .. code:: python
        
            >>> import atoma
            >>> feed = atoma.parse_atom_file('atom-feed.xml')
            >>> feed.authors
            [AtomPerson(name='Richard Plop', uri=None, email='richard@plop.org')]
            >>> len(feed.entries)
            5
        
        Parsing feeds from the Internet is easy as well:
        
        .. code:: python
        
            >>> import atoma, requests
            >>> response = requests.get('http://lucumr.pocoo.org/feed.atom')
            >>> feed = atoma.parse_atom_bytes(response.content)
            >>> feed.title.value
            "Armin Ronacher's Thoughts and Writings"
        
        Features
        --------
        
        * Atom Syndication Format v1 - `RFC4287 <https://tools.ietf.org/html/rfc4287>`_
        * Typed: atom feed decomposed into meaningful Python objects
        * Secure: uses defusedxml to load untrusted feeds
        * Compatible with Python 3.6+
        
        Useful Resources
        ----------------
        
        To use this library a basic understanding of Atom feeds is required. The
        `Introduction to Atom <https://validator.w3.org/feed/docs/atom.htm>`_ is a must
        read. The `RFC 4287 <https://tools.ietf.org/html/rfc4287>`_ can help lift some
        ambiguities. Finally the `feed validator <https://validator.w3.org/feed/>`_ is
        great to test hand-crafted feeds.
        
        Non-implemented Atom Features
        -----------------------------
        
        Some seldom used Atom features are not implemented:
        
        * XML signature and encryption
        * Atom Extensions
        * Content other than `text`, `html` and `xhtml`
        
        License
        -------
        
        MIT
        Copyright (c) 2018 Nicolas Le Manchet
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
Keywords: atom feed feeds syndication parser RFC4287
Platform: UNKNOWN
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: Topic :: Software Development :: Libraries
Classifier: License :: OSI Approved :: MIT License
Classifier: Natural Language :: English
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Programming Language :: Python :: 3.6
Classifier: Topic :: Text Processing :: Markup :: XML
