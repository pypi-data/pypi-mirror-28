{
  "basePath": "/v1", 
  "definitions": {
    "Bundle": {
      "properties": {
        "uuid": {
          "description": "Bundle unique ID", 
          "pattern": "[a-z0-9]{8}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{12}", 
          "type": "string"
        }, 
        "versions": {
          "items": {
            "description": "Timestamp of bundle creation in RFC3339.", 
            "format": "date-time", 
            "type": "string"
          }, 
          "type": "array"
        }
      }, 
      "required": [
        "uuid", 
        "versions"
      ], 
      "type": "object"
    }, 
    "Error": {
      "properties": {
        "code": {
          "description": "Machine-readable error code.  The types of return values should not be changed lightly.  Individual endpoints\nshould list an enumeration of possible return codes.  All endpoints should expect the possibility of the\nreturn code `unhandled_exception` and `illegal_arguments`.\n", 
          "type": "string"
        }, 
        "stacktrace": {
          "description": "Exception stacktrace, if any.", 
          "type": "string"
        }, 
        "status": {
          "description": "HTTP error code.", 
          "format": "int32", 
          "type": "integer"
        }, 
        "title": {
          "description": "Human-readable error code.", 
          "type": "string"
        }
      }, 
      "required": [
        "title"
      ], 
      "type": "object"
    }, 
    "File": {
      "properties": {
        "name": {
          "description": "Filename (unique within a bundle)", 
          "type": "string"
        }, 
        "uuid": {
          "description": "File unique ID", 
          "pattern": "[a-z0-9]{8}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{12}", 
          "type": "string"
        }, 
        "versions": {
          "description": "List of versions", 
          "items": {
            "type": "string"
          }, 
          "type": "array"
        }
      }, 
      "required": [
        "uuid", 
        "name", 
        "versions"
      ], 
      "type": "object"
    }, 
    "FilesGetResponse": {
      "properties": {
        "files": {
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "Subscription": {
      "properties": {
        "callback_url": {
          "description": "Url to send request to when a bundle comes in that matches this query.", 
          "type": "string"
        }, 
        "es_query": {
          "description": "Elasticsearch query that will trigger the callback.", 
          "type": "object"
        }, 
        "owner": {
          "description": "User who created this subscription.", 
          "format": "email", 
          "type": "string"
        }, 
        "replica": {
          "description": "Replica this query is monitoring. One of aws, gcp, or azure.", 
          "enum": [
            "aws", 
            "gcp", 
            "azure"
          ], 
          "type": "string"
        }, 
        "uuid": {
          "description": "Subscription unique ID", 
          "pattern": "[a-z0-9]{8}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{12}", 
          "type": "string"
        }
      }, 
      "required": [
        "uuid", 
        "replica", 
        "owner", 
        "callback_url", 
        "es_query"
      ], 
      "type": "object"
    }, 
    "blob_common_metadata": {
      "description": "Common fields between the files list of a bundle and the metadata tracking an unique file.", 
      "properties": {
        "crc32c": {
          "description": "CRC-32C (in hex format) of the file contents in hex.", 
          "pattern": "^[a-z0-9]{8}$", 
          "type": "string"
        }, 
        "s3_etag": {
          "description": "S3 ETag (in hex format) of the file contents.", 
          "pattern": "^[a-z0-9]{32}(-([2-9]|[1-8][0-9]|9[0-9]|[1-8][0-9]{2}|9[0-8][0-9]|99[0-9]|[1-8][0-9]{3}|9[0-8][0-9]{2}|99[0-8][0-9]|999[0-9]|10000))?$", 
          "type": "string"
        }, 
        "sha1": {
          "description": "SHA-1 (in hex format) of the file contents in hex.", 
          "pattern": "^[a-z0-9]{40}$", 
          "type": "string"
        }, 
        "sha256": {
          "description": "SHA-256 (in hex format) of the file contents in hex.", 
          "pattern": "^[a-z0-9]{64}$", 
          "type": "string"
        }, 
        "uuid": {
          "description": "A RFC4122-compliant ID for the file.", 
          "pattern": "[a-z0-9]{8}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{12}", 
          "type": "string"
        }, 
        "version": {
          "description": "Timestamp of bundle creation in RFC3339.", 
          "format": "date-time", 
          "type": "string"
        }
      }, 
      "required": [
        "uuid", 
        "version", 
        "crc32c", 
        "s3_etag", 
        "sha1", 
        "sha256"
      ], 
      "type": "object"
    }, 
    "bundle_version": {
      "properties": {
        "creator_uid": {
          "description": "User ID who created this bundle manifest.", 
          "format": "int", 
          "type": "integer"
        }, 
        "files": {
          "items": {
            "$ref": "#/definitions/file_version"
          }, 
          "type": "array"
        }, 
        "uuid": {
          "description": "Bundle unique ID", 
          "pattern": "[a-z0-9]{8}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{12}", 
          "type": "string"
        }, 
        "version": {
          "description": "Timestamp of bundle creation in RFC3339.", 
          "format": "date-time", 
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "file_metadata": {
      "allOf": [
        {
          "$ref": "#/definitions/blob_common_metadata"
        }, 
        {
          "properties": {
            "bundle_uuid": {
              "description": "A RFC4122-compliant ID for the bundle that contains this file.", 
              "pattern": "[a-z0-9]{8}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{12}", 
              "type": "string"
            }, 
            "creator_uid": {
              "description": "User ID who created this file.", 
              "format": "int64", 
              "type": "integer"
            }, 
            "version": {
              "description": "Version of the file metadata object.", 
              "type": "string"
            }
          }, 
          "required": [
            "version", 
            "bundle_uuid", 
            "creator_uid"
          ], 
          "type": "object"
        }
      ], 
      "description": "Object describing a single file in the files list of a bundle.", 
      "type": "object"
    }, 
    "file_version": {
      "allOf": [
        {
          "$ref": "#/definitions/blob_common_metadata"
        }, 
        {
          "properties": {
            "content-type": {
              "description": "Content-type of the file.", 
              "type": "string"
            }, 
            "indexed": {
              "description": "True if this file is to be indexed.", 
              "type": "boolean"
            }, 
            "name": {
              "description": "Filename (unique within a bundle)", 
              "type": "string"
            }, 
            "url": {
              "description": "Direct access URL, if requested.", 
              "type": "string"
            }
          }, 
          "required": [
            "name", 
            "content-type", 
            "indexed"
          ], 
          "type": "object"
        }
      ], 
      "description": "Object describing a single file in the files list of a bundle.", 
      "type": "object"
    }
  }, 
  "host": "dss.dev.data.humancellatlas.org", 
  "info": {
    "description": "Human Cell Atlas Data Coordination Platform Data Storage System API", 
    "title": "HCA DCP DSS API", 
    "version": "0.0.1"
  }, 
  "paths": {
    "/bundles/{uuid}": {
      "get": {
        "description": "Given a bundle UUID, return the latest version of that bundle.  If the version is provided, that version of the\nbundle is returned instead.\n", 
        "parameters": [
          {
            "description": "Bundle unique ID.", 
            "in": "path", 
            "name": "uuid", 
            "pattern": "[A-Za-z0-9]{8}-[A-Za-z0-9]{4}-[A-Za-z0-9]{4}-[A-Za-z0-9]{4}-[A-Za-z0-9]{12}", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Timestamp of bundle creation in RFC3339.", 
            "format": "date-time", 
            "in": "query", 
            "name": "version", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "Replica to fetch from.", 
            "enum": [
              "aws", 
              "gcp", 
              "azure"
            ], 
            "in": "query", 
            "name": "replica", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "Include direct-access URLs in the response.", 
            "in": "query", 
            "name": "directurls", 
            "required": false, 
            "type": "boolean"
          }
        ], 
        "responses": {
          "200": {
            "description": "OK", 
            "schema": {
              "properties": {
                "bundle": {
                  "$ref": "#/definitions/bundle_version"
                }
              }, 
              "type": "object"
            }
          }, 
          "default": {
            "description": "Unexpected error", 
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }, 
        "summary": "Retrieve a bundle given a UUID and optionally a version."
      }, 
      "put": {
        "description": "Create a new version of a bundle with a given UUID.  The list of file UUID+versions to be included must be\nprovided.\n", 
        "parameters": [
          {
            "description": "A RFC4122-compliant ID for the bundle.", 
            "in": "path", 
            "name": "uuid", 
            "pattern": "[A-Za-z0-9]{8}-[A-Za-z0-9]{4}-[A-Za-z0-9]{4}-[A-Za-z0-9]{4}-[A-Za-z0-9]{12}", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Timestamp of bundle creation in RFC3339.", 
            "format": "date-time", 
            "in": "query", 
            "name": "version", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "Replica to write to.", 
            "enum": [
              "aws", 
              "gcp", 
              "azure"
            ], 
            "in": "query", 
            "name": "replica", 
            "required": true, 
            "type": "string"
          }, 
          {
            "in": "body", 
            "name": "json_request_body", 
            "required": true, 
            "schema": {
              "properties": {
                "creator_uid": {
                  "description": "User ID who is creating this bundle.", 
                  "format": "int64", 
                  "type": "integer"
                }, 
                "files": {
                  "items": {
                    "properties": {
                      "indexed": {
                        "description": "True iff this file should be indexed.", 
                        "type": "boolean"
                      }, 
                      "name": {
                        "description": "Name of the file.", 
                        "pattern": "^[^/\\\\]+$", 
                        "type": "string"
                      }, 
                      "uuid": {
                        "description": "A RFC4122-compliant ID for the file.", 
                        "pattern": "[A-Za-z0-9]{8}-[A-Za-z0-9]{4}-[A-Za-z0-9]{4}-[A-Za-z0-9]{4}-[A-Za-z0-9]{12}", 
                        "type": "string"
                      }, 
                      "version": {
                        "description": "Timestamp of file creation in RFC3339.", 
                        "format": "date-time", 
                        "type": "string"
                      }
                    }, 
                    "required": [
                      "uuid", 
                      "version", 
                      "name", 
                      "indexed"
                    ], 
                    "type": "object"
                  }, 
                  "type": "array"
                }
              }, 
              "required": [
                "files", 
                "creator_uid"
              ], 
              "type": "object"
            }
          }
        ], 
        "responses": {
          "201": {
            "description": "OK", 
            "schema": {
              "properties": {
                "version": {
                  "description": "Timestamp of bundle creation in RFC3339.", 
                  "format": "date-time", 
                  "type": "string"
                }
              }, 
              "required": [
                "version"
              ], 
              "type": "object"
            }
          }
        }, 
        "summary": "Create a bundle"
      }
    }, 
    "/files/{uuid}": {
      "get": {
        "description": "Given a file UUID, return the latest version of that file.  If the version is provided, that version of the file\nis returned instead.\n\nHeaders will contain the data store metadata for the file.\n\nThis endpoint will do a HTTP redirect to another HTTP endpoint with the file contents.\n", 
        "parameters": [
          {
            "description": "A RFC4122-compliant ID for the file.", 
            "in": "path", 
            "name": "uuid", 
            "pattern": "[A-Za-z0-9]{8}-[A-Za-z0-9]{4}-[A-Za-z0-9]{4}-[A-Za-z0-9]{4}-[A-Za-z0-9]{12}", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Replica to fetch from.", 
            "enum": [
              "aws", 
              "gcp", 
              "azure"
            ], 
            "in": "query", 
            "name": "replica", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "Timestamp of file creation in RFC3339.  If this is not provided, the latest version is returned.", 
            "format": "date-time", 
            "in": "query", 
            "name": "version", 
            "required": false, 
            "type": "string"
          }
        ], 
        "responses": {
          "302": {
            "description": "Redirects to a signed URL with the data.", 
            "headers": {
              "X-DSS-BUNDLE-UUID": {
                "description": "A RFC4122-compliant ID for the bundle that contains this file.", 
                "type": "string"
              }, 
              "X-DSS-CONTENT-TYPE": {
                "description": "Content-type of the file.", 
                "type": "string"
              }, 
              "X-DSS-CRC32C": {
                "description": "CRC-32C (in hex format) of the file contents in hex.", 
                "pattern": "^[a-z0-9]{8}$", 
                "type": "string"
              }, 
              "X-DSS-CREATOR-UID": {
                "description": "User ID who created this file.", 
                "format": "int64", 
                "type": "integer"
              }, 
              "X-DSS-S3-ETAG": {
                "description": "S3 ETag (in hex format) of the file contents.", 
                "pattern": "^[a-z0-9]{32}(-([2-9]|[1-8][0-9]|9[0-9]|[1-8][0-9]{2}|9[0-8][0-9]|99[0-9]|[1-8][0-9]{3}|9[0-8][0-9]{2}|99[0-8][0-9]|999[0-9]|10000))?$", 
                "type": "string"
              }, 
              "X-DSS-SHA1": {
                "description": "SHA-1 (in hex format) of the file contents in hex.", 
                "pattern": "^[a-z0-9]{40}$", 
                "type": "string"
              }, 
              "X-DSS-SHA256": {
                "description": "SHA-256 (in hex format) of the file contents in hex.", 
                "pattern": "^[a-z0-9]{64}$", 
                "type": "string"
              }, 
              "X-DSS-VERSION": {
                "description": "Timestamp of file creation in RFC3339.", 
                "format": "date-time", 
                "type": "string"
              }
            }
          }, 
          "default": {
            "description": "Unexpected error", 
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error"
                }, 
                {
                  "properties": {
                    "code": {
                      "description": "Machine-readable error code.  The types of return values should not be changed lightly.", 
                      "enum": [
                        "unhandled_exception", 
                        "illegal_arguments", 
                        "not_found"
                      ], 
                      "type": "string"
                    }
                  }, 
                  "required": [
                    "code"
                  ], 
                  "type": "object"
                }
              ]
            }
          }
        }, 
        "summary": "Retrieve a file given a UUID and optionally a version."
      }, 
      "head": {
        "description": "Given a file UUID, return the metadata for the latest version of that file.  If the version is provided, that\nversion's metadata is returned instead.  The metadata is returned in the headers.\n", 
        "parameters": [
          {
            "description": "A RFC4122-compliant ID for the file.", 
            "in": "path", 
            "name": "uuid", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Timestamp of file creation in RFC3339.  If this is not provided, the latest version is returned.", 
            "format": "date-time", 
            "in": "query", 
            "name": "version", 
            "required": false, 
            "type": "string"
          }
        ], 
        "responses": {
          "200": {
            "description": "Returns metadata", 
            "headers": {
              "X-DSS-BUNDLE-UUID": {
                "description": "A RFC4122-compliant ID for the bundle that contains this file.", 
                "type": "string"
              }, 
              "X-DSS-CONTENT-TYPE": {
                "description": "Content-type of the file.", 
                "type": "string"
              }, 
              "X-DSS-CRC32C": {
                "description": "CRC-32C (in hex format) of the file contents in hex.", 
                "pattern": "^[a-z0-9]{8}$", 
                "type": "string"
              }, 
              "X-DSS-CREATOR-UID": {
                "description": "User ID who created this file.", 
                "format": "int64", 
                "type": "integer"
              }, 
              "X-DSS-S3-ETAG": {
                "description": "S3 ETag (in hex format) of the file contents.", 
                "pattern": "^[a-z0-9]{32}(-([2-9]|[1-8][0-9]|9[0-9]|[1-8][0-9]{2}|9[0-8][0-9]|99[0-9]|[1-8][0-9]{3}|9[0-8][0-9]{2}|99[0-8][0-9]|999[0-9]|10000))?$", 
                "type": "string"
              }, 
              "X-DSS-SHA1": {
                "description": "SHA-1 (in hex format) of the file contents in hex.", 
                "pattern": "^[a-z0-9]{40}$", 
                "type": "string"
              }, 
              "X-DSS-SHA256": {
                "description": "SHA-256 (in hex format) of the file contents in hex.", 
                "pattern": "^[a-z0-9]{64}$", 
                "type": "string"
              }, 
              "X-DSS-VERSION": {
                "description": "Timestamp of file creation in RFC3339.", 
                "format": "date-time", 
                "type": "string"
              }
            }
          }
        }, 
        "summary": "Retrieve a file's metadata given an UUID and optionally a version."
      }, 
      "put": {
        "description": "Create a new version of a file with a given UUID.  The file content is passed in through a cloud URL.  The file\non the cloud provider must have metadata set reflecting the file checksums and the file content type.\n\nThe metadata fields required are:\n- hca-dss-content-type: content-type of the file\n- hca-dss-sha256: SHA-256 checksum of the file\n- hca-dss-sha1: SHA-1 checksum of the file\n- hca-dss-s3_etag: S3 ETAG checksum of the file.  See\nhttps://stackoverflow.com/questions/12186993/what-is-the-algorithm-to-compute-the-amazon-s3-etag-for-a-file-larger-than-5gb\nfor the general algorithm for how checksum is calculated.  For files smaller than 64MB, this is the MD5 checksum\nof the file.  For files larger than 64MB but smaller than 640,000MB, we use 64MB chunks.  For files larger than\n640,000MB, we use a chunk size equal to the total file size divided by 10000, rounded up to the nearest MB.\nMB, in this section, refers to 1,048,576 bytes.  Note that 640,000MB is not the same as 640GB!\n- hca-dss-crc32c: CRC-32C checksum of the file\n", 
        "parameters": [
          {
            "description": "A RFC4122-compliant ID for the bundle.", 
            "in": "path", 
            "name": "uuid", 
            "pattern": "[A-Za-z0-9]{8}-[A-Za-z0-9]{4}-[A-Za-z0-9]{4}-[A-Za-z0-9]{4}-[A-Za-z0-9]{12}", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Timestamp of file creation in RFC3339.  If this is not provided, the latest version is returned.", 
            "format": "date-time", 
            "in": "query", 
            "name": "version", 
            "required": false, 
            "type": "string"
          }, 
          {
            "in": "body", 
            "name": "json_request_body", 
            "required": true, 
            "schema": {
              "properties": {
                "bundle_uuid": {
                  "description": "A RFC4122-compliant ID for the bundle that contains this file.", 
                  "type": "string"
                }, 
                "creator_uid": {
                  "description": "User ID who is creating this file.", 
                  "format": "int64", 
                  "type": "integer"
                }, 
                "source_url": {
                  "description": "Cloud URL for source data.", 
                  "pattern": "^(gs|s3|wasb)://", 
                  "type": "string"
                }
              }, 
              "required": [
                "source_url", 
                "bundle_uuid", 
                "creator_uid"
              ], 
              "type": "object"
            }
          }
        ], 
        "responses": {
          "201": {
            "description": "Returned when the file is successfully copied.", 
            "schema": {
              "properties": {
                "version": {
                  "description": "Timestamp of file creation in RFC3339.", 
                  "format": "date-time", 
                  "type": "string"
                }
              }, 
              "required": [
                "version"
              ], 
              "type": "object"
            }
          }, 
          "202": {
            "description": "Returned when the file has been queued up for copying.", 
            "schema": {
              "properties": {
                "task_id": {
                  "description": "ID for the task responsible for managing the copy.", 
                  "pattern": "[A-Za-z0-9]{8}-[A-Za-z0-9]{4}-[A-Za-z0-9]{4}-[A-Za-z0-9]{4}-[A-Za-z0-9]{12}", 
                  "type": "string"
                }, 
                "version": {
                  "description": "Timestamp of file creation in RFC3339.", 
                  "format": "date-time", 
                  "type": "string"
                }
              }, 
              "required": [
                "version"
              ], 
              "type": "object"
            }
          }, 
          "default": {
            "description": "Unexpected error", 
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error"
                }, 
                {
                  "properties": {
                    "code": {
                      "description": "Machine-readable error code.  The types of return values should not be changed lightly.", 
                      "enum": [
                        "unhandled_exception", 
                        "illegal_arguments", 
                        "unknown_source_schema", 
                        "file_already_exists"
                      ], 
                      "type": "string"
                    }
                  }, 
                  "required": [
                    "code"
                  ], 
                  "type": "object"
                }
              ]
            }
          }
        }, 
        "summary": "Create a new version of a file"
      }
    }, 
    "/search": {
      "post": {
        "consumes": [
          "application/json"
        ], 
        "description": "Accepts Elasticsearch JSON query and returns matching bundle identifiers\n", 
        "parameters": [
          {
            "in": "body", 
            "name": "json_request_body", 
            "required": true, 
            "schema": {
              "properties": {
                "es_query": {
                  "description": "Elasticsearch query", 
                  "type": "object"
                }
              }, 
              "required": [
                "es_query"
              ], 
              "type": "object"
            }
          }, 
          {
            "description": "Replica to search.", 
            "enum": [
              "aws", 
              "gcp", 
              "azure"
            ], 
            "in": "query", 
            "name": "replica", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "description": "OK"
          }, 
          "default": {
            "description": "Unexpected error", 
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }, 
        "summary": "Find bundles by searching their metadata with an Elasticsearch query\n"
      }
    }, 
    "/subscriptions": {
      "get": {
        "description": "Return a list of associated subscriptions, which contains the uuid,\nreplica, query, creator_uid, and callback_url.\n", 
        "operationId": "dss.api.subscriptions.find", 
        "parameters": [
          {
            "description": "Replica to fetch from. Can be one of aws, gcp, or azure.", 
            "enum": [
              "aws", 
              "gcp", 
              "azure"
            ], 
            "in": "query", 
            "name": "replica", 
            "required": true, 
            "type": "string"
          }
        ], 
        "responses": {
          "200": {
            "description": "OK", 
            "schema": {
              "properties": {
                "subscriptions": {
                  "items": {
                    "$ref": "#/definitions/Subscription"
                  }, 
                  "type": "array"
                }
              }, 
              "required": [
                "subscriptions"
              ], 
              "type": "object"
            }
          }, 
          "default": {
            "description": "Unexpected error", 
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error"
                }, 
                {
                  "properties": {
                    "code": {
                      "description": "Machine-readable error code.  The types of return values should not be changed lightly.", 
                      "enum": [
                        "unhandled_exception", 
                        "Forbidden", 
                        "OAuthResponseProblem"
                      ], 
                      "type": "string"
                    }
                  }, 
                  "required": [
                    "code"
                  ], 
                  "type": "object"
                }
              ]
            }
          }
        }, 
        "security": [
          {
            "googAuth": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          }
        ], 
        "summary": "Retrieve an user's event subscriptions."
      }, 
      "put": {
        "description": "Create a new event subscription. Every time a new bundle version matches this query,\na request is sent to callback_url.\n", 
        "parameters": [
          {
            "description": "Replica to write to. Can be one of aws, gcp, or azure.", 
            "enum": [
              "aws", 
              "gcp", 
              "azure"
            ], 
            "in": "query", 
            "name": "replica", 
            "required": true, 
            "type": "string"
          }, 
          {
            "in": "body", 
            "name": "json_request_body", 
            "required": true, 
            "schema": {
              "properties": {
                "callback_url": {
                  "description": "Url to send request to when a bundle comes in that matches this query.", 
                  "format": "url", 
                  "type": "string"
                }, 
                "es_query": {
                  "description": "Elasticsearch query that will trigger the callback.", 
                  "type": "object"
                }
              }, 
              "required": [
                "es_query", 
                "callback_url"
              ], 
              "type": "object"
            }
          }
        ], 
        "responses": {
          "201": {
            "description": "OK", 
            "schema": {
              "properties": {
                "uuid": {
                  "description": "A RFC4122-compliant ID for the subscription.", 
                  "pattern": "[A-Za-z0-9]{8}-[A-Za-z0-9]{4}-[A-Za-z0-9]{4}-[A-Za-z0-9]{4}-[A-Za-z0-9]{12}", 
                  "type": "string"
                }
              }, 
              "required": [
                "uuid"
              ], 
              "type": "object"
            }
          }, 
          "default": {
            "description": "Unexpected error", 
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error"
                }, 
                {
                  "properties": {
                    "code": {
                      "description": "Machine-readable error code.  The types of return values should not be changed lightly.", 
                      "enum": [
                        "unhandled_exception", 
                        "Forbidden", 
                        "OAuthResponseProblem", 
                        "elasticsearch_error"
                      ], 
                      "type": "string"
                    }
                  }, 
                  "required": [
                    "code"
                  ], 
                  "type": "object"
                }
              ]
            }
          }
        }, 
        "security": [
          {
            "googAuth": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          }
        ], 
        "summary": "Create a event subscription."
      }
    }, 
    "/subscriptions/{uuid}": {
      "delete": {
        "description": "Delete a registered event subscription. The associated query will no longer trigger a callback\nif a matching document is added to the system.\n", 
        "parameters": [
          {
            "description": "A RFC4122-compliant ID for the subscription.", 
            "in": "path", 
            "name": "uuid", 
            "pattern": "[A-Za-z0-9]{8}-[A-Za-z0-9]{4}-[A-Za-z0-9]{4}-[A-Za-z0-9]{4}-[A-Za-z0-9]{12}", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Replica to delete from. Can be one of aws, gcp, or azure.", 
            "enum": [
              "aws", 
              "gcp", 
              "azure"
            ], 
            "in": "query", 
            "name": "replica", 
            "required": true, 
            "type": "string"
          }
        ], 
        "responses": {
          "200": {
            "description": "OK", 
            "schema": {
              "properties": {
                "timeDeleted": {
                  "description": "Timestamp of query subscription deletion in RFC3339.", 
                  "format": "date-time", 
                  "type": "string"
                }
              }, 
              "required": [
                "timeDeleted"
              ], 
              "type": "object"
            }
          }, 
          "default": {
            "description": "Unexpected error", 
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error"
                }, 
                {
                  "properties": {
                    "code": {
                      "description": "Machine-readable error code.  The types of return values should not be changed lightly.", 
                      "enum": [
                        "unhandled_exception", 
                        "Forbidden", 
                        "OAuthResponseProblem", 
                        "not_found"
                      ], 
                      "type": "string"
                    }
                  }, 
                  "required": [
                    "code"
                  ], 
                  "type": "object"
                }
              ]
            }
          }
        }, 
        "security": [
          {
            "googAuth": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          }
        ], 
        "summary": "Delete an event subscription."
      }, 
      "get": {
        "description": "Given a subscription UUID, return the associated subscription, which contains the uuid,\nreplica, query, creator_uid, and callback_url.\n", 
        "parameters": [
          {
            "description": "A RFC4122-compliant ID for the subscription.", 
            "in": "path", 
            "name": "uuid", 
            "pattern": "[A-Za-z0-9]{8}-[A-Za-z0-9]{4}-[A-Za-z0-9]{4}-[A-Za-z0-9]{4}-[A-Za-z0-9]{12}", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Replica to fetch from. Can be one of aws, gcp, or azure.", 
            "enum": [
              "aws", 
              "gcp", 
              "azure"
            ], 
            "in": "query", 
            "name": "replica", 
            "required": true, 
            "type": "string"
          }
        ], 
        "responses": {
          "200": {
            "description": "OK", 
            "schema": {
              "properties": {
                "subscription": {
                  "$ref": "#/definitions/Subscription"
                }
              }, 
              "type": "object"
            }
          }, 
          "default": {
            "description": "Unexpected error", 
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Error"
                }, 
                {
                  "properties": {
                    "code": {
                      "description": "Machine-readable error code.  The types of return values should not be changed lightly.", 
                      "enum": [
                        "unhandled_exception", 
                        "Forbidden", 
                        "OAuthResponseProblem", 
                        "not_found"
                      ], 
                      "type": "string"
                    }
                  }, 
                  "required": [
                    "code"
                  ], 
                  "type": "object"
                }
              ]
            }
          }
        }, 
        "security": [
          {
            "googAuth": [
              "https://www.googleapis.com/auth/userinfo.email"
            ]
          }
        ], 
        "summary": "Retrieve an event subscription given a UUID."
      }
    }
  }, 
  "produces": [
    "application/json"
  ], 
  "schemes": [
    "https"
  ], 
  "securityDefinitions": {
    "googAuth": {
      "authorizationUrl": "https://accounts.google.com/o/oauth2/v2/auth", 
      "flow": "implicit", 
      "scopes": {
        "https://www.googleapis.com/auth/userinfo.email": "read user email"
      }, 
      "type": "oauth2", 
      "x-tokenInfoUrl": "https://www.googleapis.com/oauth2/v3/tokeninfo"
    }
  }, 
  "swagger": "2.0"
}
