<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <title>HelloWorld package</title>
    <link rel="stylesheet" href="_static/epub.css" type="text/css" />
    <link rel="stylesheet" href="_static/pygments.css" type="text/css" /> 
  </head>
  <body>

    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <div class="section" id="helloworld-package">
<h1>HelloWorld package</h1>
<div class="section" id="submodules">
<h2>Submodules</h2>
</div>
<div class="section" id="module-HelloWorld.challenge">
<span id="helloworld-challenge-module"></span><h2>HelloWorld.challenge module</h2>
<p>This is the HelloWorld challenge to teach the usage of the library by a
minimal example.</p>
<p>This challenge takes a number and a word and composes a new word based
on the input.</p>
<p>The class fully focuses on the “business logic” by overwriting just two
methods of parent class &lt;challenge.challenge.Challenge&gt;:</p>
<blockquote>
<div><ul class="simple">
<li><p>&lt;build&gt;: This sets up the data model from the given input lines.</p></li>
<li><p>&lt;calc&gt;: This is the core algorithm of the challenge.</p></li>
</ul>
</div></blockquote>
<p>This design pattern is called the “Template Method Pattern”. While the parent
class handles the common parts of the challenge flow, the child class just
encapsulates what is special.</p>
<p>The two methods above is just the bare minimum to implement. For more complex
challenges you will overwrite or extend other parts of the parent class.</p>
<p>Have a look into the parent class, especially into the &lt;main&gt; function, that
controls the execution of the challenge. Also have a look into the parents
&lt;__init__&gt; method to see what instance attributes are already prepared to serve
the communication of the methods.</p>
<p>By the class attribute &lt;sample&gt; a small example of the possible input is
given. This is recommended for every challenge. It is useful as input of
unit tests or for the smoke tests with the -k option. For more extended
input, in example from the given data files, this class attribute will be
overwritten by injection of an instance attribute of the same name.</p>
<p>The optional class attribute &lt;expect&gt; the expected output for the given
&lt;sample&gt; sets the expected output. This is typically used by unit tests.</p>
<p>Together &lt;sample&gt; and &lt;expect&gt; serve as documantation of the intention of
the challenge.</p>
<dl class="class">
<dt id="HelloWorld.challenge.HelloWorldChallenge">
<em class="property">class </em><code class="descclassname">HelloWorld.challenge.</code><code class="descname">HelloWorldChallenge</code><a class="reference internal" href="_modules/HelloWorld/challenge.xhtml#HelloWorldChallenge"><span class="viewcode-link">[source]</span></a></dt>
<dd><p>Bases: <a class="reference internal" href="challenges.xhtml#challenges.challenge.Challenge" title="challenges.challenge.Challenge"><code class="xref py py-class docutils literal"><span class="pre">challenges.challenge.Challenge</span></code></a></p>
<p>This is the HelloWorld Challenge class.</p>
<p>This challenge takes a word as input and a number at which position
to split the word. It returns a new word composed of the switched parts
with a blank in between and the total length of the new string.</p>
<dl class="method">
<dt id="HelloWorld.challenge.HelloWorldChallenge.build">
<code class="descname">build</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="reference internal" href="_modules/HelloWorld/challenge.xhtml#HelloWorldChallenge.build"><span class="viewcode-link">[source]</span></a></dt>
<dd><p>Parse the input lines and set up the model.</p>
</dd></dl>

<dl class="method">
<dt id="HelloWorld.challenge.HelloWorldChallenge.calc">
<code class="descname">calc</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="reference internal" href="_modules/HelloWorld/challenge.xhtml#HelloWorldChallenge.calc"><span class="viewcode-link">[source]</span></a></dt>
<dd><p>Swap head and tail of the model and store to result.</p>
</dd></dl>

<dl class="attribute">
<dt id="HelloWorld.challenge.HelloWorldChallenge.expect">
<code class="descname">expect</code><em class="property"> = '\n        Hello World\n        11\n    '</em></dt>
<dd><p>This is the expected output for the given sample.</p>
<p>It is used by unit tests, especially by the full integration test.</p>
</dd></dl>

<dl class="method">
<dt id="HelloWorld.challenge.HelloWorldChallenge.format">
<code class="descname">format</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="reference internal" href="_modules/HelloWorld/challenge.xhtml#HelloWorldChallenge.format"><span class="viewcode-link">[source]</span></a></dt>
<dd></dd></dl>

<dl class="attribute">
<dt id="HelloWorld.challenge.HelloWorldChallenge.sample">
<code class="descname">sample</code><em class="property"> = '\n        5\n        WorldHello\n    '</em></dt>
<dd><p>This is a small exsample of the input. It can be overwritten by
injection.</p>
<blockquote>
<div><p>It is used by the –klass option of the challenge runner.
It is also used by unit tests.</p>
<p>prompt&gt; challenge HelloWorld/ –klass
Hello World</p>
</div></blockquote>
</dd></dl>

</dd></dl>

</div>
<div class="section" id="module-HelloWorld.test">
<span id="helloworld-test-module"></span><h2>HelloWorld.test module</h2>
<dl class="class">
<dt id="HelloWorld.test.HelloWorldTest">
<em class="property">class </em><code class="descclassname">HelloWorld.test.</code><code class="descname">HelloWorldTest</code><span class="sig-paren">(</span><em>methodName='runTest'</em><span class="sig-paren">)</span><a class="reference internal" href="_modules/HelloWorld/test.xhtml#HelloWorldTest"><span class="viewcode-link">[source]</span></a></dt>
<dd><p>Bases: <code class="xref py py-class docutils literal"><span class="pre">unittest.case.TestCase</span></code></p>
<dl class="method">
<dt id="HelloWorld.test.HelloWorldTest.setUp">
<code class="descname">setUp</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="reference internal" href="_modules/HelloWorld/test.xhtml#HelloWorldTest.setUp"><span class="viewcode-link">[source]</span></a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="HelloWorld.test.HelloWorldTest.test__init__">
<code class="descname">test__init__</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="reference internal" href="_modules/HelloWorld/test.xhtml#HelloWorldTest.test__init__"><span class="viewcode-link">[source]</span></a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="HelloWorld.test.HelloWorldTest.test_build">
<code class="descname">test_build</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="reference internal" href="_modules/HelloWorld/test.xhtml#HelloWorldTest.test_build"><span class="viewcode-link">[source]</span></a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="HelloWorld.test.HelloWorldTest.test_calc">
<code class="descname">test_calc</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="reference internal" href="_modules/HelloWorld/test.xhtml#HelloWorldTest.test_calc"><span class="viewcode-link">[source]</span></a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="HelloWorld.test.HelloWorldTest.test_format">
<code class="descname">test_format</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="reference internal" href="_modules/HelloWorld/test.xhtml#HelloWorldTest.test_format"><span class="viewcode-link">[source]</span></a></dt>
<dd></dd></dl>

<dl class="method">
<dt id="HelloWorld.test.HelloWorldTest.test_full_integration">
<code class="descname">test_full_integration</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="reference internal" href="_modules/HelloWorld/test.xhtml#HelloWorldTest.test_full_integration"><span class="viewcode-link">[source]</span></a></dt>
<dd></dd></dl>

</dd></dl>

</div>
<div class="section" id="module-HelloWorld">
<span id="module-contents"></span><h2>Module contents</h2>
</div>
</div>


          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>