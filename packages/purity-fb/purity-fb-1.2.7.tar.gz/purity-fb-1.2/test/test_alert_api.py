# coding: utf-8

"""
    FlashBlade Management API

    The management APIs of FlashBlade.

    OpenAPI spec version: beta

    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

from __future__ import absolute_import

import unittest

from environment import HOST, API_TOKEN
from purity_fb import *
from utils import *


class TestAlertApi(unittest.TestCase):
    """ AlertApi unit test stubs """

    def setUp(self):
        self.purity_fb = PurityFb(HOST)
        self.purity_fb.disable_verify_ssl()
        res = self.purity_fb.login(API_TOKEN)
        self.assertTrue(res == 200)
        self.alerts = self.purity_fb.alerts

    def tearDown(self):
        self.purity_fb.logout()

    def test_list(self):
        print('LIST all alerts\n')
        res = self.alerts.list_alerts()
        if DEBUG:
            print_list(res.items)
        check_is_list_of(res.items, Alert)

        list_and_sort(self.alerts.list_alerts, 'created', Alert)

    def test_patch(self):
        test_alerts = self.alerts.list_alerts().items
        if not len(test_alerts):
            print('NO ALERTS TO TEST PATCH\n')
            return
        try:
            alert_id = test_alerts[0].index
            unflag_settings = Alert(flagged=False)
            flag_settings = Alert(flagged=True)

            print('FLAG AN ALERT\n')
            res = self.alerts.update_alerts(names=[alert_id], alert_settings=flag_settings)
            if DEBUG:
                print_list(res.items)
            check_is_list_of(res.items, Alert)

            print('UNFLAG AN ALERT\n')
            res = self.alerts.update_alerts(names=[alert_id], alert_settings=unflag_settings)
            if DEBUG:
                print_list(res.items)
            check_is_list_of(res.items, Alert)
        except Exception as err:
            print('COULD NOT RETRIEVE KEY "ID" FROM ALERT {}\n'.format(test_alerts[0]))

if __name__ == '__main__':
    unittest.main()
