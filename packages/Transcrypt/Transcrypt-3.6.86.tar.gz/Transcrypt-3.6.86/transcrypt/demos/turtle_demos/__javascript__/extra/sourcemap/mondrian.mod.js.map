{
	"version": 3,
	"file": "D:/activ_tosh/geatec/transcrypt/qquick/Transcrypt/transcrypt/demos/turtle_demos/__javascript__/mondrian.mod.js",
	"sources": [
		"D:/activ_tosh/geatec/transcrypt/qquick/Transcrypt/transcrypt/demos/turtle_demos/mondrian.py"
	],
	"sourcesContent": [
		"# Inspired by our cat Pietje\n\nfrom turtle import *\nfrom random import *\n\nspeed (0)\n\ncolors = ('gray', 'green', 'red', 'white', 'blue', 'yellow')\ndelta = 8\nthreshold = 100\ncolor ('black', 'black')\n\ndef maybe (bias = None):\n    return choice ([False, True, bias, bias] if bias != None else [False, True])    \n\ndef between (a, b):\n    return a + (0.2 + 0.3 * random ()) * (b - a)\n\nrecentColors = ['black', 'black']\ndef originalColor ():\n    global recentColors\n    while True:\n        result = choice (colors)\n        if result == 'white' or not result in recentColors:\n            recentColors = [result, recentColors [0]]\n            print (result, end = ' ')\n            return result\n    \ndef rect (xMin, yMin, xMax, yMax):\n    for aColor in ('black', originalColor ()):\n        color (aColor, aColor)\n        \n        up ()\n        goto (xMin, yMin)\n        down ()\n        \n        begin_fill ()\n        goto (xMax, yMin)\n        goto (xMax, yMax)\n        goto (xMin, yMax)\n        goto (xMin, yMin)\n        end_fill ()\n        \n        xMin += delta\n        yMin += delta\n        xMax -= delta\n        yMax -= delta\n    \ndef draw (xMin = -250, yMin = -300, xMax = 250, yMax = 300):\n    if xMax - xMin > threshold and yMax - yMin > threshold:\n        if maybe (xMax - xMin > yMax - yMin):\n            xMid = between (xMin, xMax)\n            if maybe ():\n                draw (xMin, yMin, xMid, yMax)\n                rect (xMid, yMin, xMax, yMax)\n            else:\n                rect (xMin, yMin, xMid, yMax)\n                draw (xMid, yMin, xMax, yMax)\n        else:\n            yMid = between (yMin, yMax)\n            if maybe ():\n                draw (xMin, yMin, xMax, yMid)\n                rect (xMin, yMid, xMax, yMax)\n            else:\n                rect (xMin, yMin, xMax, yMid)\n                draw (xMin, yMid, xMax, yMax)\n    else:\n        rect (xMin, yMin, xMax, yMax)\n        ontimer (lambda: (print (), clear (), draw ()), 2000)\ndraw ()\ndone ()     \n\n"
	],
	"mappings
}