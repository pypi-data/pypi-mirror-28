file: Module 
	body: list 
		element: ImportFrom 
			module: str = org.transcrypt.stubs.browser
			names: list 
				element: alias 
					name: str = __pragma__
					asname: NoneType = None
			level: int = 0
		element: ClassDef 
			name: str = Iterable
			bases: list 
			keywords: list 
			body: list 
				element: FunctionDef 
					name: str = __init__
					args: arguments 
						args: list 
							element: arg 
								arg: str = self
								annotation: NoneType = None
							element: arg 
								arg: str = i
								annotation: NoneType = None
						vararg: NoneType = None
						kwonlyargs: list 
						kw_defaults: list 
						kwarg: NoneType = None
						defaults: list 
					body: list 
						element: Assign 
							targets: list 
								element: Attribute 
									value: Name 
										id: str = self
										ctx: Load 
									attr: str = aList
									ctx: Store 
							value: Call 
								func: Name 
									id: str = range
									ctx: Load 
								args: list 
									element: Num 
										n: int = 0
									element: Num 
										n: int = 50
									element: Name 
										id: str = i
										ctx: Load 
								keywords: list 
					decorator_list: list 
					returns: NoneType = None
				element: FunctionDef 
					name: str = __iter__
					args: arguments 
						args: list 
							element: arg 
								arg: str = self
								annotation: NoneType = None
						vararg: NoneType = None
						kwonlyargs: list 
						kw_defaults: list 
						kwarg: NoneType = None
						defaults: list 
					body: list 
						element: Return 
							value: Call 
								func: Name 
									id: str = Iterator
									ctx: Load 
								args: list 
									element: Name 
										id: str = self
										ctx: Load 
								keywords: list 
					decorator_list: list 
					returns: NoneType = None
			decorator_list: list 
		element: ClassDef 
			name: str = Iterator
			bases: list 
			keywords: list 
			body: list 
				element: FunctionDef 
					name: str = __init__
					args: arguments 
						args: list 
							element: arg 
								arg: str = self
								annotation: NoneType = None
							element: arg 
								arg: str = iterable
								annotation: NoneType = None
						vararg: NoneType = None
						kwonlyargs: list 
						kw_defaults: list 
						kwarg: NoneType = None
						defaults: list 
					body: list 
						element: Assign 
							targets: list 
								element: Attribute 
									value: Name 
										id: str = self
										ctx: Load 
									attr: str = iterable
									ctx: Store 
							value: Name 
								id: str = iterable
								ctx: Load 
						element: Assign 
							targets: list 
								element: Attribute 
									value: Name 
										id: str = self
										ctx: Load 
									attr: str = index
									ctx: Store 
							value: UnaryOp 
								op: USub 
								operand: Num 
									n: int = 1
					decorator_list: list 
					returns: NoneType = None
				element: FunctionDef 
					name: str = __next__
					args: arguments 
						args: list 
							element: arg 
								arg: str = self
								annotation: NoneType = None
						vararg: NoneType = None
						kwonlyargs: list 
						kw_defaults: list 
						kwarg: NoneType = None
						defaults: list 
					body: list 
						element: AugAssign 
							target: Attribute 
								value: Name 
									id: str = self
									ctx: Load 
								attr: str = index
								ctx: Store 
							op: Add 
							value: Num 
								n: int = 1
						element: If 
							test: Compare 
								left: Attribute 
									value: Name 
										id: str = self
										ctx: Load 
									attr: str = index
									ctx: Load 
								ops: list 
									element: Gt 
								comparators: list 
									element: Num 
										n: int = 5
							body: list 
								element: Raise 
									exc: Call 
										func: Name 
											id: str = StopIteration
											ctx: Load 
										args: list 
										keywords: list 
									cause: NoneType = None
							orelse: list 
						element: Return 
							value: Subscript 
								value: Attribute 
									value: Attribute 
										value: Name 
											id: str = self
											ctx: Load 
										attr: str = iterable
										ctx: Load 
									attr: str = aList
									ctx: Load 
								slice: Index 
									value: Attribute 
										value: Name 
											id: str = self
											ctx: Load 
										attr: str = index
										ctx: Load 
								ctx: Load 
					decorator_list: list 
					returns: NoneType = None
				element: FunctionDef 
					name: str = __iter__
					args: arguments 
						args: list 
							element: arg 
								arg: str = self
								annotation: NoneType = None
						vararg: NoneType = None
						kwonlyargs: list 
						kw_defaults: list 
						kwarg: NoneType = None
						defaults: list 
					body: list 
						element: Return 
							value: Name 
								id: str = self
								ctx: Load 
					decorator_list: list 
					returns: NoneType = None
			decorator_list: list 
		element: FunctionDef 
			name: str = exhaustableGenerator
			args: arguments 
				args: list 
					element: arg 
						arg: str = i
						annotation: NoneType = None
				vararg: NoneType = None
				kwonlyargs: list 
				kw_defaults: list 
				kwarg: NoneType = None
				defaults: list 
			body: list 
				element: For 
					target: Name 
						id: str = i
						ctx: Store 
					iter: Call 
						func: Name 
							id: str = range
							ctx: Load 
						args: list 
							element: Num 
								n: int = 5
						keywords: list 
					body: list 
						element: Expr 
							value: Yield 
								value: BinOp 
									left: Num 
										n: int = 2
									op: Mult 
									right: Name 
										id: str = i
										ctx: Load 
					orelse: list 
			decorator_list: list 
			returns: NoneType = None
		element: FunctionDef 
			name: str = run
			args: arguments 
				args: list 
					element: arg 
						arg: str = autoTester
						annotation: NoneType = None
				vararg: NoneType = None
				kwonlyargs: list 
				kw_defaults: list 
				kwarg: NoneType = None
				defaults: list 
			body: list 
				element: Assign 
					targets: list 
						element: Name 
							id: str = exhaustableGenExp
							ctx: Store 
					value: GeneratorExp 
						elt: BinOp 
							left: BinOp 
								left: Name 
									id: str = a
									ctx: Load 
								op: Mult 
								right: Name 
									id: str = a
									ctx: Load 
							op: Mult 
							right: Name 
								id: str = a
								ctx: Load 
						generators: list 
							element: comprehension 
								target: Name 
									id: str = a
									ctx: Store 
								iter: List 
									elts: list 
										element: Num 
											n: int = 10
										element: Num 
											n: int = 20
										element: Num 
											n: int = 30
									ctx: Load 
								ifs: list 
								is_async: int = 0
				element: Assign 
					targets: list 
						element: Name 
							id: str = iterables
							ctx: Store 
					value: List 
						elts: list 
							element: Call 
								func: Name 
									id: str = Iterable
									ctx: Load 
								args: list 
									element: Num 
										n: int = 7
								keywords: list 
							element: Call 
								func: Name 
									id: str = exhaustableGenerator
									ctx: Load 
								args: list 
									element: Num 
										n: int = 5
								keywords: list 
							element: ListComp 
								elt: BinOp 
									left: Name 
										id: str = i
										ctx: Load 
									op: Mult 
									right: Num 
										n: int = 3
								generators: list 
									element: comprehension 
										target: Name 
											id: str = i
											ctx: Store 
										iter: Call 
											func: Name 
												id: str = range
												ctx: Load 
											args: list 
												element: Num 
													n: int = 5
											keywords: list 
										ifs: list 
										is_async: int = 0
							element: Name 
								id: str = exhaustableGenExp
								ctx: Load 
						ctx: Load 
				element: For 
					target: Name 
						id: str = iterable
						ctx: Store 
					iter: Name 
						id: str = iterables
						ctx: Load 
					body: list 
						element: Expr 
							value: Call 
								func: Attribute 
									value: Name 
										id: str = autoTester
										ctx: Load 
									attr: str = check
									ctx: Load 
								args: list 
									element: Str 
										s: str = [1]
								keywords: list 
						element: Assign 
							targets: list 
								element: Name 
									id: str = iterator
									ctx: Store 
							value: Call 
								func: Name 
									id: str = iter
									ctx: Load 
								args: list 
									element: Name 
										id: str = iterable
										ctx: Load 
								keywords: list 
						element: Try 
							body: list 
								element: While 
									test: NameConstant 
										value: bool = True
									body: list 
										element: Expr 
											value: Call 
												func: Attribute 
													value: Name 
														id: str = autoTester
														ctx: Load 
													attr: str = check
													ctx: Load 
												args: list 
													element: Call 
														func: Name 
															id: str = next
															ctx: Load 
														args: list 
															element: Name 
																id: str = iterator
																ctx: Load 
														keywords: list 
												keywords: list 
									orelse: list 
							handlers: list 
								element: ExceptHandler 
									type: Name 
										id: str = Exception
										ctx: Load 
									name: str = exception
									body: list 
										element: Expr 
											value: Call 
												func: Attribute 
													value: Name 
														id: str = autoTester
														ctx: Load 
													attr: str = check
													ctx: Load 
												args: list 
													element: Attribute 
														value: Attribute 
															value: Name 
																id: str = exception
																ctx: Load 
															attr: str = __class__
															ctx: Load 
														attr: str = __name__
														ctx: Load 
												keywords: list 
							orelse: list 
							finalbody: list 
						element: Expr 
							value: Call 
								func: Attribute 
									value: Name 
										id: str = autoTester
										ctx: Load 
									attr: str = check
									ctx: Load 
								args: list 
									element: Str 
										s: str = [2]
								keywords: list 
						element: Assign 
							targets: list 
								element: Name 
									id: str = iterator
									ctx: Store 
							value: Call 
								func: Name 
									id: str = iter
									ctx: Load 
								args: list 
									element: Name 
										id: str = iterable
										ctx: Load 
								keywords: list 
						element: Try 
							body: list 
								element: While 
									test: NameConstant 
										value: bool = True
									body: list 
										element: Expr 
											value: Call 
												func: Attribute 
													value: Name 
														id: str = autoTester
														ctx: Load 
													attr: str = check
													ctx: Load 
												args: list 
													element: Call 
														func: Name 
															id: str = next
															ctx: Load 
														args: list 
															element: Name 
																id: str = iterator
																ctx: Load 
														keywords: list 
												keywords: list 
									orelse: list 
							handlers: list 
								element: ExceptHandler 
									type: Name 
										id: str = Exception
										ctx: Load 
									name: str = exception
									body: list 
										element: Expr 
											value: Call 
												func: Attribute 
													value: Name 
														id: str = autoTester
														ctx: Load 
													attr: str = check
													ctx: Load 
												args: list 
													element: Attribute 
														value: Attribute 
															value: Name 
																id: str = exception
																ctx: Load 
															attr: str = __class__
															ctx: Load 
														attr: str = __name__
														ctx: Load 
												keywords: list 
							orelse: list 
							finalbody: list 
					orelse: list 
				element: For 
					target: Name 
						id: str = iterable
						ctx: Store 
					iter: Name 
						id: str = iterables
						ctx: Load 
					body: list 
						element: Expr 
							value: Call 
								func: Attribute 
									value: Name 
										id: str = autoTester
										ctx: Load 
									attr: str = check
									ctx: Load 
								args: list 
									element: Str 
										s: str = [3]
								keywords: list 
						element: For 
							target: Name 
								id: str = n
								ctx: Store 
							iter: Name 
								id: str = iterable
								ctx: Load 
							body: list 
								element: Expr 
									value: Call 
										func: Attribute 
											value: Name 
												id: str = autoTester
												ctx: Load 
											attr: str = check
											ctx: Load 
										args: list 
											element: Name 
												id: str = n
												ctx: Load 
										keywords: list 
							orelse: list 
						element: Expr 
							value: Call 
								func: Attribute 
									value: Name 
										id: str = autoTester
										ctx: Load 
									attr: str = check
									ctx: Load 
								args: list 
									element: Str 
										s: str = [4]
								keywords: list 
						element: For 
							target: Name 
								id: str = n
								ctx: Store 
							iter: Name 
								id: str = iterable
								ctx: Load 
							body: list 
								element: Expr 
									value: Call 
										func: Attribute 
											value: Name 
												id: str = autoTester
												ctx: Load 
											attr: str = check
											ctx: Load 
										args: list 
											element: Name 
												id: str = n
												ctx: Load 
										keywords: list 
							orelse: list 
					orelse: list 
				element: Assign 
					targets: list 
						element: Name 
							id: str = a
							ctx: Store 
					value: Num 
						n: int = 0
				element: Assign 
					targets: list 
						element: Name 
							id: str = vals
							ctx: Store 
					value: List 
						elts: list 
							element: Num 
								n: int = 1
							element: Num 
								n: int = 2
							element: Num 
								n: int = 3
						ctx: Load 
				element: Assign 
					targets: list 
						element: Name 
							id: str = ret
							ctx: Store 
					value: Call 
						func: Name 
							id: str = iter
							ctx: Load 
						args: list 
							element: Name 
								id: str = vals
								ctx: Load 
						keywords: list 
				element: For 
					target: Name 
						id: str = m
						ctx: Store 
					iter: Name 
						id: str = ret
						ctx: Load 
					body: list 
						element: AugAssign 
							target: Name 
								id: str = a
								ctx: Store 
							op: Add 
							value: Name 
								id: str = m
								ctx: Load 
					orelse: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Name 
								id: str = a
								ctx: Load 
						keywords: list 
				element: Expr 
					value: Call 
						func: Name 
							id: str = __pragma__
							ctx: Load 
						args: list 
							element: Str 
								s: str = gsend
						keywords: list 
				element: FunctionDef 
					name: str = test0
					args: arguments 
						args: list 
						vararg: NoneType = None
						kwonlyargs: list 
						kw_defaults: list 
						kwarg: NoneType = None
						defaults: list 
					body: list 
						element: Assign 
							targets: list 
								element: Name 
									id: str = r
									ctx: Store 
							value: Num 
								n: int = 0
						element: While 
							test: NameConstant 
								value: bool = True
							body: list 
								element: Assign 
									targets: list 
										element: Name 
											id: str = r
											ctx: Store 
									value: BinOp 
										left: Name 
											id: str = r
											ctx: Load 
										op: Add 
										right: Yield 
											value: Name 
												id: str = r
												ctx: Load 
							orelse: list 
					decorator_list: list 
					returns: NoneType = None
				element: Assign 
					targets: list 
						element: Name 
							id: str = gen0
							ctx: Store 
					value: Call 
						func: Name 
							id: str = test0
							ctx: Load 
						args: list 
						keywords: list 
				element: Expr 
					value: Call 
						func: Name 
							id: str = next
							ctx: Load 
						args: list 
							element: Name 
								id: str = gen0
								ctx: Load 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Call 
								func: Attribute 
									value: Name 
										id: str = gen0
										ctx: Load 
									attr: str = send
									ctx: Load 
								args: list 
									element: Num 
										n: int = 1
								keywords: list 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Call 
								func: Attribute 
									value: Name 
										id: str = gen0
										ctx: Load 
									attr: str = send
									ctx: Load 
								args: list 
									element: Num 
										n: int = 2
								keywords: list 
						keywords: list 
				element: FunctionDef 
					name: str = test1
					args: arguments 
						args: list 
						vararg: NoneType = None
						kwonlyargs: list 
						kw_defaults: list 
						kwarg: NoneType = None
						defaults: list 
					body: list 
						element: Assign 
							targets: list 
								element: Name 
									id: str = r
									ctx: Store 
							value: Num 
								n: int = 0
						element: While 
							test: NameConstant 
								value: bool = True
							body: list 
								element: Assign 
									targets: list 
										element: Name 
											id: str = r
											ctx: Store 
									value: BinOp 
										left: Yield 
											value: Name 
												id: str = r
												ctx: Load 
										op: Add 
										right: Name 
											id: str = r
											ctx: Load 
							orelse: list 
					decorator_list: list 
					returns: NoneType = None
				element: Assign 
					targets: list 
						element: Name 
							id: str = gen1
							ctx: Store 
					value: Call 
						func: Name 
							id: str = test1
							ctx: Load 
						args: list 
						keywords: list 
				element: Expr 
					value: Call 
						func: Name 
							id: str = next
							ctx: Load 
						args: list 
							element: Name 
								id: str = gen1
								ctx: Load 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Call 
								func: Attribute 
									value: Name 
										id: str = gen1
										ctx: Load 
									attr: str = send
									ctx: Load 
								args: list 
									element: Num 
										n: int = 3
								keywords: list 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Call 
								func: Attribute 
									value: Name 
										id: str = gen1
										ctx: Load 
									attr: str = send
									ctx: Load 
								args: list 
									element: Num 
										n: int = 4
								keywords: list 
						keywords: list 
				element: FunctionDef 
					name: str = subGenerator
					args: arguments 
						args: list 
						vararg: NoneType = None
						kwonlyargs: list 
						kw_defaults: list 
						kwarg: NoneType = None
						defaults: list 
					body: list 
						element: Expr 
							value: Yield 
								value: Num 
									n: int = 27
						element: Expr 
							value: Yield 
								value: Num 
									n: int = 37
						element: Expr 
							value: Yield 
								value: Num 
									n: int = 47
					decorator_list: list 
					returns: NoneType = None
				element: FunctionDef 
					name: str = mainGenerator
					args: arguments 
						args: list 
						vararg: NoneType = None
						kwonlyargs: list 
						kw_defaults: list 
						kwarg: NoneType = None
						defaults: list 
					body: list 
						element: Expr 
							value: Yield 
								value: Num 
									n: int = 17
						element: Expr 
							value: YieldFrom 
								value: Call 
									func: Name 
										id: str = subGenerator
										ctx: Load 
									args: list 
									keywords: list 
						element: Expr 
							value: Yield 
								value: Num 
									n: int = 57
					decorator_list: list 
					returns: NoneType = None
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Starred 
								value: ListComp 
									elt: Name 
										id: str = i
										ctx: Load 
									generators: list 
										element: comprehension 
											target: Name 
												id: str = i
												ctx: Store 
											iter: Call 
												func: Name 
													id: str = mainGenerator
													ctx: Load 
												args: list 
												keywords: list 
											ifs: list 
											is_async: int = 0
								ctx: Load 
						keywords: list 
				element: FunctionDef 
					name: str = subCoroutine
					args: arguments 
						args: list 
						vararg: NoneType = None
						kwonlyargs: list 
						kw_defaults: list 
						kwarg: NoneType = None
						defaults: list 
					body: list 
						element: Expr 
							value: Call 
								func: Attribute 
									value: Name 
										id: str = autoTester
										ctx: Load 
									attr: str = check
									ctx: Load 
								args: list 
									element: Num 
										n: int = 38
								keywords: list 
						element: Expr 
							value: Yield 
								value: NoneType = None
						element: Expr 
							value: Call 
								func: Attribute 
									value: Name 
										id: str = autoTester
										ctx: Load 
									attr: str = check
									ctx: Load 
								args: list 
									element: Num 
										n: int = 48
								keywords: list 
						element: Expr 
							value: Yield 
								value: NoneType = None
						element: Expr 
							value: Call 
								func: Attribute 
									value: Name 
										id: str = autoTester
										ctx: Load 
									attr: str = check
									ctx: Load 
								args: list 
									element: Num 
										n: int = 58
								keywords: list 
						element: Expr 
							value: Yield 
								value: NoneType = None
						element: Expr 
							value: Call 
								func: Attribute 
									value: Name 
										id: str = autoTester
										ctx: Load 
									attr: str = check
									ctx: Load 
								args: list 
									element: Num 
										n: int = 68
								keywords: list 
					decorator_list: list 
					returns: NoneType = None
				element: FunctionDef 
					name: str = mainCoroutine
					args: arguments 
						args: list 
						vararg: NoneType = None
						kwonlyargs: list 
						kw_defaults: list 
						kwarg: NoneType = None
						defaults: list 
					body: list 
						element: Expr 
							value: Call 
								func: Attribute 
									value: Name 
										id: str = autoTester
										ctx: Load 
									attr: str = check
									ctx: Load 
								args: list 
									element: Num 
										n: int = 18
								keywords: list 
						element: Expr 
							value: Yield 
								value: NoneType = None
						element: Expr 
							value: Call 
								func: Attribute 
									value: Name 
										id: str = autoTester
										ctx: Load 
									attr: str = check
									ctx: Load 
								args: list 
									element: Num 
										n: int = 28
								keywords: list 
						element: Expr 
							value: YieldFrom 
								value: Call 
									func: Name 
										id: str = subCoroutine
										ctx: Load 
									args: list 
									keywords: list 
						element: Expr 
							value: Call 
								func: Attribute 
									value: Name 
										id: str = autoTester
										ctx: Load 
									attr: str = check
									ctx: Load 
								args: list 
									element: Num 
										n: int = 78
								keywords: list 
						element: Expr 
							value: Yield 
								value: NoneType = None
						element: Expr 
							value: Call 
								func: Attribute 
									value: Name 
										id: str = autoTester
										ctx: Load 
									attr: str = check
									ctx: Load 
								args: list 
									element: Num 
										n: int = 88
								keywords: list 
					decorator_list: list 
					returns: NoneType = None
				element: Assign 
					targets: list 
						element: Name 
							id: str = m
							ctx: Store 
					value: Call 
						func: Name 
							id: str = mainCoroutine
							ctx: Load 
						args: list 
						keywords: list 
				element: For 
					target: Name 
						id: str = i
						ctx: Store 
					iter: Call 
						func: Name 
							id: str = range
							ctx: Load 
						args: list 
							element: Num 
								n: int = 5
						keywords: list 
					body: list 
						element: Expr 
							value: Call 
								func: Attribute 
									value: Name 
										id: str = m
										ctx: Load 
									attr: str = send
									ctx: Load 
								args: list 
									element: NameConstant 
										value: NoneType = None
								keywords: list 
					orelse: list 
			decorator_list: list 
			returns: NoneType = None