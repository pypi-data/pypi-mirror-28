{
	"version": 3,
	"file": "D:/activ_tosh/geatec/transcrypt/qquick/Transcrypt/transcrypt/development/automated_tests/transcrypt/byte_arrays/__javascript__/byte_arrays.mod.js",
	"sources": [
		"D:/activ_tosh/geatec/transcrypt/qquick/Transcrypt/transcrypt/development/automated_tests/transcrypt/byte_arrays/__init__.py"
	],
	"sourcesContent": [
		"def run (autoTester):\n    b = b'bike'\n    s = bytes ('shop', 'utf8')\n    e = b''\n    bb = bytearray ([0, 1, 2, 3, 4])\n    bc = bytes ((5, 6, 7, 8, 9))\n\n    # __pragma__ ('opov')\n    bps = b + b'pump' + s\n    bps3 = 3 * bps + b'\\0'\n    aBps3 = bps * 3 + b'\\0'\n    l = [1, 2, 3] + [4, 5, 6]\n    # __pragma__ ('noopov')\n\n    def formatCheck (aBytes):\n        autoTester.check ([int (aByte) for aByte in aBytes])\n    \n    formatCheck (b)\n    formatCheck (s)\n    formatCheck (e)\n    formatCheck (bb)\n    formatCheck (bc)\n    formatCheck (bps)\n    formatCheck (bps3)\n    formatCheck (aBps3)\n\n    # __pragma__ ('opov')\n    formatCheck (bb + bc)\n    formatCheck (bytearray ('ding', 'utf8') + b'dang' + bytes ('dong', 'utf8'))\n    # __pragma__ ('noopov')\n\n    formatCheck (l)"
	],
	"mappings": "AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA"
}