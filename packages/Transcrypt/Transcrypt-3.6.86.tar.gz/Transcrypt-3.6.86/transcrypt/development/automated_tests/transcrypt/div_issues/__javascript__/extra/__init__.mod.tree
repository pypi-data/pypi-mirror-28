file: Module 
	body: list 
		element: ImportFrom 
			module: str = org.transcrypt.stubs.browser
			names: list 
				element: alias 
					name: str = __pragma__
					asname: NoneType = None
				element: alias 
					name: str = __new__
					asname: NoneType = None
				element: alias 
					name: str = __envir__
					asname: NoneType = None
				element: alias 
					name: str = __symbols__
					asname: NoneType = None
			level: int = 0
		element: ImportFrom 
			module: str = div_issues.issue55
			names: list 
				element: alias 
					name: str = *
					asname: NoneType = None
			level: int = 0
		element: ImportFrom 
			module: str = div_issues.issue387
			names: list 
				element: alias 
					name: str = run387
					asname: NoneType = None
			level: int = 0
		element: FunctionDef 
			name: str = run
			args: arguments 
				args: list 
					element: arg 
						arg: str = autoTester
						annotation: NoneType = None
				vararg: NoneType = None
				kwonlyargs: list 
				kw_defaults: list 
				kwarg: NoneType = None
				defaults: list 
			body: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Str 
								s: str = Issue 24
						keywords: list 
				element: Assign 
					targets: list 
						element: Name 
							id: str = switch
							ctx: Store 
					value: NameConstant 
						value: bool = False
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Name 
								id: str = switch
								ctx: Load 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Str 
								s: str = Issue 27
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Call 
								func: Attribute 
									value: List 
										elts: list 
											element: Str 
												s: str = zero
											element: Str 
												s: str = one
											element: Str 
												s: str = two
											element: Str 
												s: str = three
											element: Str 
												s: str = four
										ctx: Load 
									attr: str = index
									ctx: Load 
								args: list 
									element: Str 
										s: str = three
								keywords: list 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Str 
								s: str = Issue 36
						keywords: list 
				element: Assign 
					targets: list 
						element: Name 
							id: str = results
							ctx: Store 
					value: List 
						elts: list 
						ctx: Load 
				element: For 
					target: Name 
						id: str = i
						ctx: Store 
					iter: Call 
						func: Name 
							id: str = range
							ctx: Load 
						args: list 
							element: Num 
								n: int = 10
						keywords: list 
					body: list 
						element: Expr 
							value: Call 
								func: Attribute 
									value: Name 
										id: str = results
										ctx: Load 
									attr: str = append
									ctx: Load 
								args: list 
									element: Call 
										func: Lambda 
											args: arguments 
												args: list 
													element: arg 
														arg: str = j
														annotation: NoneType = None
												vararg: NoneType = None
												kwonlyargs: list 
												kw_defaults: list 
												kwarg: NoneType = None
												defaults: list 
											body: Lambda 
												args: arguments 
													args: list 
													vararg: NoneType = None
													kwonlyargs: list 
													kw_defaults: list 
													kwarg: NoneType = None
													defaults: list 
												body: Name 
													id: str = j
													ctx: Load 
										args: list 
											element: Name 
												id: str = i
												ctx: Load 
										keywords: list 
								keywords: list 
					orelse: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: ListComp 
								elt: Call 
									func: Name 
										id: str = result
										ctx: Load 
									args: list 
									keywords: list 
								generators: list 
									element: comprehension 
										target: Name 
											id: str = result
											ctx: Store 
										iter: Name 
											id: str = results
											ctx: Load 
										ifs: list 
										is_async: int = 0
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Str 
								s: str = Issue 37
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: BinOp 
								left: Num 
									n: int = 15
								op: FloorDiv 
								right: Num 
									n: int = 7
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Str 
								s: str = Issue 40
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: BinOp 
								left: Num 
									n: int = 65
								op: Div 
								right: BinOp 
									left: Num 
										n: int = 5
									op: Mult 
									right: Num 
										n: int = 2
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Str 
								s: str = Issue 50
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: BinOp 
								left: BinOp 
									left: BinOp 
										left: BinOp 
											left: Num 
												n: int = 240
											op: Add 
											right: Num 
												n: int = 30
										op: Sub 
										right: Num 
											n: int = 1
									op: FloorDiv 
									right: Num 
										n: int = 30
								op: Mult 
								right: Num 
									n: int = 30
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Str 
								s: str = Issue 51
						keywords: list 
				element: Assign 
					targets: list 
						element: Name 
							id: str = a
							ctx: Store 
					value: Num 
						n: int = 1
				element: Assign 
					targets: list 
						element: Name 
							id: str = b
							ctx: Store 
					value: Num 
						n: int = 1
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Name 
								id: str = a
								ctx: Load 
							element: Name 
								id: str = b
								ctx: Load 
							element: Compare 
								left: Set 
									elts: list 
										element: Name 
											id: str = a
											ctx: Load 
										element: Name 
											id: str = b
											ctx: Load 
								ops: list 
									element: Eq 
								comparators: list 
									element: Set 
										elts: list 
											element: Num 
												n: int = 1
											element: Num 
												n: int = 2
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Str 
								s: str = Issue 52
						keywords: list 
				element: Assign 
					targets: list 
						element: Tuple 
							elts: list 
								element: Name 
									id: str = switch
									ctx: Store 
								element: Name 
									id: str = case
									ctx: Store 
								element: Name 
									id: str = default
									ctx: Store 
							ctx: Store 
					value: Tuple 
						elts: list 
							element: Str 
								s: str = switch
							element: Str 
								s: str = case
							element: Str 
								s: str = default
						ctx: Load 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Name 
								id: str = switch
								ctx: Load 
							element: Name 
								id: str = case
								ctx: Load 
							element: Name 
								id: str = default
								ctx: Load 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Str 
								s: str = Issue 54
						keywords: list 
				element: Assign 
					targets: list 
						element: Name 
							id: str = aDict
							ctx: Store 
					value: Dict 
						keys: list 
							element: Num 
								n: int = 1
							element: Num 
								n: int = 2
							element: Num 
								n: int = 3
						values: list 
							element: Num 
								n: int = 11
							element: Num 
								n: int = 22
							element: Num 
								n: int = 33
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Name 
								id: str = aDict
								ctx: Load 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = aDict
								ctx: Load 
							attr: str = clear
							ctx: Load 
						args: list 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Name 
								id: str = aDict
								ctx: Load 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Str 
								s: str = Issue 60
						keywords: list 
				element: Assign 
					targets: list 
						element: Name 
							id: str = three
							ctx: Store 
					value: Num 
						n: int = 3
				element: Assign 
					targets: list 
						element: Name 
							id: str = one
							ctx: Store 
					value: BinOp 
						left: Name 
							id: str = three
							ctx: Load 
						op: BitAnd 
						right: Num 
							n: int = 1
				element: Assign 
					targets: list 
						element: Name 
							id: str = seven
							ctx: Store 
					value: BinOp 
						left: Name 
							id: str = three
							ctx: Load 
						op: BitOr 
						right: Num 
							n: int = 4
				element: Assign 
					targets: list 
						element: Name 
							id: str = eight
							ctx: Store 
					value: BinOp 
						left: Name 
							id: str = one
							ctx: Load 
						op: LShift 
						right: Num 
							n: int = 3
				element: Assign 
					targets: list 
						element: Name 
							id: str = four
							ctx: Store 
					value: BinOp 
						left: Name 
							id: str = eight
							ctx: Load 
						op: RShift 
						right: Num 
							n: int = 1
				element: Assign 
					targets: list 
						element: Name 
							id: str = aTrue
							ctx: Store 
					value: Call 
						func: Name 
							id: str = bool
							ctx: Load 
						args: list 
							element: BinOp 
								left: Name 
									id: str = three
									ctx: Load 
								op: BitAnd 
								right: Name 
									id: str = one
									ctx: Load 
						keywords: list 
				element: Assign 
					targets: list 
						element: Name 
							id: str = aFalse
							ctx: Store 
					value: Call 
						func: Name 
							id: str = bool
							ctx: Load 
						args: list 
							element: BinOp 
								left: Name 
									id: str = three
									ctx: Load 
								op: BitAnd 
								right: Name 
									id: str = four
									ctx: Load 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Num 
								n: int = 3
							element: Name 
								id: str = three
								ctx: Load 
							element: Num 
								n: int = 1
							element: Name 
								id: str = one
								ctx: Load 
							element: Num 
								n: int = 7
							element: Name 
								id: str = seven
								ctx: Load 
							element: Num 
								n: int = 8
							element: Name 
								id: str = eight
								ctx: Load 
							element: Num 
								n: int = 4
							element: Name 
								id: str = four
								ctx: Load 
							element: NameConstant 
								value: bool = True
							element: Name 
								id: str = aTrue
								ctx: Load 
							element: NameConstant 
								value: bool = False
							element: Name 
								id: str = aFalse
								ctx: Load 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Str 
								s: str = Issue 65
						keywords: list 
				element: Expr 
					value: Call 
						func: Name 
							id: str = __pragma__
							ctx: Load 
						args: list 
							element: Str 
								s: str = opov
						keywords: list 
				element: Assign 
					targets: list 
						element: Name 
							id: str = aList
							ctx: Store 
					value: List 
						elts: list 
							element: Num 
								n: int = 4
							element: Num 
								n: int = 5
							element: Num 
								n: int = 6
						ctx: Load 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: BinOp 
								left: BinOp 
									left: List 
										elts: list 
											element: Num 
												n: int = 1
											element: Num 
												n: int = 2
											element: Num 
												n: int = 3
										ctx: Load 
									op: Add 
									right: Name 
										id: str = aList
										ctx: Load 
								op: Add 
								right: List 
									elts: list 
										element: Num 
											n: int = 4
										element: Num 
											n: int = 5
										element: Num 
											n: int = 6
									ctx: Load 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: BinOp 
								left: Num 
									n: int = 3
								op: Mult 
								right: List 
									elts: list 
										element: Num 
											n: int = 1
										element: Num 
											n: int = 2
										element: Num 
											n: int = 3
									ctx: Load 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: BinOp 
								left: List 
									elts: list 
										element: Num 
											n: int = 1
										element: Num 
											n: int = 2
										element: Num 
											n: int = 3
									ctx: Load 
								op: Mult 
								right: Num 
									n: int = 3
						keywords: list 
				element: Assign 
					targets: list 
						element: Name 
							id: str = aString
							ctx: Store 
					value: Str 
						s: str = Crocodile
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: BinOp 
								left: BinOp 
									left: Str 
										s: str = Tiger
									op: Add 
									right: Name 
										id: str = aString
										ctx: Load 
								op: Add 
								right: Str 
									s: str = Elephant
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: BinOp 
								left: Num 
									n: int = 3
								op: Mult 
								right: Name 
									id: str = aString
									ctx: Load 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: BinOp 
								left: Name 
									id: str = aString
									ctx: Load 
								op: Mult 
								right: Num 
									n: int = 3
						keywords: list 
				element: Expr 
					value: Call 
						func: Name 
							id: str = __pragma__
							ctx: Load 
						args: list 
							element: Str 
								s: str = noopov
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Str 
								s: str = Issue 76
						keywords: list 
				element: Assign 
					targets: list 
						element: Name 
							id: str = initially17
							ctx: Store 
					value: Num 
						n: int = 17
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Name 
								id: str = initially17
								ctx: Load 
						keywords: list 
				element: AugAssign 
					target: Name 
						id: str = initially17
						ctx: Store 
					op: FloorDiv 
					value: Num 
						n: int = 2
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Name 
								id: str = initially17
								ctx: Load 
						keywords: list 
				element: AugAssign 
					target: Name 
						id: str = initially17
						ctx: Store 
					op: FloorDiv 
					value: Num 
						n: int = 2
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Name 
								id: str = initially17
								ctx: Load 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Str 
								s: str = Issue 112
						keywords: list 
				element: Try 
					body: list 
						element: If 
							test: Compare 
								left: Attribute 
									value: Name 
										id: str = __envir__
										ctx: Load 
									attr: str = executor_name
									ctx: Load 
								ops: list 
									element: Eq 
								comparators: list 
									element: Attribute 
										value: Name 
											id: str = __envir__
											ctx: Load 
										attr: str = transpiler_name
										ctx: Load 
							body: list 
								element: Assign 
									targets: list 
										element: Name 
											id: str = x
											ctx: Store 
									value: Call 
										func: Name 
											id: str = __new__
											ctx: Load 
										args: list 
											element: Call 
												func: Name 
													id: str = Int8Array
													ctx: Load 
												args: list 
													element: Num 
														n: int = 2
												keywords: list 
										keywords: list 
							orelse: list 
								element: Assign 
									targets: list 
										element: Name 
											id: str = x
											ctx: Store 
									value: List 
										elts: list 
											element: NameConstant 
												value: NoneType = None
											element: NameConstant 
												value: NoneType = None
										ctx: Load 
						element: Assign 
							targets: list 
								element: Subscript 
									value: Name 
										id: str = x
										ctx: Load 
									slice: Index 
										value: Num 
											n: int = 0
									ctx: Store 
							value: Num 
								n: int = 3
						element: Assign 
							targets: list 
								element: Subscript 
									value: Name 
										id: str = x
										ctx: Load 
									slice: Index 
										value: Num 
											n: int = 1
									ctx: Store 
							value: Num 
								n: int = 2
						element: For 
							target: Name 
								id: str = i
								ctx: Store 
							iter: Name 
								id: str = x
								ctx: Load 
							body: list 
								element: Expr 
									value: Call 
										func: Attribute 
											value: Name 
												id: str = autoTester
												ctx: Load 
											attr: str = check
											ctx: Load 
										args: list 
											element: Name 
												id: str = i
												ctx: Load 
										keywords: list 
							orelse: list 
						element: If 
							test: Compare 
								left: Str 
									s: str = __esv6__
								ops: list 
									element: In 
								comparators: list 
									element: Name 
										id: str = __symbols__
										ctx: Load 
							body: list 
								element: Assign 
									targets: list 
										element: Name 
											id: str = y
											ctx: Store 
									value: Num 
										n: int = 3
								element: For 
									target: Name 
										id: str = j
										ctx: Store 
									iter: Name 
										id: str = y
										ctx: Load 
									body: list 
										element: Expr 
											value: Call 
												func: Attribute 
													value: Name 
														id: str = autoTester
														ctx: Load 
													attr: str = check
													ctx: Load 
												args: list 
													element: Name 
														id: str = j
														ctx: Load 
												keywords: list 
									orelse: list 
							orelse: list 
					handlers: list 
						element: ExceptHandler 
							type: NoneType = None
							name: NoneType = None
							body: list 
								element: Pass 
					orelse: list 
					finalbody: list 
				element: If 
					test: Compare 
						left: Str 
							s: str = __esv6__
						ops: list 
							element: In 
						comparators: list 
							element: Name 
								id: str = __symbols__
								ctx: Load 
					body: list 
						element: Expr 
							value: Call 
								func: Attribute 
									value: Name 
										id: str = autoTester
										ctx: Load 
									attr: str = check
									ctx: Load 
								args: list 
									element: Str 
										s: str = Issue 122
								keywords: list 
						element: FunctionDef 
							name: str = chunks
							args: arguments 
								args: list 
									element: arg 
										arg: str = aList
										annotation: NoneType = None
									element: arg 
										arg: str = chunkLength
										annotation: NoneType = None
								vararg: NoneType = None
								kwonlyargs: list 
								kw_defaults: list 
								kwarg: NoneType = None
								defaults: list 
							body: list 
								element: For 
									target: Name 
										id: str = index
										ctx: Store 
									iter: Call 
										func: Name 
											id: str = range
											ctx: Load 
										args: list 
											element: Num 
												n: int = 0
											element: Call 
												func: Name 
													id: str = len
													ctx: Load 
												args: list 
													element: Name 
														id: str = aList
														ctx: Load 
												keywords: list 
											element: Name 
												id: str = chunkLength
												ctx: Load 
										keywords: list 
									body: list 
										element: Expr 
											value: Yield 
												value: Subscript 
													value: Name 
														id: str = aList
														ctx: Load 
													slice: Slice 
														lower: Name 
															id: str = index
															ctx: Load 
														upper: BinOp 
															left: Name 
																id: str = index
																ctx: Load 
															op: Add 
															right: Name 
																id: str = chunkLength
																ctx: Load 
														step: NoneType = None
													ctx: Load 
									orelse: list 
							decorator_list: list 
							returns: NoneType = None
						element: For 
							target: Name 
								id: str = chunk
								ctx: Store 
							iter: Call 
								func: Name 
									id: str = chunks
									ctx: Load 
								args: list 
									element: ListComp 
										elt: Call 
											func: Name 
												id: str = chr
												ctx: Load 
											args: list 
												element: BinOp 
													left: Name 
														id: str = index
														ctx: Load 
													op: Add 
													right: Num 
														n: int = 97
											keywords: list 
										generators: list 
											element: comprehension 
												target: Name 
													id: str = index
													ctx: Store 
												iter: Call 
													func: Name 
														id: str = range
														ctx: Load 
													args: list 
														element: Num 
															n: int = 26
													keywords: list 
												ifs: list 
												is_async: int = 0
									element: Num 
										n: int = 10
								keywords: list 
							body: list 
								element: Expr 
									value: Call 
										func: Attribute 
											value: Name 
												id: str = autoTester
												ctx: Load 
											attr: str = check
											ctx: Load 
										args: list 
											element: Name 
												id: str = chunk
												ctx: Load 
										keywords: list 
							orelse: list 
					orelse: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Str 
								s: str = Issue 123
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: BinOp 
								left: Num 
									n: int = 10
								op: Mod 
								right: Num 
									n: int = 3
							element: BinOp 
								left: Num 
									n: int = 10
								op: Mod 
								right: UnaryOp 
									op: USub 
									operand: Num 
										n: int = 3
							element: BinOp 
								left: UnaryOp 
									op: USub 
									operand: Num 
										n: int = 10
								op: Mod 
								right: Num 
									n: int = 3
							element: BinOp 
								left: UnaryOp 
									op: USub 
									operand: Num 
										n: int = 10
								op: Mod 
								right: UnaryOp 
									op: USub 
									operand: Num 
										n: int = 3
							element: BinOp 
								left: Num 
									n: int = 10
								op: Mod 
								right: Num 
									n: int = 10
							element: BinOp 
								left: Num 
									n: int = 10
								op: Mod 
								right: UnaryOp 
									op: USub 
									operand: Num 
										n: int = 10
							element: BinOp 
								left: UnaryOp 
									op: USub 
									operand: Num 
										n: int = 10
								op: Mod 
								right: Num 
									n: int = 10
							element: BinOp 
								left: UnaryOp 
									op: USub 
									operand: Num 
										n: int = 10
								op: Mod 
								right: UnaryOp 
									op: USub 
									operand: Num 
										n: int = 10
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Str 
								s: str = Issue 125
						keywords: list 
				element: Assign 
					targets: list 
						element: Name 
							id: str = abc
							ctx: Store 
					value: Str 
						s: str = abc
				element: For 
					target: Name 
						id: str = index
						ctx: Store 
					iter: Name 
						id: str = abc
						ctx: Load 
					body: list 
						element: Expr 
							value: Call 
								func: Attribute 
									value: Name 
										id: str = autoTester
										ctx: Load 
									attr: str = check
									ctx: Load 
								args: list 
									element: Name 
										id: str = abc
										ctx: Load 
								keywords: list 
					orelse: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Str 
								s: str = Issue 127
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Dict 
								keys: list 
									element: Str 
										s: str = include_docs
									element: Str 
										s: str = keys
									element: Str 
										s: str = limit
								values: list 
									element: Str 
										s: str = true
									element: List 
										elts: list 
											element: Str 
												s: str = key1
											element: Str 
												s: str = key2
										ctx: Load 
									element: Num 
										n: int = 50
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Str 
								s: str = Issue 134
						keywords: list 
				element: Assign 
					targets: list 
						element: Tuple 
							elts: list 
								element: Name 
									id: str = x0
									ctx: Store 
								element: Name 
									id: str = x1
									ctx: Store 
								element: Name 
									id: str = x2
									ctx: Store 
								element: Name 
									id: str = x3
									ctx: Store 
								element: Name 
									id: str = x4
									ctx: Store 
								element: Name 
									id: str = x5
									ctx: Store 
							ctx: Store 
					value: Tuple 
						elts: list 
							element: Num 
								n: int = 5
							element: Num 
								n: int = 12
							element: UnaryOp 
								op: USub 
								operand: Num 
									n: int = 5
							element: UnaryOp 
								op: USub 
								operand: Num 
									n: int = 5
							element: Num 
								n: int = 0
							element: Num 
								n: int = 0
						ctx: Load 
				element: AugAssign 
					target: Name 
						id: str = x0
						ctx: Store 
					op: Mod 
					value: Num 
						n: int = 10
				element: AugAssign 
					target: Name 
						id: str = x1
						ctx: Store 
					op: Mod 
					value: Num 
						n: int = 5
				element: AugAssign 
					target: Name 
						id: str = x2
						ctx: Store 
					op: Mod 
					value: Num 
						n: int = 2
				element: AugAssign 
					target: Name 
						id: str = x3
						ctx: Store 
					op: Mod 
					value: UnaryOp 
						op: USub 
						operand: Num 
							n: int = 3
				element: AugAssign 
					target: Name 
						id: str = x4
						ctx: Store 
					op: Mod 
					value: Num 
						n: int = 1
				element: AugAssign 
					target: Name 
						id: str = x5
						ctx: Store 
					op: Mod 
					value: UnaryOp 
						op: USub 
						operand: Num 
							n: int = 1000
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Name 
								id: str = x0
								ctx: Load 
							element: Name 
								id: str = x1
								ctx: Load 
							element: Name 
								id: str = x2
								ctx: Load 
							element: Name 
								id: str = x3
								ctx: Load 
							element: Name 
								id: str = x4
								ctx: Load 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Str 
								s: str = Issue 136
						keywords: list 
				element: Assign 
					targets: list 
						element: Name 
							id: str = aDict
							ctx: Store 
					value: Dict 
						keys: list 
							element: Str 
								s: str = a
							element: Str 
								s: str = b
						values: list 
							element: Str 
								s: str = ape
							element: Str 
								s: str = banana
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Call 
								func: Attribute 
									value: Name 
										id: str = aDict
										ctx: Load 
									attr: str = get
									ctx: Load 
								args: list 
									element: Str 
										s: str = a
									element: Str 
										s: str = noApe
								keywords: list 
							element: Call 
								func: Attribute 
									value: Name 
										id: str = aDict
										ctx: Load 
									attr: str = get
									ctx: Load 
								args: list 
									element: Str 
										s: str = b
								keywords: list 
							element: Call 
								func: Attribute 
									value: Name 
										id: str = aDict
										ctx: Load 
									attr: str = get
									ctx: Load 
								args: list 
									element: Str 
										s: str = c
									element: Str 
										s: str = noCarot
								keywords: list 
							element: Call 
								func: Attribute 
									value: Name 
										id: str = aDict
										ctx: Load 
									attr: str = get
									ctx: Load 
								args: list 
									element: Str 
										s: str = d
								keywords: list 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Str 
								s: str = Issue 144
						keywords: list 
				element: Expr 
					value: Call 
						func: Name 
							id: str = __pragma__
							ctx: Load 
						args: list 
							element: Str 
								s: str = opov
						keywords: list 
				element: Assign 
					targets: list 
						element: Name 
							id: str = aList
							ctx: Store 
					value: ListComp 
						elt: Name 
							id: str = x
							ctx: Load 
						generators: list 
							element: comprehension 
								target: Name 
									id: str = x
									ctx: Store 
								iter: List 
									elts: list 
										element: Num 
											n: int = 1
										element: Num 
											n: int = 2
										element: Num 
											n: int = 3
									ctx: Load 
								ifs: list 
								is_async: int = 0
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Name 
								id: str = aList
								ctx: Load 
						keywords: list 
				element: Expr 
					value: Call 
						func: Name 
							id: str = __pragma__
							ctx: Load 
						args: list 
							element: Str 
								s: str = noopov
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Str 
								s: str = <br><br>Issue 145<br>
						keywords: list 
				element: ClassDef 
					name: str = SortTest
					bases: list 
					keywords: list 
					body: list 
						element: FunctionDef 
							name: str = __init__
							args: arguments 
								args: list 
									element: arg 
										arg: str = self
										annotation: NoneType = None
								vararg: NoneType = None
								kwonlyargs: list 
								kw_defaults: list 
								kwarg: NoneType = None
								defaults: list 
							body: list 
								element: Assign 
									targets: list 
										element: Attribute 
											value: Name 
												id: str = self
												ctx: Load 
											attr: str = alphabet
											ctx: Store 
									value: Str 
										s: str = abcdefghijklmnopqrstuvwxyz
								element: Assign 
									targets: list 
										element: Attribute 
											value: Name 
												id: str = self
												ctx: Load 
											attr: str = nChars
											ctx: Store 
									value: Num 
										n: int = 10
								element: Assign 
									targets: list 
										element: Attribute 
											value: Name 
												id: str = self
												ctx: Load 
											attr: str = nCols
											ctx: Store 
									value: Num 
										n: int = 10
								element: Assign 
									targets: list 
										element: Attribute 
											value: Name 
												id: str = self
												ctx: Load 
											attr: str = nRows
											ctx: Store 
									value: Num 
										n: int = 30
								element: Assign 
									targets: list 
										element: Attribute 
											value: Name 
												id: str = self
												ctx: Load 
											attr: str = pseudoRandom
											ctx: Store 
									value: Num 
										n: int = 0
								element: FunctionDef 
									name: str = randomWord
									args: arguments 
										args: list 
										vararg: NoneType = None
										kwonlyargs: list 
										kw_defaults: list 
										kwarg: NoneType = None
										defaults: list 
									body: list 
										element: Assign 
											targets: list 
												element: Name 
													id: str = word
													ctx: Store 
											value: Str 
												s: str = 
										element: For 
											target: Name 
												id: str = iChar
												ctx: Store 
											iter: Call 
												func: Name 
													id: str = range
													ctx: Load 
												args: list 
													element: Attribute 
														value: Name 
															id: str = self
															ctx: Load 
														attr: str = nChars
														ctx: Load 
												keywords: list 
											body: list 
												element: Assign 
													targets: list 
														element: Attribute 
															value: Name 
																id: str = self
																ctx: Load 
															attr: str = pseudoRandom
															ctx: Store 
													value: BinOp 
														left: BinOp 
															left: BinOp 
																left: Num 
																	n: int = 81212
																op: Mult 
																right: Attribute 
																	value: Name 
																		id: str = self
																		ctx: Load 
																	attr: str = pseudoRandom
																	ctx: Load 
															op: Add 
															right: Num 
																n: int = 28411
														op: Mod 
														right: Num 
															n: int = 134456
												element: AugAssign 
													target: Name 
														id: str = word
														ctx: Store 
													op: Add 
													value: Subscript 
														value: Attribute 
															value: Name 
																id: str = self
																ctx: Load 
															attr: str = alphabet
															ctx: Load 
														slice: Index 
															value: BinOp 
																left: Attribute 
																	value: Name 
																		id: str = self
																		ctx: Load 
																	attr: str = pseudoRandom
																	ctx: Load 
																op: Mod 
																right: Num 
																	n: int = 26
														ctx: Load 
											orelse: list 
										element: Return 
											value: Name 
												id: str = word
												ctx: Load 
									decorator_list: list 
									returns: NoneType = None
								element: Assign 
									targets: list 
										element: Attribute 
											value: Name 
												id: str = self
												ctx: Load 
											attr: str = rows
											ctx: Store 
									value: ListComp 
										elt: ListComp 
											elt: Call 
												func: Name 
													id: str = randomWord
													ctx: Load 
												args: list 
												keywords: list 
											generators: list 
												element: comprehension 
													target: Name 
														id: str = iCol
														ctx: Store 
													iter: Call 
														func: Name 
															id: str = range
															ctx: Load 
														args: list 
															element: Attribute 
																value: Name 
																	id: str = self
																	ctx: Load 
																attr: str = nCols
																ctx: Load 
														keywords: list 
													ifs: list 
													is_async: int = 0
										generators: list 
											element: comprehension 
												target: Name 
													id: str = iRow
													ctx: Store 
												iter: Call 
													func: Name 
														id: str = range
														ctx: Load 
													args: list 
														element: Attribute 
															value: Name 
																id: str = self
																ctx: Load 
															attr: str = nRows
															ctx: Load 
													keywords: list 
												ifs: list 
												is_async: int = 0
							decorator_list: list 
							returns: NoneType = None
						element: FunctionDef 
							name: str = sort
							args: arguments 
								args: list 
									element: arg 
										arg: str = self
										annotation: NoneType = None
								vararg: NoneType = None
								kwonlyargs: list 
								kw_defaults: list 
								kwarg: NoneType = None
								defaults: list 
							body: list 
								element: For 
									target: Name 
										id: str = iCol
										ctx: Store 
									iter: Call 
										func: Name 
											id: str = reversed
											ctx: Load 
										args: list 
											element: Call 
												func: Name 
													id: str = range
													ctx: Load 
												args: list 
													element: Attribute 
														value: Name 
															id: str = self
															ctx: Load 
														attr: str = nCols
														ctx: Load 
												keywords: list 
										keywords: list 
									body: list 
										element: Expr 
											value: Call 
												func: Attribute 
													value: Attribute 
														value: Name 
															id: str = self
															ctx: Load 
														attr: str = rows
														ctx: Load 
													attr: str = sort
													ctx: Load 
												args: list 
												keywords: list 
													element: keyword 
														arg: str = key
														value: Lambda 
															args: arguments 
																args: list 
																	element: arg 
																		arg: str = row
																		annotation: NoneType = None
																vararg: NoneType = None
																kwonlyargs: list 
																kw_defaults: list 
																kwarg: NoneType = None
																defaults: list 
															body: Subscript 
																value: Name 
																	id: str = row
																	ctx: Load 
																slice: Index 
																	value: Name 
																		id: str = iCol
																		ctx: Load 
																ctx: Load 
									orelse: list 
							decorator_list: list 
							returns: NoneType = None
					decorator_list: list 
				element: Assign 
					targets: list 
						element: Name 
							id: str = sortTest
							ctx: Store 
					value: Call 
						func: Name 
							id: str = SortTest
							ctx: Load 
						args: list 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Str 
								s: str = <br>Unsorted:<br>
						keywords: list 
				element: For 
					target: Name 
						id: str = row
						ctx: Store 
					iter: Attribute 
						value: Name 
							id: str = sortTest
							ctx: Load 
						attr: str = rows
						ctx: Load 
					body: list 
						element: Expr 
							value: Call 
								func: Attribute 
									value: Name 
										id: str = autoTester
										ctx: Load 
									attr: str = check
									ctx: Load 
								args: list 
									element: Call 
										func: Attribute 
											value: Str 
												s: str = {}<br>
											attr: str = format
											ctx: Load 
										args: list 
											element: Call 
												func: Attribute 
													value: Str 
														s: str = ,
													attr: str = join
													ctx: Load 
												args: list 
													element: ListComp 
														elt: Name 
															id: str = word
															ctx: Load 
														generators: list 
															element: comprehension 
																target: Name 
																	id: str = word
																	ctx: Store 
																iter: Name 
																	id: str = row
																	ctx: Load 
																ifs: list 
																is_async: int = 0
												keywords: list 
										keywords: list 
								keywords: list 
					orelse: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = sortTest
								ctx: Load 
							attr: str = sort
							ctx: Load 
						args: list 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Str 
								s: str = <br>Sorted:<br>
						keywords: list 
				element: For 
					target: Name 
						id: str = row
						ctx: Store 
					iter: Attribute 
						value: Name 
							id: str = sortTest
							ctx: Load 
						attr: str = rows
						ctx: Load 
					body: list 
						element: Expr 
							value: Call 
								func: Attribute 
									value: Name 
										id: str = autoTester
										ctx: Load 
									attr: str = check
									ctx: Load 
								args: list 
									element: Call 
										func: Attribute 
											value: Str 
												s: str = {}<br>
											attr: str = format
											ctx: Load 
										args: list 
											element: Call 
												func: Attribute 
													value: Str 
														s: str = ,
													attr: str = join
													ctx: Load 
												args: list 
													element: ListComp 
														elt: Name 
															id: str = word
															ctx: Load 
														generators: list 
															element: comprehension 
																target: Name 
																	id: str = word
																	ctx: Store 
																iter: Name 
																	id: str = row
																	ctx: Load 
																ifs: list 
																is_async: int = 0
												keywords: list 
										keywords: list 
								keywords: list 
					orelse: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Str 
								s: str = <br><br>Issue 148<br>
						keywords: list 
				element: Assign 
					targets: list 
						element: Name 
							id: str = aDict
							ctx: Store 
					value: Dict 
						keys: list 
							element: Str 
								s: str = items
						values: list 
							element: List 
								elts: list 
									element: Num 
										n: int = 4
									element: Num 
										n: int = 5
									element: Num 
										n: int = 6
								ctx: Load 
				element: For 
					target: Tuple 
						elts: list 
							element: Name 
								id: str = aKey
								ctx: Store 
							element: Name 
								id: str = aValue
								ctx: Store 
						ctx: Store 
					iter: Call 
						func: Attribute 
							value: Name 
								id: str = aDict
								ctx: Load 
							attr: str = items
							ctx: Load 
						args: list 
						keywords: list 
					body: list 
						element: Expr 
							value: Call 
								func: Attribute 
									value: Name 
										id: str = autoTester
										ctx: Load 
									attr: str = check
									ctx: Load 
								args: list 
									element: Call 
										func: Attribute 
											value: Str 
												s: str = {}: {}
											attr: str = format
											ctx: Load 
										args: list 
											element: Name 
												id: str = aKey
												ctx: Load 
											element: Name 
												id: str = aValue
												ctx: Load 
										keywords: list 
								keywords: list 
					orelse: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Str 
								s: str = <br><br>Issue 169<br>
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Call 
								func: Name 
									id: str = int
									ctx: Load 
								args: list 
									element: BinOp 
										left: Num 
											n: int = 1
										op: Div 
										right: Call 
											func: Name 
												id: str = float
												ctx: Load 
											args: list 
												element: Str 
													s: str = inf
											keywords: list 
								keywords: list 
							element: Call 
								func: Name 
									id: str = int
									ctx: Load 
								args: list 
									element: BinOp 
										left: Num 
											n: int = 1
										op: Div 
										right: Call 
											func: Name 
												id: str = float
												ctx: Load 
											args: list 
												element: Str 
													s: str = -inf
											keywords: list 
								keywords: list 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Str 
								s: str = <br><br>Issue 178<br>
						keywords: list 
				element: Assign 
					targets: list 
						element: Name 
							id: str = bitmaps
							ctx: Store 
					value: List 
						elts: list 
							element: Tuple 
								elts: list 
									element: Num 
										n: int = 2
									element: Str 
										s: str = 
								ctx: Load 
							element: Tuple 
								elts: list 
									element: Num 
										n: int = 4
									element: Str 
										s: str = 
								ctx: Load 
							element: Tuple 
								elts: list 
									element: Num 
										n: int = 8
									element: Str 
										s: str = i
								ctx: Load 
							element: Tuple 
								elts: list 
									element: Num 
										n: int = 16
									element: Str 
										s: str = m
								ctx: Load 
							element: Tuple 
								elts: list 
									element: Num 
										n: int = 32
									element: Str 
										s: str = y
								ctx: Load 
							element: Tuple 
								elts: list 
									element: Num 
										n: int = 64
									element: Str 
										s: str = u
								ctx: Load 
							element: Tuple 
								elts: list 
									element: Num 
										n: int = 128
									element: Str 
										s: str = g
								ctx: Load 
						ctx: Load 
				element: For 
					target: Name 
						id: str = flags
						ctx: Store 
					iter: Tuple 
						elts: list 
							element: Num 
								n: int = 122
							element: Num 
								n: int = 233
							element: Num 
								n: int = 11
							element: Num 
								n: int = 55
							element: Num 
								n: int = 79
							element: Num 
								n: int = 201
							element: Num 
								n: int = 23
							element: Num 
								n: int = 111
							element: Num 
								n: int = 200
							element: Num 
								n: int = 100
							element: Num 
								n: int = 50
							element: Num 
								n: int = 25
							element: Num 
								n: int = 12
							element: Num 
								n: int = 6
						ctx: Load 
					body: list 
						element: Expr 
							value: Call 
								func: Attribute 
									value: Name 
										id: str = autoTester
										ctx: Load 
									attr: str = check
									ctx: Load 
								args: list 
									element: Call 
										func: Attribute 
											value: Str 
												s: str = 
											attr: str = join
											ctx: Load 
										args: list 
											element: ListComp 
												elt: Subscript 
													value: Name 
														id: str = x
														ctx: Load 
													slice: Index 
														value: Num 
															n: int = 1
													ctx: Load 
												generators: list 
													element: comprehension 
														target: Name 
															id: str = x
															ctx: Store 
														iter: Name 
															id: str = bitmaps
															ctx: Load 
														ifs: list 
															element: Compare 
																left: BinOp 
																	left: Subscript 
																		value: Name 
																			id: str = x
																			ctx: Load 
																		slice: Index 
																			value: Num 
																				n: int = 0
																		ctx: Load 
																	op: BitAnd 
																	right: Name 
																		id: str = flags
																		ctx: Load 
																ops: list 
																	element: Gt 
																comparators: list 
																	element: Num 
																		n: int = 0
														is_async: int = 0
										keywords: list 
								keywords: list 
					orelse: list 
				element: FunctionDef 
					name: str = issue256
					args: arguments 
						args: list 
						vararg: NoneType = None
						kwonlyargs: list 
						kw_defaults: list 
						kwarg: NoneType = None
						defaults: list 
					body: list 
						element: Expr 
							value: Call 
								func: Attribute 
									value: Name 
										id: str = autoTester
										ctx: Load 
									attr: str = check
									ctx: Load 
								args: list 
									element: Str 
										s: str = Issue 256
								keywords: list 
						element: ClassDef 
							name: str = C
							bases: list 
							keywords: list 
							body: list 
								element: FunctionDef 
									name: str = __init__
									args: arguments 
										args: list 
											element: arg 
												arg: str = self
												annotation: NoneType = None
											element: arg 
												arg: str = value
												annotation: NoneType = None
										vararg: NoneType = None
										kwonlyargs: list 
										kw_defaults: list 
										kwarg: NoneType = None
										defaults: list 
									body: list 
										element: Assign 
											targets: list 
												element: Attribute 
													value: Name 
														id: str = self
														ctx: Load 
													attr: str = value
													ctx: Store 
											value: Name 
												id: str = value
												ctx: Load 
									decorator_list: list 
									returns: NoneType = None
							decorator_list: list 
						element: FunctionDef 
							name: str = f1
							args: arguments 
								args: list 
									element: arg 
										arg: str = value
										annotation: NoneType = None
								vararg: NoneType = None
								kwonlyargs: list 
								kw_defaults: list 
								kwarg: NoneType = None
								defaults: list 
							body: list 
								element: Return 
									value: Compare 
										left: Call 
											func: Attribute 
												value: BoolOp 
													op: Or 
													values: list 
														element: Attribute 
															value: Call 
																func: Name 
																	id: str = C
																	ctx: Load 
																args: list 
																	element: Name 
																		id: str = value
																		ctx: Load 
																keywords: list 
															attr: str = value
															ctx: Load 
														element: Str 
															s: str = second
												attr: str = capitalize
												ctx: Load 
											args: list 
											keywords: list 
										ops: list 
											element: Eq 
										comparators: list 
											element: Str 
												s: str = First
							decorator_list: list 
							returns: NoneType = None
						element: FunctionDef 
							name: str = f2
							args: arguments 
								args: list 
									element: arg 
										arg: str = value
										annotation: NoneType = None
								vararg: NoneType = None
								kwonlyargs: list 
								kw_defaults: list 
								kwarg: NoneType = None
								defaults: list 
							body: list 
								element: Return 
									value: Compare 
										left: Call 
											func: Attribute 
												value: BoolOp 
													op: Or 
													values: list 
														element: Attribute 
															value: Call 
																func: Name 
																	id: str = C
																	ctx: Load 
																args: list 
																	element: Name 
																		id: str = value
																		ctx: Load 
																keywords: list 
															attr: str = value
															ctx: Load 
														element: Str 
															s: str = second
												attr: str = capitalize
												ctx: Load 
											args: list 
											keywords: list 
										ops: list 
											element: Eq 
										comparators: list 
											element: Str 
												s: str = Second
							decorator_list: list 
							returns: NoneType = None
						element: FunctionDef 
							name: str = f3
							args: arguments 
								args: list 
									element: arg 
										arg: str = value
										annotation: NoneType = None
								vararg: NoneType = None
								kwonlyargs: list 
								kw_defaults: list 
								kwarg: NoneType = None
								defaults: list 
							body: list 
								element: Return 
									value: BoolOp 
										op: Or 
										values: list 
											element: Attribute 
												value: Call 
													func: Name 
														id: str = C
														ctx: Load 
													args: list 
														element: Name 
															id: str = value
															ctx: Load 
													keywords: list 
												attr: str = value
												ctx: Load 
											element: Str 
												s: str = second
							decorator_list: list 
							returns: NoneType = None
						element: FunctionDef 
							name: str = f4
							args: arguments 
								args: list 
									element: arg 
										arg: str = value
										annotation: NoneType = None
								vararg: NoneType = None
								kwonlyargs: list 
								kw_defaults: list 
								kwarg: NoneType = None
								defaults: list 
							body: list 
								element: Return 
									value: BoolOp 
										op: Or 
										values: list 
											element: Attribute 
												value: Call 
													func: Name 
														id: str = C
														ctx: Load 
													args: list 
														element: Name 
															id: str = value
															ctx: Load 
													keywords: list 
												attr: str = value
												ctx: Load 
											element: Str 
												s: str = second
							decorator_list: list 
							returns: NoneType = None
						element: Expr 
							value: Call 
								func: Attribute 
									value: Name 
										id: str = autoTester
										ctx: Load 
									attr: str = check
									ctx: Load 
								args: list 
									element: Call 
										func: Name 
											id: str = f1
											ctx: Load 
										args: list 
											element: Str 
												s: str = first
										keywords: list 
								keywords: list 
						element: Expr 
							value: Call 
								func: Attribute 
									value: Name 
										id: str = autoTester
										ctx: Load 
									attr: str = check
									ctx: Load 
								args: list 
									element: Call 
										func: Name 
											id: str = f1
											ctx: Load 
										args: list 
											element: Str 
												s: str = 
										keywords: list 
								keywords: list 
						element: Expr 
							value: Call 
								func: Attribute 
									value: Name 
										id: str = autoTester
										ctx: Load 
									attr: str = check
									ctx: Load 
								args: list 
									element: Call 
										func: Name 
											id: str = f2
											ctx: Load 
										args: list 
											element: Str 
												s: str = first
										keywords: list 
								keywords: list 
						element: Expr 
							value: Call 
								func: Attribute 
									value: Name 
										id: str = autoTester
										ctx: Load 
									attr: str = check
									ctx: Load 
								args: list 
									element: Call 
										func: Name 
											id: str = f2
											ctx: Load 
										args: list 
											element: Str 
												s: str = 
										keywords: list 
								keywords: list 
						element: Expr 
							value: Call 
								func: Attribute 
									value: Name 
										id: str = autoTester
										ctx: Load 
									attr: str = check
									ctx: Load 
								args: list 
									element: Call 
										func: Name 
											id: str = f3
											ctx: Load 
										args: list 
											element: Str 
												s: str = first
										keywords: list 
								keywords: list 
						element: Expr 
							value: Call 
								func: Attribute 
									value: Name 
										id: str = autoTester
										ctx: Load 
									attr: str = check
									ctx: Load 
								args: list 
									element: Call 
										func: Name 
											id: str = f4
											ctx: Load 
										args: list 
											element: Str 
												s: str = 
										keywords: list 
								keywords: list 
					decorator_list: list 
					returns: NoneType = None
				element: Expr 
					value: Call 
						func: Name 
							id: str = issue256
							ctx: Load 
						args: list 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Str 
								s: str = Issue 274
						keywords: list 
				element: Assign 
					targets: list 
						element: Name 
							id: str = a
							ctx: Store 
					value: Num 
						n: int = 3
				element: Delete 
					targets: list 
						element: Name 
							id: str = a
							ctx: Del 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Str 
								s: str = Still alive
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Str 
								s: str = Issue 276
						keywords: list 
				element: Assign 
					targets: list 
						element: Name 
							id: str = a
							ctx: Store 
					value: Num 
						n: int = 2
				element: Assign 
					targets: list 
						element: Name 
							id: str = b
							ctx: Store 
					value: BinOp 
						left: Name 
							id: str = a
							ctx: Load 
						op: Pow 
						right: Num 
							n: int = 3
				element: AugAssign 
					target: Name 
						id: str = a
						ctx: Store 
					op: Pow 
					value: Num 
						n: int = 4
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Name 
								id: str = a
								ctx: Load 
							element: Name 
								id: str = b
								ctx: Load 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Str 
								s: str = Issue 277
						keywords: list 
				element: Assign 
					targets: list 
						element: Name 
							id: str = new
							ctx: Store 
					value: Num 
						n: int = 3
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Name 
								id: str = new
								ctx: Load 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Str 
								s: str = Issue 279
						keywords: list 
				element: ClassDef 
					name: str = A
					bases: list 
					keywords: list 
					body: list 
						element: Assign 
							targets: list 
								element: Name 
									id: str = TypeError
									ctx: Store 
							value: Num 
								n: int = 111
						element: Assign 
							targets: list 
								element: Name 
									id: str = js_TypeError
									ctx: Store 
							value: Num 
								n: int = 222
					decorator_list: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Attribute 
								value: Name 
									id: str = A
									ctx: Load 
								attr: str = TypeError
								ctx: Load 
							element: Attribute 
								value: Name 
									id: str = A
									ctx: Load 
								attr: str = js_TypeError
								ctx: Load 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Str 
								s: str = Still alive
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Str 
								s: str = Issue 301
						keywords: list 
				element: FunctionDef 
					name: str = filter_word
					args: arguments 
						args: list 
							element: arg 
								arg: str = word0
								annotation: NoneType = None
							element: arg 
								arg: str = word1
								annotation: NoneType = None
						vararg: NoneType = None
						kwonlyargs: list 
						kw_defaults: list 
						kwarg: NoneType = None
						defaults: list 
					body: list 
						element: If 
							test: Compare 
								left: Call 
									func: Name 
										id: str = len
										ctx: Load 
									args: list 
										element: Name 
											id: str = word0
											ctx: Load 
									keywords: list 
								ops: list 
									element: NotEq 
								comparators: list 
									element: Call 
										func: Name 
											id: str = len
											ctx: Load 
										args: list 
											element: Name 
												id: str = word1
												ctx: Load 
										keywords: list 
							body: list 
								element: Return 
									value: NameConstant 
										value: bool = False
							orelse: list 
						element: For 
							target: Tuple 
								elts: list 
									element: Name 
										id: str = char0
										ctx: Store 
									element: Name 
										id: str = char1
										ctx: Store 
								ctx: Store 
							iter: Call 
								func: Name 
									id: str = zip
									ctx: Load 
								args: list 
									element: Name 
										id: str = word0
										ctx: Load 
									element: Name 
										id: str = word1
										ctx: Load 
								keywords: list 
							body: list 
								element: If 
									test: BoolOp 
										op: And 
										values: list 
											element: Compare 
												left: Name 
													id: str = char0
													ctx: Load 
												ops: list 
													element: NotEq 
												comparators: list 
													element: Str 
														s: str = _
											element: Compare 
												left: Name 
													id: str = char0
													ctx: Load 
												ops: list 
													element: NotEq 
												comparators: list 
													element: Name 
														id: str = char1
														ctx: Load 
									body: list 
										element: Return 
											value: NameConstant 
												value: bool = False
									orelse: list 
							orelse: list 
						element: Return 
							value: NameConstant 
								value: bool = True
					decorator_list: list 
					returns: NoneType = None
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Call 
								func: Name 
									id: str = filter_word
									ctx: Load 
								args: list 
									element: Str 
										s: str = bee
									element: Str 
										s: str = beer
								keywords: list 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Call 
								func: Name 
									id: str = filter_word
									ctx: Load 
								args: list 
									element: Str 
										s: str = wine
									element: Str 
										s: str = wine
								keywords: list 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Call 
								func: Name 
									id: str = filter_word
									ctx: Load 
								args: list 
									element: Str 
										s: str = win_
									element: Str 
										s: str = wind
								keywords: list 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Call 
								func: Name 
									id: str = filter_word
									ctx: Load 
								args: list 
									element: Str 
										s: str = _in_
									element: Str 
										s: str = kind
								keywords: list 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Call 
								func: Name 
									id: str = filter_word
									ctx: Load 
								args: list 
									element: Str 
										s: str = min_
									element: Str 
										s: str = kind
								keywords: list 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Str 
								s: str = Issue 306
						keywords: list 
				element: Assign 
					targets: list 
						element: Name 
							id: str = dict_306
							ctx: Store 
					value: Dict 
						keys: list 
							element: Str 
								s: str = Abraham
							element: Str 
								s: str = Barack
							element: Str 
								s: str = Thomas
						values: list 
							element: Str 
								s: str = Lincoln
							element: Str 
								s: str = O'Bama
							element: Str 
								s: str = Jefferson
				element: Assign 
					targets: list 
						element: Name 
							id: str = results
							ctx: Store 
					value: List 
						elts: list 
						ctx: Load 
				element: Try 
					body: list 
						element: While 
							test: NameConstant 
								value: bool = True
							body: list 
								element: Expr 
									value: Call 
										func: Attribute 
											value: Name 
												id: str = results
												ctx: Load 
											attr: str = append
											ctx: Load 
										args: list 
											element: Call 
												func: Attribute 
													value: Name 
														id: str = dict_306
														ctx: Load 
													attr: str = popitem
													ctx: Load 
												args: list 
												keywords: list 
										keywords: list 
							orelse: list 
					handlers: list 
						element: ExceptHandler 
							type: Name 
								id: str = Exception
								ctx: Load 
							name: str = exception
							body: list 
								element: Expr 
									value: Call 
										func: Attribute 
											value: Name 
												id: str = autoTester
												ctx: Load 
											attr: str = check
											ctx: Load 
										args: list 
											element: Call 
												func: Name 
													id: str = sorted
													ctx: Load 
												args: list 
													element: Name 
														id: str = results
														ctx: Load 
												keywords: list 
										keywords: list 
								element: Expr 
									value: Call 
										func: Attribute 
											value: Name 
												id: str = autoTester
												ctx: Load 
											attr: str = check
											ctx: Load 
										args: list 
											element: Str 
												s: str = That's it
										keywords: list 
					orelse: list 
					finalbody: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Str 
								s: str = Issue 314
						keywords: list 
				element: Try 
					body: list 
						element: Expr 
							value: Call 
								func: Attribute 
									value: Name 
										id: str = autoTester
										ctx: Load 
									attr: str = check
									ctx: Load 
								args: list 
									element: Call 
										func: Name 
											id: str = int
											ctx: Load 
										args: list 
											element: Call 
												func: Name 
													id: str = float
													ctx: Load 
												args: list 
													element: Num 
														n: int = 123
												keywords: list 
										keywords: list 
								keywords: list 
					handlers: list 
						element: ExceptHandler 
							type: NoneType = None
							name: NoneType = None
							body: list 
								element: Expr 
									value: Call 
										func: Attribute 
											value: Name 
												id: str = autoTester
												ctx: Load 
											attr: str = check
											ctx: Load 
										args: list 
											element: Str 
												s: str = a
										keywords: list 
					orelse: list 
					finalbody: list 
				element: Try 
					body: list 
						element: Expr 
							value: Call 
								func: Attribute 
									value: Name 
										id: str = autoTester
										ctx: Load 
									attr: str = check
									ctx: Load 
								args: list 
									element: Call 
										func: Name 
											id: str = float
											ctx: Load 
										args: list 
											element: Num 
												n: float = 12.3
										keywords: list 
								keywords: list 
					handlers: list 
						element: ExceptHandler 
							type: NoneType = None
							name: NoneType = None
							body: list 
								element: Expr 
									value: Call 
										func: Attribute 
											value: Name 
												id: str = autoTester
												ctx: Load 
											attr: str = check
											ctx: Load 
										args: list 
											element: Str 
												s: str = b
										keywords: list 
					orelse: list 
					finalbody: list 
				element: Try 
					body: list 
						element: Expr 
							value: Call 
								func: Attribute 
									value: Name 
										id: str = autoTester
										ctx: Load 
									attr: str = check
									ctx: Load 
								args: list 
									element: Call 
										func: Name 
											id: str = int
											ctx: Load 
										args: list 
											element: Call 
												func: Name 
													id: str = float
													ctx: Load 
												args: list 
													element: Str 
														s: str = 123
												keywords: list 
										keywords: list 
								keywords: list 
					handlers: list 
						element: ExceptHandler 
							type: NoneType = None
							name: NoneType = None
							body: list 
								element: Expr 
									value: Call 
										func: Attribute 
											value: Name 
												id: str = autoTester
												ctx: Load 
											attr: str = check
											ctx: Load 
										args: list 
											element: Str 
												s: str = c
										keywords: list 
					orelse: list 
					finalbody: list 
				element: Try 
					body: list 
						element: Expr 
							value: Call 
								func: Attribute 
									value: Name 
										id: str = autoTester
										ctx: Load 
									attr: str = check
									ctx: Load 
								args: list 
									element: Call 
										func: Name 
											id: str = int
											ctx: Load 
										args: list 
											element: Call 
												func: Name 
													id: str = float
													ctx: Load 
												args: list 
													element: Str 
														s: str =  123
												keywords: list 
										keywords: list 
								keywords: list 
					handlers: list 
						element: ExceptHandler 
							type: NoneType = None
							name: NoneType = None
							body: list 
								element: Expr 
									value: Call 
										func: Attribute 
											value: Name 
												id: str = autoTester
												ctx: Load 
											attr: str = check
											ctx: Load 
										args: list 
											element: Str 
												s: str = d
										keywords: list 
					orelse: list 
					finalbody: list 
				element: Try 
					body: list 
						element: Expr 
							value: Call 
								func: Attribute 
									value: Name 
										id: str = autoTester
										ctx: Load 
									attr: str = check
									ctx: Load 
								args: list 
									element: Call 
										func: Name 
											id: str = float
											ctx: Load 
										args: list 
											element: Str 
												s: str = 
										keywords: list 
								keywords: list 
					handlers: list 
						element: ExceptHandler 
							type: NoneType = None
							name: NoneType = None
							body: list 
								element: Expr 
									value: Call 
										func: Attribute 
											value: Name 
												id: str = autoTester
												ctx: Load 
											attr: str = check
											ctx: Load 
										args: list 
											element: Str 
												s: str = e
										keywords: list 
					orelse: list 
					finalbody: list 
				element: Try 
					body: list 
						element: Expr 
							value: Call 
								func: Attribute 
									value: Name 
										id: str = autoTester
										ctx: Load 
									attr: str = check
									ctx: Load 
								args: list 
									element: Call 
										func: Name 
											id: str = float
											ctx: Load 
										args: list 
											element: Str 
												s: str =  
										keywords: list 
								keywords: list 
					handlers: list 
						element: ExceptHandler 
							type: NoneType = None
							name: NoneType = None
							body: list 
								element: Expr 
									value: Call 
										func: Attribute 
											value: Name 
												id: str = autoTester
												ctx: Load 
											attr: str = check
											ctx: Load 
										args: list 
											element: Str 
												s: str = f
										keywords: list 
					orelse: list 
					finalbody: list 
				element: Try 
					body: list 
						element: Expr 
							value: Call 
								func: Attribute 
									value: Name 
										id: str = autoTester
										ctx: Load 
									attr: str = check
									ctx: Load 
								args: list 
									element: Call 
										func: Name 
											id: str = float
											ctx: Load 
										args: list 
											element: Str 
												s: str = drie
										keywords: list 
								keywords: list 
					handlers: list 
						element: ExceptHandler 
							type: NoneType = None
							name: NoneType = None
							body: list 
								element: Expr 
									value: Call 
										func: Attribute 
											value: Name 
												id: str = autoTester
												ctx: Load 
											attr: str = check
											ctx: Load 
										args: list 
											element: Str 
												s: str = g
										keywords: list 
					orelse: list 
					finalbody: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Str 
								s: str = Issue 316
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Call 
								func: Name 
									id: str = list
									ctx: Load 
								args: list 
									element: Call 
										func: Name 
											id: str = filter
											ctx: Load 
										args: list 
											element: NameConstant 
												value: NoneType = None
											element: List 
												elts: list 
													element: List 
														elts: list 
															element: Num 
																n: int = 1
															element: Num 
																n: int = 2
														ctx: Load 
													element: List 
														elts: list 
															element: Num 
																n: int = 3
														ctx: Load 
													element: List 
														elts: list 
														ctx: Load 
													element: List 
														elts: list 
															element: Num 
																n: int = 4
															element: Num 
																n: int = 5
														ctx: Load 
													element: List 
														elts: list 
															element: Num 
																n: int = 6
														ctx: Load 
												ctx: Load 
										keywords: list 
								keywords: list 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Call 
								func: Name 
									id: str = list
									ctx: Load 
								args: list 
									element: Call 
										func: Name 
											id: str = filter
											ctx: Load 
										args: list 
											element: Lambda 
												args: arguments 
													args: list 
														element: arg 
															arg: str = l
															annotation: NoneType = None
													vararg: NoneType = None
													kwonlyargs: list 
													kw_defaults: list 
													kwarg: NoneType = None
													defaults: list 
												body: Compare 
													left: Call 
														func: Name 
															id: str = len
															ctx: Load 
														args: list 
															element: Name 
																id: str = l
																ctx: Load 
														keywords: list 
													ops: list 
														element: GtE 
													comparators: list 
														element: Num 
															n: int = 2
											element: List 
												elts: list 
													element: List 
														elts: list 
															element: Num 
																n: int = 1
															element: Num 
																n: int = 2
														ctx: Load 
													element: List 
														elts: list 
															element: Num 
																n: int = 3
														ctx: Load 
													element: List 
														elts: list 
														ctx: Load 
													element: List 
														elts: list 
															element: Num 
																n: int = 4
															element: Num 
																n: int = 5
														ctx: Load 
													element: List 
														elts: list 
															element: Num 
																n: int = 6
														ctx: Load 
												ctx: Load 
										keywords: list 
								keywords: list 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Str 
								s: str = Issue 317
						keywords: list 
				element: Assign 
					targets: list 
						element: Name 
							id: str = mylist
							ctx: Store 
					value: List 
						elts: list 
						ctx: Load 
				element: Try 
					body: list 
						element: Expr 
							value: Call 
								func: Attribute 
									value: Name 
										id: str = mylist
										ctx: Load 
									attr: str = remove
									ctx: Load 
								args: list 
									element: Str 
										s: str = value
								keywords: list 
					handlers: list 
						element: ExceptHandler 
							type: Name 
								id: str = ValueError
								ctx: Load 
							name: str = exception
							body: list 
								element: Expr 
									value: Call 
										func: Attribute 
											value: Name 
												id: str = autoTester
												ctx: Load 
											attr: str = check
											ctx: Load 
										args: list 
											element: Attribute 
												value: Attribute 
													value: Name 
														id: str = exception
														ctx: Load 
													attr: str = __class__
													ctx: Load 
												attr: str = __name__
												ctx: Load 
										keywords: list 
					orelse: list 
					finalbody: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Str 
								s: str = Issue 331
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Call 
								func: Name 
									id: str = max
									ctx: Load 
								args: list 
									element: UnaryOp 
										op: USub 
										operand: Num 
											n: int = 5
									element: Num 
										n: int = 4
									element: Num 
										n: int = 1
									element: Num 
										n: int = 2
									element: UnaryOp 
										op: USub 
										operand: Num 
											n: int = 3
									element: Num 
										n: int = 2
								keywords: list 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Call 
								func: Name 
									id: str = max
									ctx: Load 
								args: list 
									element: List 
										elts: list 
											element: UnaryOp 
												op: USub 
												operand: Num 
													n: int = 5
											element: Num 
												n: int = 4
											element: Num 
												n: int = 1
											element: Num 
												n: int = 2
											element: UnaryOp 
												op: USub 
												operand: Num 
													n: int = 3
											element: Num 
												n: int = 2
										ctx: Load 
								keywords: list 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Call 
								func: Name 
									id: str = max
									ctx: Load 
								args: list 
									element: Tuple 
										elts: list 
											element: Num 
												n: int = 5
											element: Num 
												n: int = 6
											element: Num 
												n: int = 2
											element: UnaryOp 
												op: USub 
												operand: Num 
													n: int = 2
											element: UnaryOp 
												op: USub 
												operand: Num 
													n: int = 4
										ctx: Load 
								keywords: list 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Call 
								func: Name 
									id: str = min
									ctx: Load 
								args: list 
									element: UnaryOp 
										op: USub 
										operand: Num 
											n: int = 5
									element: Num 
										n: int = 4
									element: Num 
										n: int = 1
									element: Num 
										n: int = 2
									element: UnaryOp 
										op: USub 
										operand: Num 
											n: int = 3
									element: Num 
										n: int = 2
								keywords: list 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Call 
								func: Name 
									id: str = min
									ctx: Load 
								args: list 
									element: List 
										elts: list 
											element: UnaryOp 
												op: USub 
												operand: Num 
													n: int = 5
											element: Num 
												n: int = 4
											element: Num 
												n: int = 1
											element: Num 
												n: int = 2
											element: UnaryOp 
												op: USub 
												operand: Num 
													n: int = 3
											element: Num 
												n: int = 2
										ctx: Load 
								keywords: list 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Call 
								func: Name 
									id: str = min
									ctx: Load 
								args: list 
									element: Tuple 
										elts: list 
											element: Num 
												n: int = 5
											element: Num 
												n: int = 6
											element: Num 
												n: int = 2
											element: UnaryOp 
												op: USub 
												operand: Num 
													n: int = 2
											element: UnaryOp 
												op: USub 
												operand: Num 
													n: int = 4
										ctx: Load 
								keywords: list 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Str 
								s: str = issue 356
						keywords: list 
				element: Try 
					body: list 
						element: Raise 
							exc: Call 
								func: Name 
									id: str = TypeError
									ctx: Load 
								args: list 
									element: Str 
										s: str = How are you?
								keywords: list 
							cause: NoneType = None
					handlers: list 
						element: ExceptHandler 
							type: Name 
								id: str = TypeError
								ctx: Load 
							name: str = exception
							body: list 
								element: Expr 
									value: Call 
										func: Attribute 
											value: Name 
												id: str = autoTester
												ctx: Load 
											attr: str = check
											ctx: Load 
										args: list 
											element: Name 
												id: str = exception
												ctx: Load 
										keywords: list 
					orelse: list 
					finalbody: list 
				element: Expr 
					value: Call 
						func: Name 
							id: str = __pragma__
							ctx: Load 
						args: list 
							element: Str 
								s: str = ifdef
							element: Str 
								s: str = __esv6__
						keywords: list 
				element: If 
					test: Compare 
						left: Str 
							s: str = __esv6__
						ops: list 
							element: In 
						comparators: list 
							element: Name 
								id: str = __symbols__
								ctx: Load 
					body: list 
						element: Expr 
							value: Call 
								func: Attribute 
									value: Name 
										id: str = autoTester
										ctx: Load 
									attr: str = check
									ctx: Load 
								args: list 
									element: Str 
										s: str = Issue 369
								keywords: list 
						element: ClassDef 
							name: str = Vector
							bases: list 
							keywords: list 
							body: list 
								element: FunctionDef 
									name: str = __init__
									args: arguments 
										args: list 
											element: arg 
												arg: str = self
												annotation: NoneType = None
										vararg: arg 
											arg: str = values
											annotation: NoneType = None
										kwonlyargs: list 
										kw_defaults: list 
										kwarg: NoneType = None
										defaults: list 
									body: list 
										element: Assign 
											targets: list 
												element: Attribute 
													value: Name 
														id: str = self
														ctx: Load 
													attr: str = values
													ctx: Store 
											value: Name 
												id: str = values
												ctx: Load 
									decorator_list: list 
									returns: NoneType = None
								element: FunctionDef 
									name: str = __iter__
									args: arguments 
										args: list 
											element: arg 
												arg: str = self
												annotation: NoneType = None
										vararg: NoneType = None
										kwonlyargs: list 
										kw_defaults: list 
										kwarg: NoneType = None
										defaults: list 
									body: list 
										element: For 
											target: Name 
												id: str = item
												ctx: Store 
											iter: Attribute 
												value: Name 
													id: str = self
													ctx: Load 
												attr: str = values
												ctx: Load 
											body: list 
												element: Expr 
													value: Yield 
														value: Name 
															id: str = item
															ctx: Load 
											orelse: list 
									decorator_list: list 
									returns: NoneType = None
								element: FunctionDef 
									name: str = __add__
									args: arguments 
										args: list 
											element: arg 
												arg: str = self
												annotation: NoneType = None
											element: arg 
												arg: str = other
												annotation: NoneType = None
										vararg: NoneType = None
										kwonlyargs: list 
										kw_defaults: list 
										kwarg: NoneType = None
										defaults: list 
									body: list 
										element: Return 
											value: Call 
												func: Name 
													id: str = Vector
													ctx: Load 
												args: list 
													element: Starred 
														value: GeneratorExp 
															elt: BinOp 
																left: Name 
																	id: str = x
																	ctx: Load 
																op: Add 
																right: Name 
																	id: str = y
																	ctx: Load 
															generators: list 
																element: comprehension 
																	target: Tuple 
																		elts: list 
																			element: Name 
																				id: str = x
																				ctx: Store 
																			element: Name 
																				id: str = y
																				ctx: Store 
																		ctx: Store 
																	iter: Call 
																		func: Name 
																			id: str = zip
																			ctx: Load 
																		args: list 
																			element: Name 
																				id: str = self
																				ctx: Load 
																			element: Name 
																				id: str = other
																				ctx: Load 
																		keywords: list 
																	ifs: list 
																	is_async: int = 0
														ctx: Load 
												keywords: list 
									decorator_list: list 
									returns: NoneType = None
								element: FunctionDef 
									name: str = __str__
									args: arguments 
										args: list 
											element: arg 
												arg: str = self
												annotation: NoneType = None
										vararg: NoneType = None
										kwonlyargs: list 
										kw_defaults: list 
										kwarg: NoneType = None
										defaults: list 
									body: list 
										element: Return 
											value: Call 
												func: Name 
													id: str = str
													ctx: Load 
												args: list 
													element: Call 
														func: Name 
															id: str = list
															ctx: Load 
														args: list 
															element: Attribute 
																value: Name 
																	id: str = self
																	ctx: Load 
																attr: str = values
																ctx: Load 
														keywords: list 
												keywords: list 
									decorator_list: list 
									returns: NoneType = None
							decorator_list: list 
						element: Expr 
							value: Call 
								func: Name 
									id: str = __pragma__
									ctx: Load 
								args: list 
									element: Str 
										s: str = opov
								keywords: list 
						element: Expr 
							value: Call 
								func: Attribute 
									value: Name 
										id: str = autoTester
										ctx: Load 
									attr: str = check
									ctx: Load 
								args: list 
									element: Call 
										func: Name 
											id: str = str
											ctx: Load 
										args: list 
											element: BinOp 
												left: Call 
													func: Name 
														id: str = Vector
														ctx: Load 
													args: list 
														element: Num 
															n: int = 1
														element: Num 
															n: int = 2
														element: Num 
															n: int = 3
													keywords: list 
												op: Add 
												right: Call 
													func: Name 
														id: str = Vector
														ctx: Load 
													args: list 
														element: Num 
															n: int = 3
														element: Num 
															n: int = 4
														element: Num 
															n: int = 5
													keywords: list 
										keywords: list 
								keywords: list 
						element: Expr 
							value: Call 
								func: Name 
									id: str = __pragma__
									ctx: Load 
								args: list 
									element: Str 
										s: str = noopov
								keywords: list 
					orelse: list 
				element: Expr 
					value: Call 
						func: Name 
							id: str = __pragma__
							ctx: Load 
						args: list 
							element: Str 
								s: str = endif
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Str 
								s: str = Issue 387
						keywords: list 
				element: Expr 
					value: Call 
						func: Name 
							id: str = run387
							ctx: Load 
						args: list 
							element: Name 
								id: str = autoTester
								ctx: Load 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Str 
								s: str = Issue 391
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Call 
								func: Name 
									id: str = int
									ctx: Load 
								args: list 
									element: NameConstant 
										value: bool = False
								keywords: list 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Call 
								func: Name 
									id: str = int
									ctx: Load 
								args: list 
									element: NameConstant 
										value: bool = True
								keywords: list 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Call 
								func: Name 
									id: str = int
									ctx: Load 
								args: list 
									element: Compare 
										left: Num 
											n: int = 1
										ops: list 
											element: Eq 
										comparators: list 
											element: Num 
												n: int = 2
								keywords: list 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Call 
								func: Name 
									id: str = int
									ctx: Load 
								args: list 
									element: Compare 
										left: Num 
											n: int = 1
										ops: list 
											element: NotEq 
										comparators: list 
											element: Num 
												n: int = 2
								keywords: list 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Str 
								s: str = Issue 392
						keywords: list 
				element: Import 
					names: list 
						element: alias 
							name: str = re
							asname: NoneType = None
				element: ClassDef 
					name: str = Example
					bases: list 
					keywords: list 
					body: list 
						element: Assign 
							targets: list 
								element: Name 
									id: str = d
									ctx: Store 
							value: Dict 
								keys: list 
									element: Str 
										s: str = A
									element: Str 
										s: str = B
								values: list 
									element: Num 
										n: int = 1
									element: Num 
										n: int = 2
						element: Assign 
							targets: list 
								element: Name 
									id: str = rec
									ctx: Store 
							value: Call 
								func: Attribute 
									value: Name 
										id: str = re
										ctx: Load 
									attr: str = compile
									ctx: Load 
								args: list 
									element: Str 
										s: str = (?P<decimal>\d+)
									element: Attribute 
										value: Name 
											id: str = re
											ctx: Load 
										attr: str = ASCII
										ctx: Load 
								keywords: list 
						element: FunctionDef 
							name: str = run
							args: arguments 
								args: list 
									element: arg 
										arg: str = self
										annotation: NoneType = None
								vararg: NoneType = None
								kwonlyargs: list 
								kw_defaults: list 
								kwarg: NoneType = None
								defaults: list 
							body: list 
								element: Assign 
									targets: list 
										element: Name 
											id: str = match
											ctx: Store 
									value: Call 
										func: Attribute 
											value: Attribute 
												value: Name 
													id: str = self
													ctx: Load 
												attr: str = rec
												ctx: Load 
											attr: str = match
											ctx: Load 
										args: list 
											element: Str 
												s: str = 42
										keywords: list 
								element: If 
									test: UnaryOp 
										op: Not 
										operand: Name 
											id: str = match
											ctx: Load 
									body: list 
										element: Expr 
											value: Call 
												func: Name 
													id: str = print
													ctx: Load 
												args: list 
													element: Str 
														s: str = ERROR: RE does not match
												keywords: list 
									orelse: list 
								element: Assign 
									targets: list 
										element: Name 
											id: str = e
											ctx: Store 
									value: Call 
										func: Attribute 
											value: Name 
												id: str = match
												ctx: Load 
											attr: str = groupdict
											ctx: Load 
										args: list 
										keywords: list 
								element: Expr 
									value: Call 
										func: Attribute 
											value: Name 
												id: str = autoTester
												ctx: Load 
											attr: str = check
											ctx: Load 
										args: list 
											element: Str 
												s: str = before: self.d=
											element: Attribute 
												value: Name 
													id: str = self
													ctx: Load 
												attr: str = d
												ctx: Load 
										keywords: list 
								element: Expr 
									value: Call 
										func: Attribute 
											value: Name 
												id: str = autoTester
												ctx: Load 
											attr: str = check
											ctx: Load 
										args: list 
											element: Str 
												s: str = before: e=
											element: Name 
												id: str = e
												ctx: Load 
										keywords: list 
								element: Expr 
									value: Call 
										func: Attribute 
											value: Attribute 
												value: Name 
													id: str = self
													ctx: Load 
												attr: str = d
												ctx: Load 
											attr: str = update
											ctx: Load 
										args: list 
											element: Name 
												id: str = e
												ctx: Load 
										keywords: list 
								element: Expr 
									value: Call 
										func: Attribute 
											value: Name 
												id: str = autoTester
												ctx: Load 
											attr: str = check
											ctx: Load 
										args: list 
											element: Str 
												s: str = after: self.d=
											element: Attribute 
												value: Name 
													id: str = self
													ctx: Load 
												attr: str = d
												ctx: Load 
										keywords: list 
							decorator_list: list 
							returns: NoneType = None
					decorator_list: list 
				element: Assign 
					targets: list 
						element: Name 
							id: str = example
							ctx: Store 
					value: Call 
						func: Name 
							id: str = Example
							ctx: Load 
						args: list 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = example
								ctx: Load 
							attr: str = run
							ctx: Load 
						args: list 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Str 
								s: str = Issue 398
						keywords: list 
				element: ClassDef 
					name: str = Test398
					bases: list 
						element: Name 
							id: str = object
							ctx: Load 
					keywords: list 
					body: list 
						element: Expr 
							value: Call 
								func: Name 
									id: str = __pragma__
									ctx: Load 
								args: list 
									element: Str 
										s: str = skip
								keywords: list 
						element: FunctionDef 
							name: str = method1
							args: arguments 
								args: list 
									element: arg 
										arg: str = self
										annotation: NoneType = None
								vararg: NoneType = None
								kwonlyargs: list 
								kw_defaults: list 
								kwarg: NoneType = None
								defaults: list 
							body: list 
								element: Pass 
							decorator_list: list 
							returns: NoneType = None
						element: FunctionDef 
							name: str = method2
							args: arguments 
								args: list 
									element: arg 
										arg: str = self
										annotation: NoneType = None
								vararg: NoneType = None
								kwonlyargs: list 
								kw_defaults: list 
								kwarg: NoneType = None
								defaults: list 
							body: list 
								element: Pass 
							decorator_list: list 
							returns: NoneType = None
						element: Expr 
							value: Call 
								func: Name 
									id: str = __pragma__
									ctx: Load 
								args: list 
									element: Str 
										s: str = noskip
								keywords: list 
						element: Pass 
					decorator_list: list 
				element: Assign 
					targets: list 
						element: Name 
							id: str = test398
							ctx: Store 
					value: Call 
						func: Name 
							id: str = Test398
							ctx: Load 
						args: list 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Str 
								s: str = Issue 399
						keywords: list 
				element: Expr 
					value: Call 
						func: Name 
							id: str = __pragma__
							ctx: Load 
						args: list 
							element: Str 
								s: str = keycheck
						keywords: list 
				element: Try 
					body: list 
						element: Assign 
							targets: list 
								element: Name 
									id: str = surpressWarning
									ctx: Store 
							value: Subscript 
								value: Dict 
									keys: list 
										element: Str 
											s: str = a
									values: list 
										element: Num 
											n: int = 5
								slice: Index 
									value: Str 
										s: str = a
								ctx: Load 
						element: Assign 
							targets: list 
								element: Name 
									id: str = surpressWarning
									ctx: Store 
							value: Subscript 
								value: Dict 
									keys: list 
										element: Str 
											s: str = a
									values: list 
										element: Num 
											n: int = 5
								slice: Index 
									value: Str 
										s: str = b
								ctx: Load 
						element: Expr 
							value: Call 
								func: Attribute 
									value: Name 
										id: str = autoTester
										ctx: Load 
									attr: str = check
									ctx: Load 
								args: list 
									element: Str 
										s: str = no problem
								keywords: list 
					handlers: list 
						element: ExceptHandler 
							type: Name 
								id: str = KeyError
								ctx: Load 
							name: NoneType = None
							body: list 
								element: Expr 
									value: Call 
										func: Attribute 
											value: Name 
												id: str = autoTester
												ctx: Load 
											attr: str = check
											ctx: Load 
										args: list 
											element: Str 
												s: str = not found
										keywords: list 
					orelse: list 
					finalbody: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Str 
								s: str = Issue 413
						keywords: list 
				element: Expr 
					value: Call 
						func: Name 
							id: str = __pragma__
							ctx: Load 
						args: list 
							element: Str 
								s: str = nokeycheck
						keywords: list 
				element: ClassDef 
					name: str = Foo
					bases: list 
					keywords: list 
					body: list 
						element: FunctionDef 
							name: str = __len__
							args: arguments 
								args: list 
									element: arg 
										arg: str = self
										annotation: NoneType = None
								vararg: NoneType = None
								kwonlyargs: list 
								kw_defaults: list 
								kwarg: NoneType = None
								defaults: list 
							body: list 
								element: Return 
									value: Num 
										n: int = 3
							decorator_list: list 
							returns: NoneType = None
						element: FunctionDef 
							name: str = __getitem__
							args: arguments 
								args: list 
									element: arg 
										arg: str = self
										annotation: NoneType = None
									element: arg 
										arg: str = i
										annotation: NoneType = None
								vararg: NoneType = None
								kwonlyargs: list 
								kw_defaults: list 
								kwarg: NoneType = None
								defaults: list 
							body: list 
								element: If 
									test: Compare 
										left: Name 
											id: str = i
											ctx: Load 
										ops: list 
											element: GtE 
										comparators: list 
											element: Num 
												n: int = 3
									body: list 
										element: Raise 
											exc: Name 
												id: str = IndexError
												ctx: Load 
											cause: NoneType = None
									orelse: list 
								element: Return 
									value: BinOp 
										left: Str 
											s: str = This is item 
										op: Add 
										right: Call 
											func: Name 
												id: str = str
												ctx: Load 
											args: list 
												element: Name 
													id: str = i
													ctx: Load 
											keywords: list 
							decorator_list: list 
							returns: NoneType = None
					decorator_list: list 
				element: Assign 
					targets: list 
						element: Name 
							id: str = foo
							ctx: Store 
					value: Call 
						func: Name 
							id: str = Foo
							ctx: Load 
						args: list 
						keywords: list 
				element: Expr 
					value: Call 
						func: Name 
							id: str = __pragma__
							ctx: Load 
						args: list 
							element: Str 
								s: str = opov
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Str 
								s: str = Attempt 1:
						keywords: list 
				element: For 
					target: Name 
						id: str = i
						ctx: Store 
					iter: Name 
						id: str = foo
						ctx: Load 
					body: list 
						element: Expr 
							value: Call 
								func: Attribute 
									value: Name 
										id: str = autoTester
										ctx: Load 
									attr: str = check
									ctx: Load 
								args: list 
									element: Name 
										id: str = i
										ctx: Load 
								keywords: list 
					orelse: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Str 
								s: str = Attempt 2:
						keywords: list 
				element: For 
					target: Name 
						id: str = i
						ctx: Store 
					iter: Call 
						func: Name 
							id: str = range
							ctx: Load 
						args: list 
							element: Call 
								func: Name 
									id: str = len
									ctx: Load 
								args: list 
									element: Name 
										id: str = foo
										ctx: Load 
								keywords: list 
						keywords: list 
					body: list 
						element: Expr 
							value: Call 
								func: Attribute 
									value: Name 
										id: str = autoTester
										ctx: Load 
									attr: str = check
									ctx: Load 
								args: list 
									element: Subscript 
										value: Name 
											id: str = foo
											ctx: Load 
										slice: Index 
											value: Name 
												id: str = i
												ctx: Load 
										ctx: Load 
								keywords: list 
					orelse: list 
				element: Expr 
					value: Call 
						func: Name 
							id: str = __pragma__
							ctx: Load 
						args: list 
							element: Str 
								s: str = noopov
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Str 
								s: str = Issue 414
						keywords: list 
				element: ClassDef 
					name: str = Foo
					bases: list 
					keywords: list 
					body: list 
						element: Pass 
					decorator_list: list 
				element: Assign 
					targets: list 
						element: Name 
							id: str = foo
							ctx: Store 
					value: Call 
						func: Name 
							id: str = Foo
							ctx: Load 
						args: list 
						keywords: list 
				element: Assign 
					targets: list 
						element: Attribute 
							value: Name 
								id: str = foo
								ctx: Load 
							attr: str = bar
							ctx: Store 
					value: Str 
						s: str = baz
				element: Assign 
					targets: list 
						element: Attribute 
							value: Name 
								id: str = foo
								ctx: Load 
							attr: str = name
							ctx: Store 
					value: Str 
						s: str = hello
				element: Assign 
					targets: list 
						element: Attribute 
							value: Name 
								id: str = foo
								ctx: Load 
							attr: str = default
							ctx: Store 
					value: Str 
						s: str = world
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: ListComp 
								elt: Name 
									id: str = x
									ctx: Load 
								generators: list 
									element: comprehension 
										target: Name 
											id: str = x
											ctx: Store 
										iter: Call 
											func: Name 
												id: str = dir
												ctx: Load 
											args: list 
												element: Name 
													id: str = foo
													ctx: Load 
											keywords: list 
										ifs: list 
											element: UnaryOp 
												op: Not 
												operand: Call 
													func: Attribute 
														value: Name 
															id: str = x
															ctx: Load 
														attr: str = startswith
														ctx: Load 
													args: list 
														element: Str 
															s: str = __
													keywords: list 
										is_async: int = 0
						keywords: list 
				element: Expr 
					value: Call 
						func: Name 
							id: str = __pragma__
							ctx: Load 
						args: list 
							element: Str 
								s: str = kwargs
						keywords: list 
				element: FunctionDef 
					name: str = foo
					args: arguments 
						args: list 
						vararg: arg 
							arg: str = args
							annotation: NoneType = None
						kwonlyargs: list 
						kw_defaults: list 
						kwarg: arg 
							arg: str = kwargs
							annotation: NoneType = None
						defaults: list 
					body: list 
						element: Assign 
							targets: list 
								element: Name 
									id: str = default
									ctx: Store 
							value: Call 
								func: Attribute 
									value: Name 
										id: str = kwargs
										ctx: Load 
									attr: str = get
									ctx: Load 
								args: list 
									element: Str 
										s: str = default
									element: Str 
										s: str = bar
								keywords: list 
						element: Return 
							value: Name 
								id: str = default
								ctx: Load 
					decorator_list: list 
					returns: NoneType = None
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Call 
								func: Name 
									id: str = foo
									ctx: Load 
								args: list 
								keywords: list 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Call 
								func: Name 
									id: str = foo
									ctx: Load 
								args: list 
								keywords: list 
									element: keyword 
										arg: str = default
										value: Str 
											s: str = Hello World
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Str 
								s: str = Issue 460
						keywords: list 
				element: Assign 
					targets: list 
						element: Name 
							id: str = s460
							ctx: Store 
					value: Str 
						s: str = car
				element: Assign 
					targets: list 
						element: Name 
							id: str = l460
							ctx: Store 
					value: List 
						elts: list 
							element: Num 
								n: int = 11
							element: Num 
								n: int = 22
							element: Num 
								n: int = 33
						ctx: Load 
				element: Assign 
					targets: list 
						element: Name 
							id: str = t460
							ctx: Store 
					value: Tuple 
						elts: list 
							element: Num 
								n: int = 4
							element: Num 
								n: int = 5
							element: Num 
								n: int = 6
						ctx: Load 
				element: Assign 
					targets: list 
						element: Name 
							id: str = d460
							ctx: Store 
					value: Dict 
						keys: list 
							element: UnaryOp 
								op: USub 
								operand: Num 
									n: int = 1
							element: Str 
								s: str = b
						values: list 
							element: Str 
								s: str = mmminusOne
							element: Str 
								s: str = bbbike
				element: Expr 
					value: Call 
						func: Name 
							id: str = __pragma__
							ctx: Load 
						args: list 
							element: Str 
								s: str = opov
						keywords: list 
				element: Assign 
					targets: list 
						element: Subscript 
							value: Name 
								id: str = l460
								ctx: Load 
							slice: Index 
								value: Num 
									n: int = 0
							ctx: Store 
					value: Num 
						n: int = 1
				element: Assign 
					targets: list 
						element: Subscript 
							value: Name 
								id: str = l460
								ctx: Load 
							slice: Index 
								value: UnaryOp 
									op: USub 
									operand: Num 
										n: int = 2
							ctx: Store 
					value: Num 
						n: int = 2
				element: Assign 
					targets: list 
						element: Subscript 
							value: Name 
								id: str = l460
								ctx: Load 
							slice: Index 
								value: UnaryOp 
									op: USub 
									operand: Num 
										n: int = 1
							ctx: Store 
					value: Num 
						n: int = 3
				element: Assign 
					targets: list 
						element: Subscript 
							value: Name 
								id: str = d460
								ctx: Load 
							slice: Index 
								value: UnaryOp 
									op: USub 
									operand: Num 
										n: int = 1
							ctx: Store 
					value: Str 
						s: str = minusOne
				element: Assign 
					targets: list 
						element: Subscript 
							value: Name 
								id: str = d460
								ctx: Load 
							slice: Index 
								value: Str 
									s: str = b
							ctx: Store 
					value: Str 
						s: str = bike
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Subscript 
								value: Name 
									id: str = s460
									ctx: Load 
								slice: Index 
									value: Num 
										n: int = 0
								ctx: Load 
							element: Subscript 
								value: Name 
									id: str = s460
									ctx: Load 
								slice: Index 
									value: Num 
										n: int = 1
								ctx: Load 
							element: Subscript 
								value: Name 
									id: str = s460
									ctx: Load 
								slice: Index 
									value: Num 
										n: int = 2
								ctx: Load 
							element: Subscript 
								value: Name 
									id: str = s460
									ctx: Load 
								slice: Index 
									value: UnaryOp 
										op: USub 
										operand: Num 
											n: int = 1
								ctx: Load 
							element: Subscript 
								value: Name 
									id: str = s460
									ctx: Load 
								slice: Index 
									value: UnaryOp 
										op: USub 
										operand: Num 
											n: int = 2
								ctx: Load 
							element: Subscript 
								value: Name 
									id: str = s460
									ctx: Load 
								slice: Index 
									value: UnaryOp 
										op: USub 
										operand: Num 
											n: int = 3
								ctx: Load 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Subscript 
								value: Name 
									id: str = l460
									ctx: Load 
								slice: Index 
									value: Num 
										n: int = 0
								ctx: Load 
							element: Subscript 
								value: Name 
									id: str = l460
									ctx: Load 
								slice: Index 
									value: Num 
										n: int = 1
								ctx: Load 
							element: Subscript 
								value: Name 
									id: str = l460
									ctx: Load 
								slice: Index 
									value: Num 
										n: int = 2
								ctx: Load 
							element: Subscript 
								value: Name 
									id: str = l460
									ctx: Load 
								slice: Index 
									value: UnaryOp 
										op: USub 
										operand: Num 
											n: int = 1
								ctx: Load 
							element: Subscript 
								value: Name 
									id: str = l460
									ctx: Load 
								slice: Index 
									value: UnaryOp 
										op: USub 
										operand: Num 
											n: int = 2
								ctx: Load 
							element: Subscript 
								value: Name 
									id: str = l460
									ctx: Load 
								slice: Index 
									value: UnaryOp 
										op: USub 
										operand: Num 
											n: int = 3
								ctx: Load 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Subscript 
								value: Name 
									id: str = t460
									ctx: Load 
								slice: Index 
									value: Num 
										n: int = 0
								ctx: Load 
							element: Subscript 
								value: Name 
									id: str = t460
									ctx: Load 
								slice: Index 
									value: Num 
										n: int = 1
								ctx: Load 
							element: Subscript 
								value: Name 
									id: str = t460
									ctx: Load 
								slice: Index 
									value: Num 
										n: int = 2
								ctx: Load 
							element: Subscript 
								value: Name 
									id: str = t460
									ctx: Load 
								slice: Index 
									value: UnaryOp 
										op: USub 
										operand: Num 
											n: int = 1
								ctx: Load 
							element: Subscript 
								value: Name 
									id: str = t460
									ctx: Load 
								slice: Index 
									value: UnaryOp 
										op: USub 
										operand: Num 
											n: int = 2
								ctx: Load 
							element: Subscript 
								value: Name 
									id: str = t460
									ctx: Load 
								slice: Index 
									value: UnaryOp 
										op: USub 
										operand: Num 
											n: int = 3
								ctx: Load 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Subscript 
								value: Name 
									id: str = d460
									ctx: Load 
								slice: Index 
									value: UnaryOp 
										op: USub 
										operand: Num 
											n: int = 1
								ctx: Load 
							element: Subscript 
								value: Name 
									id: str = d460
									ctx: Load 
								slice: Index 
									value: Str 
										s: str = b
								ctx: Load 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Subscript 
								value: Name 
									id: str = s460
									ctx: Load 
								slice: Index 
									value: Num 
										n: int = 0
								ctx: Load 
							element: Subscript 
								value: Name 
									id: str = s460
									ctx: Load 
								slice: Index 
									value: Num 
										n: int = 1
								ctx: Load 
							element: Subscript 
								value: Name 
									id: str = s460
									ctx: Load 
								slice: Index 
									value: Num 
										n: int = 2
								ctx: Load 
							element: Subscript 
								value: Name 
									id: str = s460
									ctx: Load 
								slice: Index 
									value: UnaryOp 
										op: USub 
										operand: Num 
											n: int = 1
								ctx: Load 
							element: Subscript 
								value: Name 
									id: str = s460
									ctx: Load 
								slice: Index 
									value: UnaryOp 
										op: USub 
										operand: Num 
											n: int = 2
								ctx: Load 
							element: Subscript 
								value: Name 
									id: str = s460
									ctx: Load 
								slice: Index 
									value: UnaryOp 
										op: USub 
										operand: Num 
											n: int = 3
								ctx: Load 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Subscript 
								value: Name 
									id: str = l460
									ctx: Load 
								slice: Index 
									value: Num 
										n: int = 0
								ctx: Load 
							element: Subscript 
								value: Name 
									id: str = l460
									ctx: Load 
								slice: Index 
									value: Num 
										n: int = 1
								ctx: Load 
							element: Subscript 
								value: Name 
									id: str = l460
									ctx: Load 
								slice: Index 
									value: Num 
										n: int = 2
								ctx: Load 
							element: Subscript 
								value: Name 
									id: str = l460
									ctx: Load 
								slice: Index 
									value: UnaryOp 
										op: USub 
										operand: Num 
											n: int = 1
								ctx: Load 
							element: Subscript 
								value: Name 
									id: str = l460
									ctx: Load 
								slice: Index 
									value: UnaryOp 
										op: USub 
										operand: Num 
											n: int = 2
								ctx: Load 
							element: Subscript 
								value: Name 
									id: str = l460
									ctx: Load 
								slice: Index 
									value: UnaryOp 
										op: USub 
										operand: Num 
											n: int = 3
								ctx: Load 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Subscript 
								value: Name 
									id: str = t460
									ctx: Load 
								slice: Index 
									value: Num 
										n: int = 0
								ctx: Load 
							element: Subscript 
								value: Name 
									id: str = t460
									ctx: Load 
								slice: Index 
									value: Num 
										n: int = 1
								ctx: Load 
							element: Subscript 
								value: Name 
									id: str = t460
									ctx: Load 
								slice: Index 
									value: Num 
										n: int = 2
								ctx: Load 
							element: Subscript 
								value: Name 
									id: str = t460
									ctx: Load 
								slice: Index 
									value: UnaryOp 
										op: USub 
										operand: Num 
											n: int = 1
								ctx: Load 
							element: Subscript 
								value: Name 
									id: str = t460
									ctx: Load 
								slice: Index 
									value: UnaryOp 
										op: USub 
										operand: Num 
											n: int = 2
								ctx: Load 
							element: Subscript 
								value: Name 
									id: str = t460
									ctx: Load 
								slice: Index 
									value: UnaryOp 
										op: USub 
										operand: Num 
											n: int = 3
								ctx: Load 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Subscript 
								value: Name 
									id: str = d460
									ctx: Load 
								slice: Index 
									value: UnaryOp 
										op: USub 
										operand: Num 
											n: int = 1
								ctx: Load 
							element: Subscript 
								value: Name 
									id: str = d460
									ctx: Load 
								slice: Index 
									value: Str 
										s: str = b
								ctx: Load 
						keywords: list 
				element: Expr 
					value: Call 
						func: Name 
							id: str = __pragma__
							ctx: Load 
						args: list 
							element: Str 
								s: str = noopov
						keywords: list 
				element: Expr 
					value: Call 
						func: Name 
							id: str = __pragma__
							ctx: Load 
						args: list 
							element: Str 
								s: str = keycheck
						keywords: list 
				element: Try 
					body: list 
						element: Expr 
							value: Call 
								func: Attribute 
									value: Name 
										id: str = autoTester
										ctx: Load 
									attr: str = check
									ctx: Load 
								args: list 
									element: Subscript 
										value: Name 
											id: str = d460
											ctx: Load 
										slice: Index 
											value: UnaryOp 
												op: USub 
												operand: Num 
													n: int = 1
										ctx: Load 
									element: Subscript 
										value: Name 
											id: str = d460
											ctx: Load 
										slice: Index 
											value: Str 
												s: str = c
										ctx: Load 
								keywords: list 
					handlers: list 
						element: ExceptHandler 
							type: NoneType = None
							name: NoneType = None
							body: list 
								element: Expr 
									value: Call 
										func: Attribute 
											value: Name 
												id: str = autoTester
												ctx: Load 
											attr: str = check
											ctx: Load 
										args: list 
											element: Num 
												n: int = 111
										keywords: list 
					orelse: list 
					finalbody: list 
				element: Try 
					body: list 
						element: Expr 
							value: Call 
								func: Attribute 
									value: Name 
										id: str = autoTester
										ctx: Load 
									attr: str = check
									ctx: Load 
								args: list 
									element: Subscript 
										value: Name 
											id: str = d460
											ctx: Load 
										slice: Index 
											value: UnaryOp 
												op: USub 
												operand: Num 
													n: int = 2
										ctx: Load 
									element: Subscript 
										value: Name 
											id: str = d460
											ctx: Load 
										slice: Index 
											value: Str 
												s: str = b
										ctx: Load 
								keywords: list 
					handlers: list 
						element: ExceptHandler 
							type: NoneType = None
							name: NoneType = None
							body: list 
								element: Expr 
									value: Call 
										func: Attribute 
											value: Name 
												id: str = autoTester
												ctx: Load 
											attr: str = check
											ctx: Load 
										args: list 
											element: Num 
												n: int = 222
										keywords: list 
					orelse: list 
					finalbody: list 
				element: Expr 
					value: Call 
						func: Name 
							id: str = __pragma__
							ctx: Load 
						args: list 
							element: Str 
								s: str = nokeycheck
						keywords: list 
			decorator_list: list 
			returns: NoneType = None