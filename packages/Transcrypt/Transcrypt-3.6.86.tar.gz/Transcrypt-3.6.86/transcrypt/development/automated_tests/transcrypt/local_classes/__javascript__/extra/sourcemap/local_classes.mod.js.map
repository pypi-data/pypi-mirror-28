{
	"version": 3,
	"file": "D:/activ_tosh/geatec/transcrypt/qquick/Transcrypt/transcrypt/development/automated_tests/transcrypt/local_classes/__javascript__/local_classes.mod.js",
	"sources": [
		"D:/activ_tosh/geatec/transcrypt/qquick/Transcrypt/transcrypt/development/automated_tests/transcrypt/local_classes/__init__.py"
	],
	"sourcesContent": [
		"def run (autoTester):       \n    class A:\n        class B:\n            class C:\n                def __init__ (self, x):\n                    self.x = x\n                    \n                def tell (self):\n                    autoTester.check (self.x)\n                    autoTester.check (self.e)\n                    \n                # Limitation: no destructuring assignment inside nested classes\n                e = 3\n                \n            def __init__ (self, x):\n                self.x = x\n                \n            def tell (self):\n                autoTester.check (self.x)\n                autoTester.check (self.d)\n                \n            d = 2\n                \n        c = 1\n\n        def __init__ (self, x):\n            self.x = x\n            \n        def tell (self):\n            autoTester.check (self.x)\n            autoTester.check (self.c)\n            \n    def f (x):\n        class G:\n            class H:\n                def __init__ (self, x):\n                    self.x = x\n                    \n                def tell (self):\n                    autoTester.check (self.x)\n                    autoTester.check (self.i)\n                    \n                i = 5\n        \n            def __init__ (self, x):\n                self.x = x\n                \n            def tell (self):\n                autoTester.check (self.x)\n                \n            k = 4\n            \n        g = G (6)\n        g.tell ()\n        autoTester.check (g.k)\n        \n        h = G.H (7)\n        h.tell ()\n        autoTester.check (h.i)\n        \n        class P (A.B):\n            pass\n            \n        p = P (7)\n        p.tell ()\n        autoTester.check (p.d)\n                \n    a = A (8)\n    b = a.B (9)\n    c = b.C (10)\n\n    a.tell ()\n    b.tell ()\n    c.tell ()\n\n    autoTester.check (a.c)\n    autoTester.check (b.d)\n\n    f (7)\n"
	],
	"mappings": "AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AAGA;AAAA;AAEA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AAEA;AAAA;AAEA;AAEA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AAEA;AAAA;AAEA;AACA;AAAA;AAEA;AACA;AAAA;AAEA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA"
}