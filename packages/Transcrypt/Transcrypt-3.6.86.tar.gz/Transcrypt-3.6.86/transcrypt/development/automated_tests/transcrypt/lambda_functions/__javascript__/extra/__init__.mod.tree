file: Module 
	body: list 
		element: FunctionDef 
			name: str = run
			args: arguments 
				args: list 
					element: arg 
						arg: str = autoTester
						annotation: NoneType = None
				vararg: NoneType = None
				kwonlyargs: list 
				kw_defaults: list 
				kwarg: NoneType = None
				defaults: list 
			body: list 
				element: Assign 
					targets: list 
						element: Name 
							id: str = z
							ctx: Store 
					value: Num 
						n: int = 1000
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Call 
								func: Lambda 
									args: arguments 
										args: list 
											element: arg 
												arg: str = x
												annotation: NoneType = None
											element: arg 
												arg: str = y
												annotation: NoneType = None
										vararg: NoneType = None
										kwonlyargs: list 
										kw_defaults: list 
										kwarg: NoneType = None
										defaults: list 
									body: BinOp 
										left: BinOp 
											left: Name 
												id: str = x
												ctx: Load 
											op: Add 
											right: Name 
												id: str = y
												ctx: Load 
										op: Add 
										right: Name 
											id: str = z
											ctx: Load 
								args: list 
									element: Num 
										n: int = 111
									element: Num 
										n: int = 222
								keywords: list 
						keywords: list 
				element: FunctionDef 
					name: str = f
					args: arguments 
						args: list 
							element: arg 
								arg: str = list0
								annotation: NoneType = None
							element: arg 
								arg: str = list1
								annotation: NoneType = None
							element: arg 
								arg: str = aFunc
								annotation: NoneType = None
						vararg: NoneType = None
						kwonlyargs: list 
						kw_defaults: list 
						kwarg: NoneType = None
						defaults: list 
					body: list 
						element: Return 
							value: ListComp 
								elt: Call 
									func: Name 
										id: str = aFunc
										ctx: Load 
									args: list 
										element: Starred 
											value: Name 
												id: str = elem
												ctx: Load 
											ctx: Load 
									keywords: list 
								generators: list 
									element: comprehension 
										target: Name 
											id: str = elem
											ctx: Store 
										iter: Call 
											func: Name 
												id: str = zip
												ctx: Load 
											args: list 
												element: Name 
													id: str = list0
													ctx: Load 
												element: Name 
													id: str = list1
													ctx: Load 
											keywords: list 
										ifs: list 
										is_async: int = 0
					decorator_list: list 
					returns: NoneType = None
				element: Assign 
					targets: list 
						element: Name 
							id: str = x
							ctx: Store 
					value: Call 
						func: Name 
							id: str = f
							ctx: Load 
						args: list 
							element: Call 
								func: Name 
									id: str = range
									ctx: Load 
								args: list 
									element: Num 
										n: int = 10
								keywords: list 
							element: Call 
								func: Name 
									id: str = range
									ctx: Load 
								args: list 
									element: Num 
										n: int = 0
									element: Num 
										n: int = 100
									element: Num 
										n: int = 10
								keywords: list 
							element: Lambda 
								args: arguments 
									args: list 
										element: arg 
											arg: str = x
											annotation: NoneType = None
										element: arg 
											arg: str = y
											annotation: NoneType = None
									vararg: NoneType = None
									kwonlyargs: list 
									kw_defaults: list 
									kwarg: NoneType = None
									defaults: list 
								body: BinOp 
									left: BinOp 
										left: Name 
											id: str = x
											ctx: Load 
										op: Add 
										right: Name 
											id: str = y
											ctx: Load 
									op: Add 
									right: Name 
										id: str = z
										ctx: Load 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Name 
								id: str = x
								ctx: Load 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Call 
								func: Name 
									id: str = f
									ctx: Load 
								args: list 
									element: Call 
										func: Name 
											id: str = range
											ctx: Load 
										args: list 
											element: Num 
												n: int = 10
											element: Num 
												n: int = 20
										keywords: list 
									element: Call 
										func: Name 
											id: str = range
											ctx: Load 
										args: list 
											element: Num 
												n: int = 100
											element: Num 
												n: int = 200
											element: Num 
												n: int = 10
										keywords: list 
									element: Lambda 
										args: arguments 
											args: list 
												element: arg 
													arg: str = x
													annotation: NoneType = None
												element: arg 
													arg: str = y
													annotation: NoneType = None
											vararg: NoneType = None
											kwonlyargs: list 
											kw_defaults: list 
											kwarg: NoneType = None
											defaults: list 
										body: BinOp 
											left: BinOp 
												left: Name 
													id: str = x
													ctx: Load 
												op: Mult 
												right: Name 
													id: str = y
													ctx: Load 
											op: Add 
											right: BinOp 
												left: Num 
													n: int = 100
												op: Mult 
												right: Name 
													id: str = z
													ctx: Load 
								keywords: list 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Call 
								func: Name 
									id: str = f
									ctx: Load 
								args: list 
									element: Call 
										func: Name 
											id: str = range
											ctx: Load 
										args: list 
											element: Num 
												n: int = 10
											element: Num 
												n: int = 20
										keywords: list 
									element: Call 
										func: Name 
											id: str = range
											ctx: Load 
										args: list 
											element: Num 
												n: int = 100
											element: Num 
												n: int = 200
											element: Num 
												n: int = 10
										keywords: list 
									element: Lambda 
										args: arguments 
											args: list 
											vararg: arg 
												arg: str = args
												annotation: NoneType = None
											kwonlyargs: list 
											kw_defaults: list 
											kwarg: NoneType = None
											defaults: list 
										body: BinOp 
											left: BinOp 
												left: Subscript 
													value: Name 
														id: str = args
														ctx: Load 
													slice: Index 
														value: Num 
															n: int = 0
													ctx: Load 
												op: Mult 
												right: Subscript 
													value: Name 
														id: str = args
														ctx: Load 
													slice: Index 
														value: Num 
															n: int = 1
													ctx: Load 
											op: Add 
											right: BinOp 
												left: Num 
													n: int = 100
												op: Mult 
												right: Name 
													id: str = z
													ctx: Load 
								keywords: list 
						keywords: list 
			decorator_list: list 
			returns: NoneType = None