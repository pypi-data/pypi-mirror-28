file: Module 
	body: list 
		element: ImportFrom 
			module: str = org.transcrypt.stubs.browser
			names: list 
				element: alias 
					name: str = __pragma__
					asname: NoneType = None
			level: int = 0
		element: FunctionDef 
			name: str = run
			args: arguments 
				args: list 
					element: arg 
						arg: str = autoTester
						annotation: NoneType = None
				vararg: NoneType = None
				kwonlyargs: list 
				kw_defaults: list 
				kwarg: NoneType = None
				defaults: list 
			body: list 
				element: FunctionDef 
					name: str = repeat3
					args: arguments 
						args: list 
							element: arg 
								arg: str = bareFunc
								annotation: NoneType = None
						vararg: NoneType = None
						kwonlyargs: list 
						kw_defaults: list 
						kwarg: NoneType = None
						defaults: list 
					body: list 
						element: Expr 
							value: Call 
								func: Name 
									id: str = __pragma__
									ctx: Load 
								args: list 
									element: Str 
										s: str = kwargs
								keywords: list 
						element: FunctionDef 
							name: str = innerFunc
							args: arguments 
								args: list 
								vararg: arg 
									arg: str = args
									annotation: NoneType = None
								kwonlyargs: list 
								kw_defaults: list 
								kwarg: arg 
									arg: str = kwargs
									annotation: NoneType = None
								defaults: list 
							body: list 
								element: Expr 
									value: Call 
										func: Attribute 
											value: Name 
												id: str = autoTester
												ctx: Load 
											attr: str = check
											ctx: Load 
										args: list 
											element: Str 
												s: str = BEGIN repeat3
										keywords: list 
								element: For 
									target: Name 
										id: str = i
										ctx: Store 
									iter: Call 
										func: Name 
											id: str = range
											ctx: Load 
										args: list 
											element: Num 
												n: int = 3
										keywords: list 
									body: list 
										element: Expr 
											value: Call 
												func: Name 
													id: str = bareFunc
													ctx: Load 
												args: list 
													element: Starred 
														value: Name 
															id: str = args
															ctx: Load 
														ctx: Load 
												keywords: list 
													element: keyword 
														arg: NoneType = None
														value: Name 
															id: str = kwargs
															ctx: Load 
									orelse: list 
								element: Expr 
									value: Call 
										func: Attribute 
											value: Name 
												id: str = autoTester
												ctx: Load 
											attr: str = check
											ctx: Load 
										args: list 
											element: Str 
												s: str = END repeat3
										keywords: list 
							decorator_list: list 
							returns: NoneType = None
						element: Expr 
							value: Call 
								func: Name 
									id: str = __pragma__
									ctx: Load 
								args: list 
									element: Str 
										s: str = nokwargs
								keywords: list 
						element: Return 
							value: Name 
								id: str = innerFunc
								ctx: Load 
					decorator_list: list 
					returns: NoneType = None
				element: FunctionDef 
					name: str = repeatN
					args: arguments 
						args: list 
							element: arg 
								arg: str = n
								annotation: NoneType = None
						vararg: NoneType = None
						kwonlyargs: list 
						kw_defaults: list 
						kwarg: NoneType = None
						defaults: list 
					body: list 
						element: FunctionDef 
							name: str = repeat
							args: arguments 
								args: list 
									element: arg 
										arg: str = bareFunc
										annotation: NoneType = None
								vararg: NoneType = None
								kwonlyargs: list 
								kw_defaults: list 
								kwarg: NoneType = None
								defaults: list 
							body: list 
								element: Expr 
									value: Call 
										func: Name 
											id: str = __pragma__
											ctx: Load 
										args: list 
											element: Str 
												s: str = kwargs
										keywords: list 
								element: FunctionDef 
									name: str = innerFunc
									args: arguments 
										args: list 
										vararg: arg 
											arg: str = args
											annotation: NoneType = None
										kwonlyargs: list 
										kw_defaults: list 
										kwarg: arg 
											arg: str = kwargs
											annotation: NoneType = None
										defaults: list 
									body: list 
										element: Expr 
											value: Call 
												func: Attribute 
													value: Name 
														id: str = autoTester
														ctx: Load 
													attr: str = check
													ctx: Load 
												args: list 
													element: Call 
														func: Attribute 
															value: Str 
																s: str = BEGIN repeatN ({})
															attr: str = format
															ctx: Load 
														args: list 
															element: Name 
																id: str = n
																ctx: Load 
														keywords: list 
												keywords: list 
										element: For 
											target: Name 
												id: str = i
												ctx: Store 
											iter: Call 
												func: Name 
													id: str = range
													ctx: Load 
												args: list 
													element: Name 
														id: str = n
														ctx: Load 
												keywords: list 
											body: list 
												element: Expr 
													value: Call 
														func: Name 
															id: str = bareFunc
															ctx: Load 
														args: list 
															element: Starred 
																value: Name 
																	id: str = args
																	ctx: Load 
																ctx: Load 
														keywords: list 
															element: keyword 
																arg: NoneType = None
																value: Name 
																	id: str = kwargs
																	ctx: Load 
											orelse: list 
										element: Expr 
											value: Call 
												func: Attribute 
													value: Name 
														id: str = autoTester
														ctx: Load 
													attr: str = check
													ctx: Load 
												args: list 
													element: Call 
														func: Attribute 
															value: Str 
																s: str = END repeatN ({})
															attr: str = format
															ctx: Load 
														args: list 
															element: Name 
																id: str = n
																ctx: Load 
														keywords: list 
												keywords: list 
									decorator_list: list 
									returns: NoneType = None
								element: Expr 
									value: Call 
										func: Name 
											id: str = __pragma__
											ctx: Load 
										args: list 
											element: Str 
												s: str = nokwargs
										keywords: list 
								element: Return 
									value: Name 
										id: str = innerFunc
										ctx: Load 
							decorator_list: list 
							returns: NoneType = None
						element: Return 
							value: Name 
								id: str = repeat
								ctx: Load 
					decorator_list: list 
					returns: NoneType = None
				element: ClassDef 
					name: str = Repeater
					bases: list 
					keywords: list 
					body: list 
						element: FunctionDef 
							name: str = __init__
							args: arguments 
								args: list 
									element: arg 
										arg: str = self
										annotation: NoneType = None
									element: arg 
										arg: str = n
										annotation: NoneType = None
								vararg: NoneType = None
								kwonlyargs: list 
								kw_defaults: list 
								kwarg: NoneType = None
								defaults: list 
							body: list 
								element: Assign 
									targets: list 
										element: Attribute 
											value: Name 
												id: str = self
												ctx: Load 
											attr: str = n
											ctx: Store 
									value: Name 
										id: str = n
										ctx: Load 
							decorator_list: list 
							returns: NoneType = None
						element: FunctionDef 
							name: str = __call__
							args: arguments 
								args: list 
									element: arg 
										arg: str = self
										annotation: NoneType = None
									element: arg 
										arg: str = bareFunc
										annotation: NoneType = None
								vararg: NoneType = None
								kwonlyargs: list 
								kw_defaults: list 
								kwarg: NoneType = None
								defaults: list 
							body: list 
								element: Expr 
									value: Call 
										func: Name 
											id: str = __pragma__
											ctx: Load 
										args: list 
											element: Str 
												s: str = kwargs
										keywords: list 
								element: FunctionDef 
									name: str = innerFunc
									args: arguments 
										args: list 
										vararg: arg 
											arg: str = args
											annotation: NoneType = None
										kwonlyargs: list 
										kw_defaults: list 
										kwarg: arg 
											arg: str = kwargs
											annotation: NoneType = None
										defaults: list 
									body: list 
										element: Expr 
											value: Call 
												func: Attribute 
													value: Name 
														id: str = autoTester
														ctx: Load 
													attr: str = check
													ctx: Load 
												args: list 
													element: Str 
														s: str = BEGIN repeat3
												keywords: list 
										element: For 
											target: Name 
												id: str = i
												ctx: Store 
											iter: Call 
												func: Name 
													id: str = range
													ctx: Load 
												args: list 
													element: Attribute 
														value: Name 
															id: str = self
															ctx: Load 
														attr: str = n
														ctx: Load 
												keywords: list 
											body: list 
												element: Expr 
													value: Call 
														func: Name 
															id: str = bareFunc
															ctx: Load 
														args: list 
															element: Starred 
																value: Name 
																	id: str = args
																	ctx: Load 
																ctx: Load 
														keywords: list 
															element: keyword 
																arg: NoneType = None
																value: Name 
																	id: str = kwargs
																	ctx: Load 
											orelse: list 
										element: Expr 
											value: Call 
												func: Attribute 
													value: Name 
														id: str = autoTester
														ctx: Load 
													attr: str = check
													ctx: Load 
												args: list 
													element: Str 
														s: str = END repeat3
												keywords: list 
									decorator_list: list 
									returns: NoneType = None
								element: Expr 
									value: Call 
										func: Name 
											id: str = __pragma__
											ctx: Load 
										args: list 
											element: Str 
												s: str = nokwargs
										keywords: list 
								element: Return 
									value: Name 
										id: str = innerFunc
										ctx: Load 
							decorator_list: list 
							returns: NoneType = None
					decorator_list: list 
				element: FunctionDef 
					name: str = funcNoArg
					args: arguments 
						args: list 
						vararg: NoneType = None
						kwonlyargs: list 
						kw_defaults: list 
						kwarg: NoneType = None
						defaults: list 
					body: list 
						element: Expr 
							value: Call 
								func: Attribute 
									value: Name 
										id: str = autoTester
										ctx: Load 
									attr: str = check
									ctx: Load 
								args: list 
									element: Str 
										s: str = spam
								keywords: list 
					decorator_list: list 
						element: Call 
							func: Name 
								id: str = repeatN
								ctx: Load 
							args: list 
								element: Num 
									n: int = 4
							keywords: list 
						element: Name 
							id: str = repeat3
							ctx: Load 
					returns: NoneType = None
				element: Expr 
					value: Call 
						func: Name 
							id: str = funcNoArg
							ctx: Load 
						args: list 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
						keywords: list 
				element: Expr 
					value: Call 
						func: Name 
							id: str = __pragma__
							ctx: Load 
						args: list 
							element: Str 
								s: str = kwargs
						keywords: list 
				element: FunctionDef 
					name: str = funcArg
					args: arguments 
						args: list 
							element: arg 
								arg: str = a
								annotation: NoneType = None
						vararg: NoneType = None
						kwonlyargs: list 
						kw_defaults: list 
						kwarg: NoneType = None
						defaults: list 
					body: list 
						element: Expr 
							value: Call 
								func: Attribute 
									value: Name 
										id: str = autoTester
										ctx: Load 
									attr: str = check
									ctx: Load 
								args: list 
									element: Str 
										s: str = eggs
									element: Name 
										id: str = a
										ctx: Load 
								keywords: list 
					decorator_list: list 
						element: Name 
							id: str = repeat3
							ctx: Load 
						element: Call 
							func: Name 
								id: str = repeatN
								ctx: Load 
							args: list 
								element: Num 
									n: int = 2
							keywords: list 
					returns: NoneType = None
				element: Expr 
					value: Call 
						func: Name 
							id: str = __pragma__
							ctx: Load 
						args: list 
							element: Str 
								s: str = nokwargs
						keywords: list 
				element: Expr 
					value: Call 
						func: Name 
							id: str = funcArg
							ctx: Load 
						args: list 
							element: Num 
								n: int = 3
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
						keywords: list 
				element: Expr 
					value: Call 
						func: Name 
							id: str = funcArg
							ctx: Load 
						args: list 
						keywords: list 
							element: keyword 
								arg: str = a
								value: Num 
									n: int = 4
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
						keywords: list 
				element: Expr 
					value: Call 
						func: Name 
							id: str = __pragma__
							ctx: Load 
						args: list 
							element: Str 
								s: str = opov
						keywords: list 
				element: FunctionDef 
					name: str = funcNoArg2
					args: arguments 
						args: list 
						vararg: NoneType = None
						kwonlyargs: list 
						kw_defaults: list 
						kwarg: NoneType = None
						defaults: list 
					body: list 
						element: Expr 
							value: Call 
								func: Attribute 
									value: Name 
										id: str = autoTester
										ctx: Load 
									attr: str = check
									ctx: Load 
								args: list 
									element: Str 
										s: str = toast
								keywords: list 
					decorator_list: list 
						element: Call 
							func: Name 
								id: str = Repeater
								ctx: Load 
							args: list 
								element: Num 
									n: int = 3
							keywords: list 
					returns: NoneType = None
				element: Expr 
					value: Call 
						func: Name 
							id: str = __pragma__
							ctx: Load 
						args: list 
							element: Str 
								s: str = noopov
						keywords: list 
				element: Expr 
					value: Call 
						func: Name 
							id: str = funcNoArg2
							ctx: Load 
						args: list 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
						keywords: list 
				element: Expr 
					value: Call 
						func: Name 
							id: str = __pragma__
							ctx: Load 
						args: list 
							element: Str 
								s: str = opov
						keywords: list 
				element: Expr 
					value: Call 
						func: Name 
							id: str = __pragma__
							ctx: Load 
						args: list 
							element: Str 
								s: str = kwargs
						keywords: list 
				element: FunctionDef 
					name: str = funcArg2
					args: arguments 
						args: list 
							element: arg 
								arg: str = a
								annotation: NoneType = None
						vararg: NoneType = None
						kwonlyargs: list 
						kw_defaults: list 
						kwarg: NoneType = None
						defaults: list 
					body: list 
						element: Expr 
							value: Call 
								func: Attribute 
									value: Name 
										id: str = autoTester
										ctx: Load 
									attr: str = check
									ctx: Load 
								args: list 
									element: Str 
										s: str = jam
									element: Name 
										id: str = a
										ctx: Load 
								keywords: list 
					decorator_list: list 
						element: Call 
							func: Name 
								id: str = Repeater
								ctx: Load 
							args: list 
								element: Num 
									n: int = 5
							keywords: list 
					returns: NoneType = None
				element: Expr 
					value: Call 
						func: Name 
							id: str = __pragma__
							ctx: Load 
						args: list 
							element: Str 
								s: str = nokwargs
						keywords: list 
				element: Expr 
					value: Call 
						func: Name 
							id: str = __pragma__
							ctx: Load 
						args: list 
							element: Str 
								s: str = noopov
						keywords: list 
				element: Expr 
					value: Call 
						func: Name 
							id: str = funcArg2
							ctx: Load 
						args: list 
							element: Num 
								n: int = 3
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
						keywords: list 
				element: Expr 
					value: Call 
						func: Name 
							id: str = funcArg2
							ctx: Load 
						args: list 
						keywords: list 
							element: keyword 
								arg: str = a
								value: Num 
									n: int = 4
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
						keywords: list 
				element: FunctionDef 
					name: str = next
					args: arguments 
						args: list 
							element: arg 
								arg: str = bareFunc
								annotation: NoneType = None
						vararg: NoneType = None
						kwonlyargs: list 
						kw_defaults: list 
						kwarg: NoneType = None
						defaults: list 
					body: list 
						element: FunctionDef 
							name: str = innerFunc
							args: arguments 
								args: list 
									element: arg 
										arg: str = value
										annotation: NoneType = None
								vararg: NoneType = None
								kwonlyargs: list 
								kw_defaults: list 
								kwarg: NoneType = None
								defaults: list 
							body: list 
								element: Return 
									value: Call 
										func: Name 
											id: str = bareFunc
											ctx: Load 
										args: list 
											element: BinOp 
												left: Name 
													id: str = value
													ctx: Load 
												op: Add 
												right: Num 
													n: int = 1
										keywords: list 
							decorator_list: list 
							returns: NoneType = None
						element: Return 
							value: Name 
								id: str = innerFunc
								ctx: Load 
					decorator_list: list 
					returns: NoneType = None
				element: ClassDef 
					name: str = Number
					bases: list 
					keywords: list 
					body: list 
						element: FunctionDef 
							name: str = __init__
							args: arguments 
								args: list 
									element: arg 
										arg: str = self
										annotation: NoneType = None
									element: arg 
										arg: str = value
										annotation: NoneType = None
								vararg: NoneType = None
								kwonlyargs: list 
								kw_defaults: list 
								kwarg: NoneType = None
								defaults: list 
							body: list 
								element: Assign 
									targets: list 
										element: Attribute 
											value: Name 
												id: str = self
												ctx: Load 
											attr: str = value
											ctx: Store 
									value: Name 
										id: str = value
										ctx: Load 
							decorator_list: list 
							returns: NoneType = None
					decorator_list: list 
						element: Name 
							id: str = next
							ctx: Load 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Str 
								s: str = two
							element: Attribute 
								value: Call 
									func: Name 
										id: str = Number
										ctx: Load 
									args: list 
										element: Num 
											n: int = 1
									keywords: list 
								attr: str = value
								ctx: Load 
						keywords: list 
				element: ClassDef 
					name: str = Test
					bases: list 
					keywords: list 
					body: list 
						element: FunctionDef 
							name: str = f
							args: arguments 
								args: list 
									element: arg 
										arg: str = cls
										annotation: NoneType = None
									element: arg 
										arg: str = x
										annotation: NoneType = None
									element: arg 
										arg: str = y
										annotation: NoneType = None
								vararg: NoneType = None
								kwonlyargs: list 
								kw_defaults: list 
								kwarg: NoneType = None
								defaults: list 
							body: list 
								element: Expr 
									value: Call 
										func: Attribute 
											value: Name 
												id: str = autoTester
												ctx: Load 
											attr: str = check
											ctx: Load 
										args: list 
											element: Attribute 
												value: Name 
													id: str = cls
													ctx: Load 
												attr: str = __name__
												ctx: Load 
											element: Name 
												id: str = x
												ctx: Load 
											element: Name 
												id: str = y
												ctx: Load 
										keywords: list 
							decorator_list: list 
								element: Name 
									id: str = classmethod
									ctx: Load 
							returns: NoneType = None
						element: FunctionDef 
							name: str = g
							args: arguments 
								args: list 
									element: arg 
										arg: str = self
										annotation: NoneType = None
									element: arg 
										arg: str = x
										annotation: NoneType = None
									element: arg 
										arg: str = y
										annotation: NoneType = None
								vararg: NoneType = None
								kwonlyargs: list 
								kw_defaults: list 
								kwarg: NoneType = None
								defaults: list 
							body: list 
								element: Expr 
									value: Call 
										func: Attribute 
											value: Name 
												id: str = autoTester
												ctx: Load 
											attr: str = check
											ctx: Load 
										args: list 
											element: Attribute 
												value: Attribute 
													value: Name 
														id: str = self
														ctx: Load 
													attr: str = __class__
													ctx: Load 
												attr: str = __name__
												ctx: Load 
											element: Name 
												id: str = x
												ctx: Load 
											element: Name 
												id: str = y
												ctx: Load 
										keywords: list 
							decorator_list: list 
							returns: NoneType = None
					decorator_list: list 
				element: Assign 
					targets: list 
						element: Name 
							id: str = test
							ctx: Store 
					value: Call 
						func: Name 
							id: str = Test
							ctx: Load 
						args: list 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = test
								ctx: Load 
							attr: str = f
							ctx: Load 
						args: list 
							element: Num 
								n: int = 1
							element: Num 
								n: int = 2
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = test
								ctx: Load 
							attr: str = g
							ctx: Load 
						args: list 
							element: Num 
								n: int = 3
							element: Num 
								n: int = 4
						keywords: list 
			decorator_list: list 
			returns: NoneType = None