file: Module 
	body: list 
		element: FunctionDef 
			name: str = run
			args: arguments 
				args: list 
					element: arg 
						arg: str = autoTester
						annotation: NoneType = None
				vararg: NoneType = None
				kwonlyargs: list 
				kw_defaults: list 
				kwarg: NoneType = None
				defaults: list 
			body: list 
				element: Assign 
					targets: list 
						element: Tuple 
							elts: list 
								element: Tuple 
									elts: list 
										element: Name 
											id: str = a
											ctx: Store 
										element: Name 
											id: str = b
											ctx: Store 
									ctx: Store 
								element: Name 
									id: str = santa
									ctx: Store 
								element: List 
									elts: list 
										element: Name 
											id: str = c
											ctx: Store 
										element: Name 
											id: str = d
											ctx: Store 
									ctx: Store 
								element: Name 
									id: str = e
									ctx: Store 
							ctx: Store 
					value: Tuple 
						elts: list 
							element: Tuple 
								elts: list 
									element: Num 
										n: int = 1
									element: Num 
										n: int = 2
								ctx: Load 
							element: Str 
								s: str = santa-claus
							element: Set 
								elts: list 
									element: Num 
										n: int = 3
									element: Num 
										n: int = 4
							element: Num 
								n: int = 5
						ctx: Load 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Name 
								id: str = a
								ctx: Load 
							element: Name 
								id: str = b
								ctx: Load 
							element: Name 
								id: str = c
								ctx: Load 
							element: Name 
								id: str = d
								ctx: Load 
							element: Name 
								id: str = e
								ctx: Load 
							element: Name 
								id: str = santa
								ctx: Load 
						keywords: list 
				element: For 
					target: Tuple 
						elts: list 
							element: Name 
								id: str = i
								ctx: Store 
							element: Name 
								id: str = x
								ctx: Store 
						ctx: Store 
					iter: Call 
						func: Name 
							id: str = enumerate
							ctx: Load 
						args: list 
							element: Tuple 
								elts: list 
									element: Num 
										n: float = 0.5
									element: Num 
										n: float = 1.5
									element: Num 
										n: float = 2.5
									element: Num 
										n: float = 3.5
								ctx: Load 
						keywords: list 
					body: list 
						element: Expr 
							value: Call 
								func: Attribute 
									value: Name 
										id: str = autoTester
										ctx: Load 
									attr: str = check
									ctx: Load 
								args: list 
									element: Name 
										id: str = i
										ctx: Load 
									element: Name 
										id: str = x
										ctx: Load 
								keywords: list 
					orelse: list 
				element: Assign 
					targets: list 
						element: Tuple 
							elts: list 
								element: Name 
									id: str = e
									ctx: Store 
								element: Name 
									id: str = pi
									ctx: Store 
							ctx: Store 
					value: Tuple 
						elts: list 
							element: Num 
								n: float = 3.14
							element: Num 
								n: float = 2.74
						ctx: Load 
				element: Assign 
					targets: list 
						element: Tuple 
							elts: list 
								element: Name 
									id: str = e
									ctx: Store 
								element: Name 
									id: str = pi
									ctx: Store 
							ctx: Store 
					value: Tuple 
						elts: list 
							element: Name 
								id: str = pi
								ctx: Load 
							element: Name 
								id: str = e
								ctx: Load 
						ctx: Load 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Name 
								id: str = e
								ctx: Load 
							element: Name 
								id: str = pi
								ctx: Load 
						keywords: list 
				element: FunctionDef 
					name: str = f
					args: arguments 
						args: list 
						vararg: NoneType = None
						kwonlyargs: list 
						kw_defaults: list 
						kwarg: NoneType = None
						defaults: list 
					body: list 
						element: Return 
							value: ListComp 
								elt: Tuple 
									elts: list 
										element: Name 
											id: str = i
											ctx: Load 
										element: BinOp 
											left: Num 
												n: int = 2
											op: Mult 
											right: Name 
												id: str = i
												ctx: Load 
									ctx: Load 
								generators: list 
									element: comprehension 
										target: Name 
											id: str = i
											ctx: Store 
										iter: Call 
											func: Name 
												id: str = range
												ctx: Load 
											args: list 
												element: Num 
													n: int = 7000
												element: Num 
													n: int = 10000
												element: Num 
													n: int = 1000
											keywords: list 
										ifs: list 
										is_async: int = 0
					decorator_list: list 
					returns: NoneType = None
				element: FunctionDef 
					name: str = g
					args: arguments 
						args: list 
						vararg: NoneType = None
						kwonlyargs: list 
						kw_defaults: list 
						kwarg: NoneType = None
						defaults: list 
					body: list 
						element: Return 
							value: Name 
								id: str = f
								ctx: Load 
					decorator_list: list 
					returns: NoneType = None
				element: Assign 
					targets: list 
						element: Tuple 
							elts: list 
								element: List 
									elts: list 
										element: Name 
											id: str = k
											ctx: Store 
										element: Name 
											id: str = l
											ctx: Store 
									ctx: Store 
								element: List 
									elts: list 
										element: Name 
											id: str = m
											ctx: Store 
										element: Name 
											id: str = n
											ctx: Store 
									ctx: Store 
								element: Tuple 
									elts: list 
										element: Name 
											id: str = o
											ctx: Store 
										element: Name 
											id: str = p
											ctx: Store 
									ctx: Store 
							ctx: Store 
					value: Call 
						func: Call 
							func: Name 
								id: str = g
								ctx: Load 
							args: list 
							keywords: list 
						args: list 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Name 
								id: str = k
								ctx: Load 
							element: Name 
								id: str = l
								ctx: Load 
							element: Name 
								id: str = m
								ctx: Load 
							element: Name 
								id: str = n
								ctx: Load 
							element: Name 
								id: str = o
								ctx: Load 
							element: Name 
								id: str = p
								ctx: Load 
						keywords: list 
			decorator_list: list 
			returns: NoneType = None