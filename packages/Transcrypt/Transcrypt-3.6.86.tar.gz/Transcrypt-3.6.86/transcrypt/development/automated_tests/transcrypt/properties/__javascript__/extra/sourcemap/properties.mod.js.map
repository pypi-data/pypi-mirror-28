{
	"version": 3,
	"file": "D:/activ_tosh/geatec/transcrypt/qquick/Transcrypt/transcrypt/development/automated_tests/transcrypt/properties/__javascript__/properties.mod.js",
	"sources": [
		"D:/activ_tosh/geatec/transcrypt/qquick/Transcrypt/transcrypt/development/automated_tests/transcrypt/properties/__init__.py"
	],
	"sourcesContent": [
		"class A:\n    p = 1234\n    def getX (self):\n        return self._x\n\n    def setX (self, value):\n        self._x = value\n            \n    def getY (self):\n        return self._y\n\n    def setY (self, value):\n        self._y = 1000 + value  # Weird but should be possible\n        \n    def getY2 (self):\n        return self._y\n\n    def setY2 (self, value):\n        self._y = value\n        \n    def getT    (self):\n        return self._t\n\n    def setT (self, value):\n        self._t = value\n        \n    def getU (self):\n        return self._u + 10000\n\n    def setU (self, value):\n        self._u = value - 5000\n            \n    x, y, y2 = property (getX, setX), property (getY, setY), property (getY2, setY2)\n    t = property (getT, setT)\n    u = property (getU, setU)\n    \nA.q = 5678\n\nclass B:\n    def getZ (self):\n        return self.z_\n    \n    def setZ (self, value):\n        self.z_ = value\n        \n    z = property (getZ, setZ)\n    \nclass C:\n    def __init__ (self):\n        self.offset = 1234\n\n    def getW (self):\n        return self.w_ + self.offset\n        \n    def setW (self, value):\n        self.w_ = value - self.offset\n        \n    w = property (getW, setW)\n    \ndef run (autoTester):\n    a1 = A ()\n    a2 = A ()\n\n    a1.y2 = 1000\n    a2.y2 = 2000\n    \n    a1.x = 5\n    a1.y = 6\n    \n    a2.x = 7\n    a2.y = 8\n\n    a1.t = 77\n    a1.u = 88\n        \n    autoTester.check (a1.x, a1.y, a1.y2)\n    autoTester.check (a2.x, a2.y, a2.y2)\n    autoTester.check (a1.p, a2.p, a1.q, a2.q)\n    \n    autoTester.check (a1.t, a1.u)\n    \n    b = B ()\n    c = C ()\n    \n    b.z = 100100\n    c.z = 200200\n    c.w = 300300\n    \n    autoTester.check (a1.x, b.z, c.z, c.w)\n    \n    c.w = 400400\n    c.z = 500500\n    b.z = 600600\n    \n    autoTester.check (a1.x, b.z, c.z, c.w)\n"
	],
	"mappings
}