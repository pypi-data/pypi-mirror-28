file: Module 
	body: list 
		element: ImportFrom 
			module: str = org.transcrypt.stubs.browser
			names: list 
				element: alias 
					name: str = __pragma__
					asname: NoneType = None
			level: int = 0
		element: FunctionDef 
			name: str = run
			args: arguments 
				args: list 
					element: arg 
						arg: str = autoTester
						annotation: NoneType = None
				vararg: NoneType = None
				kwonlyargs: list 
				kw_defaults: list 
				kwarg: NoneType = None
				defaults: list 
			body: list 
				element: ClassDef 
					name: str = CodedStore
					bases: list 
					keywords: list 
					body: list 
						element: FunctionDef 
							name: str = __init__
							args: arguments 
								args: list 
									element: arg 
										arg: str = self
										annotation: NoneType = None
								vararg: NoneType = None
								kwonlyargs: list 
								kw_defaults: list 
								kwarg: NoneType = None
								defaults: list 
							body: list 
								element: Try 
									body: list 
										element: Expr 
											value: Call 
												func: Name 
													id: str = __pragma__
													ctx: Load 
												args: list 
													element: Str 
														s: str = js
													element: Str 
														s: str = {}
													element: Str 
														s: str = self ["__dict__"] = {}
												keywords: list 
									handlers: list 
										element: ExceptHandler 
											type: NoneType = None
											name: NoneType = None
											body: list 
												element: Pass 
									orelse: list 
									finalbody: list 
							decorator_list: list 
							returns: NoneType = None
						element: FunctionDef 
							name: str = __setattr__
							args: arguments 
								args: list 
									element: arg 
										arg: str = self
										annotation: NoneType = None
									element: arg 
										arg: str = name
										annotation: NoneType = None
									element: arg 
										arg: str = message
										annotation: NoneType = None
								vararg: NoneType = None
								kwonlyargs: list 
								kw_defaults: list 
								kwarg: NoneType = None
								defaults: list 
							body: list 
								element: Assign 
									targets: list 
										element: Subscript 
											value: Attribute 
												value: Name 
													id: str = self
													ctx: Load 
												attr: str = __dict__
												ctx: Load 
											slice: Index 
												value: BinOp 
													left: Str 
														s: str = _
													op: Add 
													right: Name 
														id: str = name
														ctx: Load 
											ctx: Store 
									value: BinOp 
										left: Str 
											s: str = coded_
										op: Add 
										right: Name 
											id: str = message
											ctx: Load 
							decorator_list: list 
							returns: NoneType = None
						element: FunctionDef 
							name: str = __getattr__
							args: arguments 
								args: list 
									element: arg 
										arg: str = self
										annotation: NoneType = None
									element: arg 
										arg: str = name
										annotation: NoneType = None
								vararg: NoneType = None
								kwonlyargs: list 
								kw_defaults: list 
								kwarg: NoneType = None
								defaults: list 
							body: list 
								element: Return 
									value: BinOp 
										left: Str 
											s: str = decoded_
										op: Add 
										right: Subscript 
											value: Attribute 
												value: Name 
													id: str = self
													ctx: Load 
												attr: str = __dict__
												ctx: Load 
											slice: Index 
												value: BinOp 
													left: Str 
														s: str = _
													op: Add 
													right: Name 
														id: str = name
														ctx: Load 
											ctx: Load 
							decorator_list: list 
							returns: NoneType = None
						element: FunctionDef 
							name: str = peek
							args: arguments 
								args: list 
									element: arg 
										arg: str = self
										annotation: NoneType = None
									element: arg 
										arg: str = name
										annotation: NoneType = None
								vararg: NoneType = None
								kwonlyargs: list 
								kw_defaults: list 
								kwarg: NoneType = None
								defaults: list 
							body: list 
								element: Return 
									value: Subscript 
										value: Attribute 
											value: Name 
												id: str = self
												ctx: Load 
											attr: str = __dict__
											ctx: Load 
										slice: Index 
											value: BinOp 
												left: Str 
													s: str = _
												op: Add 
												right: Name 
													id: str = name
													ctx: Load 
										ctx: Load 
							decorator_list: list 
							returns: NoneType = None
					decorator_list: list 
				element: Assign 
					targets: list 
						element: Name 
							id: str = s
							ctx: Store 
					value: Call 
						func: Name 
							id: str = CodedStore
							ctx: Load 
						args: list 
						keywords: list 
				element: Assign 
					targets: list 
						element: Attribute 
							value: Name 
								id: str = s
								ctx: Load 
							attr: str = john
							ctx: Store 
					value: Str 
						s: str = brown
				element: Assign 
					targets: list 
						element: Attribute 
							value: Name 
								id: str = s
								ctx: Load 
							attr: str = mary
							ctx: Store 
					value: Str 
						s: str = white
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Call 
								func: Attribute 
									value: Name 
										id: str = s
										ctx: Load 
									attr: str = peek
									ctx: Load 
								args: list 
									element: Str 
										s: str = john
								keywords: list 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Call 
								func: Attribute 
									value: Name 
										id: str = s
										ctx: Load 
									attr: str = peek
									ctx: Load 
								args: list 
									element: Str 
										s: str = mary
								keywords: list 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Attribute 
								value: Name 
									id: str = s
									ctx: Load 
								attr: str = john
								ctx: Load 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Attribute 
								value: Name 
									id: str = s
									ctx: Load 
								attr: str = mary
								ctx: Load 
						keywords: list 
				element: Expr 
					value: Str 
						s: str = 
    The code above produces the following output:
        'coded_brown'
        'coded_white'
        'decoded_coded_brown'
        'decoded_coded_white'
    
				element: ClassDef 
					name: str = A
					bases: list 
					keywords: list 
					body: list 
						element: FunctionDef 
							name: str = __init__
							args: arguments 
								args: list 
									element: arg 
										arg: str = self
										annotation: NoneType = None
								vararg: NoneType = None
								kwonlyargs: list 
								kw_defaults: list 
								kwarg: NoneType = None
								defaults: list 
							body: list 
								element: Assign 
									targets: list 
										element: Attribute 
											value: Name 
												id: str = self
												ctx: Load 
											attr: str = p
											ctx: Store 
									value: Num 
										n: int = 1
								element: Assign 
									targets: list 
										element: Attribute 
											value: Name 
												id: str = self
												ctx: Load 
											attr: str = q
											ctx: Store 
									value: Num 
										n: int = 2
							decorator_list: list 
							returns: NoneType = None
					decorator_list: list 
				element: ClassDef 
					name: str = B
					bases: list 
						element: Name 
							id: str = A
							ctx: Load 
					keywords: list 
					body: list 
						element: FunctionDef 
							name: str = __getattr__
							args: arguments 
								args: list 
									element: arg 
										arg: str = self
										annotation: NoneType = None
									element: arg 
										arg: str = name
										annotation: NoneType = None
								vararg: NoneType = None
								kwonlyargs: list 
								kw_defaults: list 
								kwarg: NoneType = None
								defaults: list 
							body: list 
								element: Return 
									value: Call 
										func: Attribute 
											value: Str 
												s: str = Faked {}
											attr: str = format
											ctx: Load 
										args: list 
											element: Name 
												id: str = name
												ctx: Load 
										keywords: list 
							decorator_list: list 
							returns: NoneType = None
					decorator_list: list 
				element: ClassDef 
					name: str = C
					bases: list 
						element: Name 
							id: str = A
							ctx: Load 
					keywords: list 
					body: list 
						element: FunctionDef 
							name: str = __setattr__
							args: arguments 
								args: list 
									element: arg 
										arg: str = self
										annotation: NoneType = None
									element: arg 
										arg: str = name
										annotation: NoneType = None
									element: arg 
										arg: str = value
										annotation: NoneType = None
								vararg: NoneType = None
								kwonlyargs: list 
								kw_defaults: list 
								kwarg: NoneType = None
								defaults: list 
							body: list 
								element: Expr 
									value: Call 
										func: Attribute 
											value: Name 
												id: str = autoTester
												ctx: Load 
											attr: str = check
											ctx: Load 
										args: list 
											element: Call 
												func: Attribute 
													value: Str 
														s: str = Set faked {}
													attr: str = format
													ctx: Load 
												args: list 
													element: Name 
														id: str = name
														ctx: Load 
												keywords: list 
										keywords: list 
								element: Expr 
									value: Call 
										func: Attribute 
											value: Name 
												id: str = A
												ctx: Load 
											attr: str = __setattr__
											ctx: Load 
										args: list 
											element: Name 
												id: str = self
												ctx: Load 
											element: Name 
												id: str = name
												ctx: Load 
											element: Name 
												id: str = value
												ctx: Load 
										keywords: list 
							decorator_list: list 
							returns: NoneType = None
					decorator_list: list 
				element: ClassDef 
					name: str = D
					bases: list 
						element: Name 
							id: str = B
							ctx: Load 
						element: Name 
							id: str = C
							ctx: Load 
					keywords: list 
					body: list 
						element: Pass 
					decorator_list: list 
				element: Assign 
					targets: list 
						element: Name 
							id: str = a
							ctx: Store 
					value: Call 
						func: Name 
							id: str = A
							ctx: Load 
						args: list 
						keywords: list 
				element: Assign 
					targets: list 
						element: Name 
							id: str = b
							ctx: Store 
					value: Call 
						func: Name 
							id: str = B
							ctx: Load 
						args: list 
						keywords: list 
				element: Assign 
					targets: list 
						element: Name 
							id: str = c
							ctx: Store 
					value: Call 
						func: Name 
							id: str = C
							ctx: Load 
						args: list 
						keywords: list 
				element: Assign 
					targets: list 
						element: Name 
							id: str = d
							ctx: Store 
					value: Call 
						func: Name 
							id: str = D
							ctx: Load 
						args: list 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Attribute 
								value: Name 
									id: str = a
									ctx: Load 
								attr: str = p
								ctx: Load 
							element: Attribute 
								value: Name 
									id: str = a
									ctx: Load 
								attr: str = q
								ctx: Load 
						keywords: list 
				element: Assign 
					targets: list 
						element: Attribute 
							value: Name 
								id: str = a
								ctx: Load 
							attr: str = p
							ctx: Store 
					value: Num 
						n: int = 3
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Attribute 
								value: Name 
									id: str = a
									ctx: Load 
								attr: str = p
								ctx: Load 
							element: Attribute 
								value: Name 
									id: str = a
									ctx: Load 
								attr: str = q
								ctx: Load 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Attribute 
								value: Name 
									id: str = b
									ctx: Load 
								attr: str = p
								ctx: Load 
							element: Attribute 
								value: Name 
									id: str = b
									ctx: Load 
								attr: str = q
								ctx: Load 
							element: Attribute 
								value: Name 
									id: str = b
									ctx: Load 
								attr: str = r
								ctx: Load 
							element: Attribute 
								value: Name 
									id: str = b
									ctx: Load 
								attr: str = s
								ctx: Load 
						keywords: list 
				element: Assign 
					targets: list 
						element: Attribute 
							value: Name 
								id: str = b
								ctx: Load 
							attr: str = p
							ctx: Store 
					value: Num 
						n: int = 4
				element: Assign 
					targets: list 
						element: Attribute 
							value: Name 
								id: str = b
								ctx: Load 
							attr: str = r
							ctx: Store 
					value: Num 
						n: int = 5
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Attribute 
								value: Name 
									id: str = b
									ctx: Load 
								attr: str = p
								ctx: Load 
							element: Attribute 
								value: Name 
									id: str = b
									ctx: Load 
								attr: str = q
								ctx: Load 
							element: Attribute 
								value: Name 
									id: str = b
									ctx: Load 
								attr: str = r
								ctx: Load 
							element: Attribute 
								value: Name 
									id: str = b
									ctx: Load 
								attr: str = s
								ctx: Load 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Attribute 
								value: Name 
									id: str = c
									ctx: Load 
								attr: str = p
								ctx: Load 
							element: Attribute 
								value: Name 
									id: str = c
									ctx: Load 
								attr: str = q
								ctx: Load 
						keywords: list 
				element: Assign 
					targets: list 
						element: Attribute 
							value: Name 
								id: str = c
								ctx: Load 
							attr: str = p
							ctx: Store 
					value: Num 
						n: int = 6
				element: Assign 
					targets: list 
						element: Attribute 
							value: Name 
								id: str = c
								ctx: Load 
							attr: str = q
							ctx: Store 
					value: Num 
						n: int = 7
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Attribute 
								value: Name 
									id: str = c
									ctx: Load 
								attr: str = p
								ctx: Load 
							element: Attribute 
								value: Name 
									id: str = c
									ctx: Load 
								attr: str = q
								ctx: Load 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Attribute 
								value: Name 
									id: str = d
									ctx: Load 
								attr: str = p
								ctx: Load 
							element: Attribute 
								value: Name 
									id: str = d
									ctx: Load 
								attr: str = q
								ctx: Load 
							element: Attribute 
								value: Name 
									id: str = d
									ctx: Load 
								attr: str = r
								ctx: Load 
							element: Attribute 
								value: Name 
									id: str = d
									ctx: Load 
								attr: str = s
								ctx: Load 
						keywords: list 
				element: Assign 
					targets: list 
						element: Attribute 
							value: Name 
								id: str = d
								ctx: Load 
							attr: str = p
							ctx: Store 
					value: Num 
						n: int = 8
				element: Assign 
					targets: list 
						element: Attribute 
							value: Name 
								id: str = d
								ctx: Load 
							attr: str = q
							ctx: Store 
					value: Num 
						n: int = 9
				element: Assign 
					targets: list 
						element: Attribute 
							value: Name 
								id: str = d
								ctx: Load 
							attr: str = r
							ctx: Store 
					value: Num 
						n: int = 10
				element: Assign 
					targets: list 
						element: Attribute 
							value: Name 
								id: str = d
								ctx: Load 
							attr: str = s
							ctx: Store 
					value: Num 
						n: int = 11
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Attribute 
								value: Name 
									id: str = d
									ctx: Load 
								attr: str = p
								ctx: Load 
							element: Attribute 
								value: Name 
									id: str = d
									ctx: Load 
								attr: str = q
								ctx: Load 
							element: Attribute 
								value: Name 
									id: str = d
									ctx: Load 
								attr: str = r
								ctx: Load 
							element: Attribute 
								value: Name 
									id: str = d
									ctx: Load 
								attr: str = s
								ctx: Load 
						keywords: list 
			decorator_list: list 
			returns: NoneType = None