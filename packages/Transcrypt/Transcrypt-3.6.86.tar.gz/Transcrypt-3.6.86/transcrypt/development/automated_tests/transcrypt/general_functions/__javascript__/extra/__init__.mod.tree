file: Module 
	body: list 
		element: ImportFrom 
			module: str = org.transcrypt.stubs.browser
			names: list 
				element: alias 
					name: str = __pragma__
					asname: NoneType = None
			level: int = 0
		element: ClassDef 
			name: str = A
			bases: list 
			keywords: list 
			body: list 
				element: Assign 
					targets: list 
						element: Name 
							id: str = foo
							ctx: Store 
					value: Str 
						s: str = bar
				element: FunctionDef 
					name: str = __init__
					args: arguments 
						args: list 
							element: arg 
								arg: str = self
								annotation: NoneType = None
						vararg: NoneType = None
						kwonlyargs: list 
						kw_defaults: list 
						kwarg: NoneType = None
						defaults: list 
					body: list 
						element: Assign 
							targets: list 
								element: Attribute 
									value: Name 
										id: str = self
										ctx: Load 
									attr: str = foo2
									ctx: Store 
							value: Str 
								s: str = bar2
					decorator_list: list 
					returns: NoneType = None
			decorator_list: list 
		element: ClassDef 
			name: str = B
			bases: list 
				element: Name 
					id: str = A
					ctx: Load 
			keywords: list 
			body: list 
				element: Assign 
					targets: list 
						element: Name 
							id: str = foo3
							ctx: Store 
					value: Str 
						s: str = bar3
				element: FunctionDef 
					name: str = __init__
					args: arguments 
						args: list 
							element: arg 
								arg: str = self
								annotation: NoneType = None
						vararg: NoneType = None
						kwonlyargs: list 
						kw_defaults: list 
						kwarg: NoneType = None
						defaults: list 
					body: list 
						element: Assign 
							targets: list 
								element: Attribute 
									value: Name 
										id: str = self
										ctx: Load 
									attr: str = foo4
									ctx: Store 
							value: Str 
								s: str = bar4
					decorator_list: list 
					returns: NoneType = None
			decorator_list: list 
		element: ClassDef 
			name: str = C
			bases: list 
			keywords: list 
			body: list 
				element: FunctionDef 
					name: str = __len__
					args: arguments 
						args: list 
							element: arg 
								arg: str = self
								annotation: NoneType = None
						vararg: NoneType = None
						kwonlyargs: list 
						kw_defaults: list 
						kwarg: NoneType = None
						defaults: list 
					body: list 
						element: Return 
							value: Num 
								n: int = 42
					decorator_list: list 
					returns: NoneType = None
			decorator_list: list 
		element: FunctionDef 
			name: str = run
			args: arguments 
				args: list 
					element: arg 
						arg: str = autoTester
						annotation: NoneType = None
				vararg: NoneType = None
				kwonlyargs: list 
				kw_defaults: list 
				kwarg: NoneType = None
				defaults: list 
			body: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Str 
								s: str = len
						keywords: list 
				element: Assign 
					targets: list 
						element: Name 
							id: str = strings
							ctx: Store 
					value: List 
						elts: list 
							element: Str 
								s: str = hello
							element: Str 
								s: str = ,
							element: Str 
								s: str = world
							element: Str 
								s: str = !
						ctx: Load 
				element: Assign 
					targets: list 
						element: Name 
							id: str = instances
							ctx: Store 
					value: List 
						elts: list 
							element: Call 
								func: Name 
									id: str = C
									ctx: Load 
								args: list 
								keywords: list 
						ctx: Load 
				element: Assign 
					targets: list 
						element: Name 
							id: str = collections
							ctx: Store 
					value: List 
						elts: list 
							element: List 
								elts: list 
								ctx: Load 
							element: List 
								elts: list 
									element: Num 
										n: int = 1
								ctx: Load 
							element: List 
								elts: list 
									element: Num 
										n: int = 1
									element: Num 
										n: int = 2
								ctx: Load 
							element: Call 
								func: Name 
									id: str = tuple
									ctx: Load 
								args: list 
								keywords: list 
							element: Tuple 
								elts: list 
									element: Num 
										n: int = 1
								ctx: Load 
							element: Tuple 
								elts: list 
									element: Num 
										n: int = 1
									element: Num 
										n: int = 2
								ctx: Load 
							element: Dict 
								keys: list 
								values: list 
							element: Dict 
								keys: list 
									element: Num 
										n: int = 1
								values: list 
									element: Num 
										n: int = 1
							element: Dict 
								keys: list 
									element: Num 
										n: int = 1
									element: Num 
										n: int = 2
								values: list 
									element: Num 
										n: int = 1
									element: Num 
										n: int = 2
						ctx: Load 
				element: For 
					target: Name 
						id: str = string
						ctx: Store 
					iter: Name 
						id: str = strings
						ctx: Load 
					body: list 
						element: Expr 
							value: Call 
								func: Attribute 
									value: Name 
										id: str = autoTester
										ctx: Load 
									attr: str = check
									ctx: Load 
								args: list 
									element: Call 
										func: Name 
											id: str = len
											ctx: Load 
										args: list 
											element: Name 
												id: str = string
												ctx: Load 
										keywords: list 
								keywords: list 
					orelse: list 
				element: For 
					target: Name 
						id: str = instance
						ctx: Store 
					iter: Name 
						id: str = instances
						ctx: Load 
					body: list 
						element: Expr 
							value: Call 
								func: Attribute 
									value: Name 
										id: str = autoTester
										ctx: Load 
									attr: str = check
									ctx: Load 
								args: list 
									element: Call 
										func: Name 
											id: str = len
											ctx: Load 
										args: list 
											element: Name 
												id: str = instance
												ctx: Load 
										keywords: list 
								keywords: list 
					orelse: list 
				element: For 
					target: Name 
						id: str = collection
						ctx: Store 
					iter: Name 
						id: str = collections
						ctx: Load 
					body: list 
						element: Expr 
							value: Call 
								func: Attribute 
									value: Name 
										id: str = autoTester
										ctx: Load 
									attr: str = check
									ctx: Load 
								args: list 
									element: Call 
										func: Name 
											id: str = len
											ctx: Load 
										args: list 
											element: Name 
												id: str = collection
												ctx: Load 
										keywords: list 
								keywords: list 
					orelse: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Str 
								s: str = sort and sorted<br>
						keywords: list 
				element: Assign 
					targets: list 
						element: Name 
							id: str = a
							ctx: Store 
					value: List 
						elts: list 
							element: Num 
								n: int = 1
							element: Num 
								n: int = 5
							element: Num 
								n: int = 3
							element: Num 
								n: int = 2
							element: UnaryOp 
								op: USub 
								operand: Num 
									n: int = 1
						ctx: Load 
				element: Assign 
					targets: list 
						element: Name 
							id: str = b
							ctx: Store 
					value: List 
						elts: list 
							element: Str 
								s: str = sun
							element: Str 
								s: str = earth
							element: Str 
								s: str = moon
						ctx: Load 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Call 
								func: Name 
									id: str = sorted
									ctx: Load 
								args: list 
									element: Name 
										id: str = a
										ctx: Load 
								keywords: list 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Call 
								func: Name 
									id: str = sorted
									ctx: Load 
								args: list 
									element: Name 
										id: str = b
										ctx: Load 
								keywords: list 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = a
								ctx: Load 
							attr: str = sort
							ctx: Load 
						args: list 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Name 
								id: str = a
								ctx: Load 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = b
								ctx: Load 
							attr: str = sort
							ctx: Load 
						args: list 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Name 
								id: str = b
								ctx: Load 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Call 
								func: Name 
									id: str = sorted
									ctx: Load 
								args: list 
									element: Name 
										id: str = a
										ctx: Load 
								keywords: list 
									element: keyword 
										arg: str = reverse
										value: NameConstant 
											value: bool = True
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Call 
								func: Name 
									id: str = sorted
									ctx: Load 
								args: list 
									element: Name 
										id: str = b
										ctx: Load 
								keywords: list 
									element: keyword 
										arg: str = reverse
										value: NameConstant 
											value: bool = True
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = a
								ctx: Load 
							attr: str = sort
							ctx: Load 
						args: list 
						keywords: list 
							element: keyword 
								arg: str = reverse
								value: NameConstant 
									value: bool = True
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Name 
								id: str = a
								ctx: Load 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = b
								ctx: Load 
							attr: str = sort
							ctx: Load 
						args: list 
						keywords: list 
							element: keyword 
								arg: str = reverse
								value: NameConstant 
									value: bool = True
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Name 
								id: str = b
								ctx: Load 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = b
								ctx: Load 
							attr: str = sort
							ctx: Load 
						args: list 
						keywords: list 
							element: keyword 
								arg: str = key
								value: Lambda 
									args: arguments 
										args: list 
											element: arg 
												arg: str = x
												annotation: NoneType = None
										vararg: NoneType = None
										kwonlyargs: list 
										kw_defaults: list 
										kwarg: NoneType = None
										defaults: list 
									body: Call 
										func: Name 
											id: str = len
											ctx: Load 
										args: list 
											element: Name 
												id: str = x
												ctx: Load 
										keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Name 
								id: str = b
								ctx: Load 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = b
								ctx: Load 
							attr: str = sort
							ctx: Load 
						args: list 
						keywords: list 
							element: keyword 
								arg: str = key
								value: Lambda 
									args: arguments 
										args: list 
											element: arg 
												arg: str = x
												annotation: NoneType = None
										vararg: NoneType = None
										kwonlyargs: list 
										kw_defaults: list 
										kwarg: NoneType = None
										defaults: list 
									body: Call 
										func: Name 
											id: str = len
											ctx: Load 
										args: list 
											element: Name 
												id: str = x
												ctx: Load 
										keywords: list 
							element: keyword 
								arg: str = reverse
								value: NameConstant 
									value: bool = True
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Name 
								id: str = b
								ctx: Load 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Str 
								s: str = <br><br>dir<br>
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: ListComp 
								elt: Name 
									id: str = entry
									ctx: Load 
								generators: list 
									element: comprehension 
										target: Name 
											id: str = entry
											ctx: Store 
										iter: Call 
											func: Name 
												id: str = dir
												ctx: Load 
											args: list 
												element: Name 
													id: str = A
													ctx: Load 
											keywords: list 
										ifs: list 
											element: UnaryOp 
												op: Not 
												operand: Call 
													func: Attribute 
														value: Name 
															id: str = entry
															ctx: Load 
														attr: str = startswith
														ctx: Load 
													args: list 
														element: Str 
															s: str = __
													keywords: list 
										is_async: int = 0
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: ListComp 
								elt: Name 
									id: str = entry
									ctx: Load 
								generators: list 
									element: comprehension 
										target: Name 
											id: str = entry
											ctx: Store 
										iter: Call 
											func: Name 
												id: str = dir
												ctx: Load 
											args: list 
												element: Call 
													func: Name 
														id: str = A
														ctx: Load 
													args: list 
													keywords: list 
											keywords: list 
										ifs: list 
											element: UnaryOp 
												op: Not 
												operand: Call 
													func: Attribute 
														value: Name 
															id: str = entry
															ctx: Load 
														attr: str = startswith
														ctx: Load 
													args: list 
														element: Str 
															s: str = __
													keywords: list 
										is_async: int = 0
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: ListComp 
								elt: Name 
									id: str = entry
									ctx: Load 
								generators: list 
									element: comprehension 
										target: Name 
											id: str = entry
											ctx: Store 
										iter: Call 
											func: Name 
												id: str = dir
												ctx: Load 
											args: list 
												element: Name 
													id: str = B
													ctx: Load 
											keywords: list 
										ifs: list 
											element: UnaryOp 
												op: Not 
												operand: Call 
													func: Attribute 
														value: Name 
															id: str = entry
															ctx: Load 
														attr: str = startswith
														ctx: Load 
													args: list 
														element: Str 
															s: str = __
													keywords: list 
										is_async: int = 0
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: ListComp 
								elt: Name 
									id: str = entry
									ctx: Load 
								generators: list 
									element: comprehension 
										target: Name 
											id: str = entry
											ctx: Store 
										iter: Call 
											func: Name 
												id: str = dir
												ctx: Load 
											args: list 
												element: Call 
													func: Name 
														id: str = B
														ctx: Load 
													args: list 
													keywords: list 
											keywords: list 
										ifs: list 
											element: UnaryOp 
												op: Not 
												operand: Call 
													func: Attribute 
														value: Name 
															id: str = entry
															ctx: Load 
														attr: str = startswith
														ctx: Load 
													args: list 
														element: Str 
															s: str = __
													keywords: list 
										is_async: int = 0
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Str 
								s: str = <br><br>any, all, sum<br>
						keywords: list 
				element: Assign 
					targets: list 
						element: Name 
							id: str = list1
							ctx: Store 
					value: List 
						elts: list 
							element: Str 
								s: str = ape
							element: Str 
								s: str = node
							element: Str 
								s: str = mice
						ctx: Load 
				element: Assign 
					targets: list 
						element: Name 
							id: str = list2
							ctx: Store 
					value: List 
						elts: list 
							element: Str 
								s: str = vim
							element: Str 
								s: str = 
							element: Str 
								s: str = jet
						ctx: Load 
				element: Assign 
					targets: list 
						element: Name 
							id: str = list3
							ctx: Store 
					value: List 
						elts: list 
							element: Str 
								s: str = 
							element: Str 
								s: str = 
							element: Str 
								s: str = 
						ctx: Load 
				element: Assign 
					targets: list 
						element: Name 
							id: str = list4
							ctx: Store 
					value: List 
						elts: list 
							element: List 
								elts: list 
									element: Num 
										n: int = 1
									element: Num 
										n: int = 2
								ctx: Load 
							element: List 
								elts: list 
									element: Num 
										n: int = 1
								ctx: Load 
							element: List 
								elts: list 
								ctx: Load 
						ctx: Load 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Name 
								id: str = list1
								ctx: Load 
							element: Call 
								func: Name 
									id: str = any
									ctx: Load 
								args: list 
									element: Name 
										id: str = list1
										ctx: Load 
								keywords: list 
							element: Call 
								func: Name 
									id: str = all
									ctx: Load 
								args: list 
									element: Name 
										id: str = list1
										ctx: Load 
								keywords: list 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Name 
								id: str = list2
								ctx: Load 
							element: Call 
								func: Name 
									id: str = any
									ctx: Load 
								args: list 
									element: Name 
										id: str = list2
										ctx: Load 
								keywords: list 
							element: Call 
								func: Name 
									id: str = all
									ctx: Load 
								args: list 
									element: Name 
										id: str = list2
										ctx: Load 
								keywords: list 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Name 
								id: str = list3
								ctx: Load 
							element: Call 
								func: Name 
									id: str = any
									ctx: Load 
								args: list 
									element: Name 
										id: str = list3
										ctx: Load 
								keywords: list 
							element: Call 
								func: Name 
									id: str = all
									ctx: Load 
								args: list 
									element: Name 
										id: str = list3
										ctx: Load 
								keywords: list 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Name 
								id: str = list4
								ctx: Load 
							element: Call 
								func: Name 
									id: str = any
									ctx: Load 
								args: list 
									element: Name 
										id: str = list4
										ctx: Load 
								keywords: list 
							element: Call 
								func: Name 
									id: str = all
									ctx: Load 
								args: list 
									element: Name 
										id: str = list4
										ctx: Load 
								keywords: list 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Call 
								func: Name 
									id: str = sum
									ctx: Load 
								args: list 
									element: Call 
										func: Name 
											id: str = range
											ctx: Load 
										args: list 
											element: Num 
												n: int = 5
										keywords: list 
								keywords: list 
						keywords: list 
				element: Expr 
					value: Call 
						func: Name 
							id: str = __pragma__
							ctx: Load 
						args: list 
							element: Str 
								s: str = ifdef
							element: Str 
								s: str = __esv6__
						keywords: list 
				element: If 
					test: Compare 
						left: Str 
							s: str = __esv6__
						ops: list 
							element: In 
						comparators: list 
							element: Attribute 
								value: Name 
									id: str = autoTester
									ctx: Load 
								attr: str = symbols
								ctx: Load 
					body: list 
						element: FunctionDef 
							name: str = generator1
							args: arguments 
								args: list 
								vararg: NoneType = None
								kwonlyargs: list 
								kw_defaults: list 
								kwarg: NoneType = None
								defaults: list 
							body: list 
								element: For 
									target: Name 
										id: str = i
										ctx: Store 
									iter: Call 
										func: Name 
											id: str = range
											ctx: Load 
										args: list 
											element: Num 
												n: int = 5
										keywords: list 
									body: list 
										element: Expr 
											value: Yield 
												value: Name 
													id: str = i
													ctx: Load 
									orelse: list 
							decorator_list: list 
							returns: NoneType = None
						element: FunctionDef 
							name: str = generator2
							args: arguments 
								args: list 
								vararg: NoneType = None
								kwonlyargs: list 
								kw_defaults: list 
								kwarg: NoneType = None
								defaults: list 
							body: list 
								element: For 
									target: Name 
										id: str = i
										ctx: Store 
									iter: Call 
										func: Name 
											id: str = range
											ctx: Load 
										args: list 
											element: Num 
												n: int = 5
										keywords: list 
									body: list 
										element: If 
											test: BinOp 
												left: Name 
													id: str = i
													ctx: Load 
												op: Mod 
												right: Num 
													n: int = 2
											body: list 
												element: Expr 
													value: Yield 
														value: Num 
															n: int = 0
											orelse: list 
												element: Expr 
													value: Yield 
														value: Name 
															id: str = i
															ctx: Load 
									orelse: list 
							decorator_list: list 
							returns: NoneType = None
						element: FunctionDef 
							name: str = generator3
							args: arguments 
								args: list 
								vararg: NoneType = None
								kwonlyargs: list 
								kw_defaults: list 
								kwarg: NoneType = None
								defaults: list 
							body: list 
								element: For 
									target: Name 
										id: str = i
										ctx: Store 
									iter: Call 
										func: Name 
											id: str = range
											ctx: Load 
										args: list 
											element: Num 
												n: int = 5
										keywords: list 
									body: list 
										element: Expr 
											value: Yield 
												value: Num 
													n: int = 0
									orelse: list 
							decorator_list: list 
							returns: NoneType = None
						element: Expr 
							value: Call 
								func: Attribute 
									value: Name 
										id: str = autoTester
										ctx: Load 
									attr: str = check
									ctx: Load 
								args: list 
									element: Call 
										func: Name 
											id: str = generator1
											ctx: Load 
										args: list 
										keywords: list 
									element: Call 
										func: Name 
											id: str = any
											ctx: Load 
										args: list 
											element: Call 
												func: Name 
													id: str = generator1
													ctx: Load 
												args: list 
												keywords: list 
										keywords: list 
									element: Call 
										func: Name 
											id: str = all
											ctx: Load 
										args: list 
											element: Call 
												func: Name 
													id: str = generator1
													ctx: Load 
												args: list 
												keywords: list 
										keywords: list 
								keywords: list 
						element: Expr 
							value: Call 
								func: Attribute 
									value: Name 
										id: str = autoTester
										ctx: Load 
									attr: str = check
									ctx: Load 
								args: list 
									element: Call 
										func: Name 
											id: str = generator2
											ctx: Load 
										args: list 
										keywords: list 
									element: Call 
										func: Name 
											id: str = any
											ctx: Load 
										args: list 
											element: Call 
												func: Name 
													id: str = generator2
													ctx: Load 
												args: list 
												keywords: list 
										keywords: list 
									element: Call 
										func: Name 
											id: str = all
											ctx: Load 
										args: list 
											element: Call 
												func: Name 
													id: str = generator2
													ctx: Load 
												args: list 
												keywords: list 
										keywords: list 
								keywords: list 
						element: Expr 
							value: Call 
								func: Attribute 
									value: Name 
										id: str = autoTester
										ctx: Load 
									attr: str = check
									ctx: Load 
								args: list 
									element: Call 
										func: Name 
											id: str = generator3
											ctx: Load 
										args: list 
										keywords: list 
									element: Call 
										func: Name 
											id: str = any
											ctx: Load 
										args: list 
											element: Call 
												func: Name 
													id: str = generator3
													ctx: Load 
												args: list 
												keywords: list 
										keywords: list 
									element: Call 
										func: Name 
											id: str = all
											ctx: Load 
										args: list 
											element: Call 
												func: Name 
													id: str = generator3
													ctx: Load 
												args: list 
												keywords: list 
										keywords: list 
								keywords: list 
						element: Expr 
							value: Call 
								func: Attribute 
									value: Name 
										id: str = autoTester
										ctx: Load 
									attr: str = check
									ctx: Load 
								args: list 
									element: Call 
										func: Name 
											id: str = sum
											ctx: Load 
										args: list 
											element: Call 
												func: Name 
													id: str = generator1
													ctx: Load 
												args: list 
												keywords: list 
										keywords: list 
								keywords: list 
					orelse: list 
				element: Expr 
					value: Call 
						func: Name 
							id: str = __pragma__
							ctx: Load 
						args: list 
							element: Str 
								s: str = endif
						keywords: list 
			decorator_list: list 
			returns: NoneType = None