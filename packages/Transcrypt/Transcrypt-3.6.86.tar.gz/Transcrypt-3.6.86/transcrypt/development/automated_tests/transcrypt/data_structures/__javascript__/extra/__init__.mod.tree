file: Module 
	body: list 
		element: FunctionDef 
			name: str = run
			args: arguments 
				args: list 
					element: arg 
						arg: str = autoTester
						annotation: NoneType = None
				vararg: NoneType = None
				kwonlyargs: list 
				kw_defaults: list 
				kwarg: NoneType = None
				defaults: list 
			body: list 
				element: Assign 
					targets: list 
						element: Name 
							id: str = aList
							ctx: Store 
					value: List 
						elts: list 
							element: Num 
								n: int = 1
							element: Num 
								n: int = 2
							element: Num 
								n: int = 3
							element: Str 
								s: str = moon
							element: Str 
								s: str = stars
						ctx: Load 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Name 
								id: str = aList
								ctx: Load 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = aList
								ctx: Load 
							attr: str = insert
							ctx: Load 
						args: list 
							element: Num 
								n: int = 3
							element: Str 
								s: str = sun
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Name 
								id: str = aList
								ctx: Load 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Subscript 
								value: Name 
									id: str = aList
									ctx: Load 
								slice: Slice 
									lower: Num 
										n: int = 2
									upper: Num 
										n: int = 4
									step: Num 
										n: int = 1
								ctx: Load 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Subscript 
								value: Name 
									id: str = aList
									ctx: Load 
								slice: Slice 
									lower: NoneType = None
									upper: NoneType = None
									step: NoneType = None
								ctx: Load 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Subscript 
								value: Name 
									id: str = aList
									ctx: Load 
								slice: Slice 
									lower: Num 
										n: int = 2
									upper: NoneType = None
									step: NoneType = None
								ctx: Load 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Call 
								func: Name 
									id: str = len
									ctx: Load 
								args: list 
									element: Name 
										id: str = aList
										ctx: Load 
								keywords: list 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = aList
								ctx: Load 
							attr: str = append
							ctx: Load 
						args: list 
							element: Str 
								s: str = milkyway
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Name 
								id: str = aList
								ctx: Load 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = aList
								ctx: Load 
							attr: str = extend
							ctx: Load 
						args: list 
							element: List 
								elts: list 
									element: Str 
										s: str = m1
									element: Str 
										s: str = m31
								ctx: Load 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Name 
								id: str = aList
								ctx: Load 
						keywords: list 
				element: Assign 
					targets: list 
						element: Name 
							id: str = anotherList
							ctx: Store 
					value: Call 
						func: Name 
							id: str = list
							ctx: Load 
						args: list 
							element: Tuple 
								elts: list 
									element: Str 
										s: str = a
									element: Str 
										s: str = b
									element: Str 
										s: str = c
								ctx: Load 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Name 
								id: str = anotherList
								ctx: Load 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Compare 
								left: Str 
									s: str = b
								ops: list 
									element: In 
								comparators: list 
									element: Name 
										id: str = anotherList
										ctx: Load 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Compare 
								left: Str 
									s: str = d
								ops: list 
									element: In 
								comparators: list 
									element: Name 
										id: str = anotherList
										ctx: Load 
						keywords: list 
				element: Assign 
					targets: list 
						element: Name 
							id: str = aDict
							ctx: Store 
					value: Dict 
						keys: list 
							element: Num 
								n: int = 1
							element: Str 
								s: str = animal
						values: list 
							element: Str 
								s: str = plant
							element: Num 
								n: int = 2
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Name 
								id: str = aDict
								ctx: Load 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Subscript 
								value: Name 
									id: str = aDict
									ctx: Load 
								slice: Index 
									value: Num 
										n: int = 1
								ctx: Load 
							element: Subscript 
								value: Name 
									id: str = aDict
									ctx: Load 
								slice: Index 
									value: Str 
										s: str = animal
								ctx: Load 
						keywords: list 
				element: FunctionDef 
					name: str = p
					args: arguments 
						args: list 
						vararg: NoneType = None
						kwonlyargs: list 
						kw_defaults: list 
						kwarg: NoneType = None
						defaults: list 
					body: list 
						element: Return 
							value: Num 
								n: int = 3
					decorator_list: list 
					returns: NoneType = None
				element: Assign 
					targets: list 
						element: Name 
							id: str = q
							ctx: Store 
					value: Num 
						n: int = 4
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Dict 
								keys: list 
									element: Call 
										func: Name 
											id: str = p
											ctx: Load 
										args: list 
										keywords: list 
									element: Name 
										id: str = q
										ctx: Load 
								values: list 
									element: Str 
										s: str = three
									element: Str 
										s: str = four
						keywords: list 
				element: Assign 
					targets: list 
						element: Name 
							id: str = aTuple
							ctx: Store 
					value: Tuple 
						elts: list 
							element: Num 
								n: int = 1
							element: Num 
								n: int = 2
							element: Num 
								n: int = 3
							element: Num 
								n: int = 4
							element: Num 
								n: int = 5
						ctx: Load 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Name 
								id: str = aTuple
								ctx: Load 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Call 
								func: Name 
									id: str = len
									ctx: Load 
								args: list 
									element: Name 
										id: str = aTuple
										ctx: Load 
								keywords: list 
						keywords: list 
				element: Assign 
					targets: list 
						element: Name 
							id: str = anotherTuple
							ctx: Store 
					value: Tuple 
						elts: list 
							element: Num 
								n: int = 1
						ctx: Load 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Name 
								id: str = anotherTuple
								ctx: Load 
						keywords: list 
				element: Assign 
					targets: list 
						element: Name 
							id: str = aSet
							ctx: Store 
					value: Set 
						elts: list 
							element: Num 
								n: int = 1
							element: Num 
								n: int = 2
							element: Num 
								n: int = 2
							element: Num 
								n: int = 3
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Name 
								id: str = aSet
								ctx: Load 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Call 
								func: Name 
									id: str = len
									ctx: Load 
								args: list 
									element: Name 
										id: str = aSet
										ctx: Load 
								keywords: list 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Compare 
								left: Num 
									n: int = 2
								ops: list 
									element: In 
								comparators: list 
									element: Name 
										id: str = aSet
										ctx: Load 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Compare 
								left: Num 
									n: int = 4
								ops: list 
									element: In 
								comparators: list 
									element: Name 
										id: str = aSet
										ctx: Load 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = aSet
								ctx: Load 
							attr: str = clear
							ctx: Load 
						args: list 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Name 
								id: str = aSet
								ctx: Load 
						keywords: list 
				element: Assign 
					targets: list 
						element: Name 
							id: str = anotherSet
							ctx: Store 
					value: Call 
						func: Name 
							id: str = set
							ctx: Load 
						args: list 
							element: Tuple 
								elts: list 
									element: Num 
										n: int = 4
									element: Num 
										n: int = 5
									element: Num 
										n: int = 5
									element: Num 
										n: int = 6
								ctx: Load 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Name 
								id: str = anotherSet
								ctx: Load 
						keywords: list 
				element: Assign 
					targets: list 
						element: Name 
							id: str = emptySet
							ctx: Store 
					value: Call 
						func: Name 
							id: str = set
							ctx: Load 
						args: list 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Name 
								id: str = emptySet
								ctx: Load 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Call 
								func: Name 
									id: str = len
									ctx: Load 
								args: list 
									element: Name 
										id: str = emptySet
										ctx: Load 
								keywords: list 
						keywords: list 
				element: Assign 
					targets: list 
						element: Name 
							id: str = aString
							ctx: Store 
					value: Str 
						s: str = c_cis_d_dis_e_f_fis_g_gis_a_ais_b_c
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Compare 
								left: Str 
									s: str = cis
								ops: list 
									element: In 
								comparators: list 
									element: Name 
										id: str = aString
										ctx: Load 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Compare 
								left: Str 
									s: str = g
								ops: list 
									element: In 
								comparators: list 
									element: Name 
										id: str = aString
										ctx: Load 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Compare 
								left: Str 
									s: str = bes
								ops: list 
									element: In 
								comparators: list 
									element: Name 
										id: str = aString
										ctx: Load 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Compare 
								left: Str 
									s: str = z
								ops: list 
									element: In 
								comparators: list 
									element: Name 
										id: str = aString
										ctx: Load 
						keywords: list 
			decorator_list: list 
			returns: NoneType = None