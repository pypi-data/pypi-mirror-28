file: Module 
	body: list 
		element: ImportFrom 
			module: str = org.transcrypt.stubs.browser
			names: list 
				element: alias 
					name: str = __pragma__
					asname: NoneType = None
			level: int = 0
		element: ClassDef 
			name: str = UppercaserMeta
			bases: list 
				element: Name 
					id: str = type
					ctx: Load 
			keywords: list 
			body: list 
				element: FunctionDef 
					name: str = __new__
					args: arguments 
						args: list 
							element: arg 
								arg: str = meta
								annotation: NoneType = None
							element: arg 
								arg: str = name
								annotation: NoneType = None
							element: arg 
								arg: str = bases
								annotation: NoneType = None
							element: arg 
								arg: str = attribs
								annotation: NoneType = None
						vararg: NoneType = None
						kwonlyargs: list 
						kw_defaults: list 
						kwarg: NoneType = None
						defaults: list 
					body: list 
						element: Expr 
							value: Call 
								func: Name 
									id: str = __pragma__
									ctx: Load 
								args: list 
									element: Str 
										s: str = jsiter
								keywords: list 
						element: Assign 
							targets: list 
								element: Name 
									id: str = upperAttribs
									ctx: Store 
							value: Dict 
								keys: list 
								values: list 
						element: For 
							target: Name 
								id: str = attribKey
								ctx: Store 
							iter: Name 
								id: str = attribs
								ctx: Load 
							body: list 
								element: Assign 
									targets: list 
										element: Subscript 
											value: Name 
												id: str = upperAttribs
												ctx: Load 
											slice: Index 
												value: IfExp 
													test: Call 
														func: Attribute 
															value: Name 
																id: str = attribKey
																ctx: Load 
															attr: str = startswith
															ctx: Load 
														args: list 
															element: Str 
																s: str = __
														keywords: list 
													body: Name 
														id: str = attribKey
														ctx: Load 
													orelse: Call 
														func: Attribute 
															value: Name 
																id: str = attribKey
																ctx: Load 
															attr: str = upper
															ctx: Load 
														args: list 
														keywords: list 
											ctx: Store 
									value: Subscript 
										value: Name 
											id: str = attribs
											ctx: Load 
										slice: Index 
											value: Name 
												id: str = attribKey
												ctx: Load 
										ctx: Load 
							orelse: list 
						element: Expr 
							value: Call 
								func: Name 
									id: str = __pragma__
									ctx: Load 
								args: list 
									element: Str 
										s: str = nojsiter
								keywords: list 
						element: Return 
							value: Call 
								func: Attribute 
									value: Name 
										id: str = type
										ctx: Load 
									attr: str = __new__
									ctx: Load 
								args: list 
									element: Name 
										id: str = meta
										ctx: Load 
									element: Name 
										id: str = name
										ctx: Load 
									element: Name 
										id: str = bases
										ctx: Load 
									element: Name 
										id: str = upperAttribs
										ctx: Load 
								keywords: list 
					decorator_list: list 
					returns: NoneType = None
			decorator_list: list 
		element: ClassDef 
			name: str = Uppercaser
			bases: list 
			keywords: list 
				element: keyword 
					arg: str = metaclass
					value: Name 
						id: str = UppercaserMeta
						ctx: Load 
			body: list 
				element: Pass 
			decorator_list: list 
		element: ClassDef 
			name: str = Animal
			bases: list 
				element: Name 
					id: str = Uppercaser
					ctx: Load 
			keywords: list 
			body: list 
				element: ClassDef 
					name: str = Thoughts
					bases: list 
					keywords: list 
					body: list 
						element: Assign 
							targets: list 
								element: Name 
									id: str = quantity
									ctx: Store 
							value: Num 
								n: int = 7
					decorator_list: list 
				element: Assign 
					targets: list 
						element: Name 
							id: str = color
							ctx: Store 
					value: Str 
						s: str = Brown
				element: Assign 
					targets: list 
						element: Name 
							id: str = state
							ctx: Store 
					value: Str 
						s: str = Moving
				element: FunctionDef 
					name: str = move
					args: arguments 
						args: list 
							element: arg 
								arg: str = self
								annotation: NoneType = None
						vararg: NoneType = None
						kwonlyargs: list 
						kw_defaults: list 
						kwarg: NoneType = None
						defaults: list 
					body: list 
						element: Return 
							value: Str 
								s: str = Move
					decorator_list: list 
					returns: NoneType = None
			decorator_list: list 
		element: ClassDef 
			name: str = Plant
			bases: list 
				element: Name 
					id: str = Uppercaser
					ctx: Load 
			keywords: list 
			body: list 
				element: ClassDef 
					name: str = Thoughts
					bases: list 
					keywords: list 
					body: list 
						element: Assign 
							targets: list 
								element: Name 
									id: str = quantity
									ctx: Store 
							value: Num 
								n: int = 6
					decorator_list: list 
				element: Assign 
					targets: list 
						element: Name 
							id: str = color
							ctx: Store 
					value: Str 
						s: str = Green
				element: Assign 
					targets: list 
						element: Name 
							id: str = state
							ctx: Store 
					value: Str 
						s: str = Growing
				element: FunctionDef 
					name: str = grow
					args: arguments 
						args: list 
							element: arg 
								arg: str = self
								annotation: NoneType = None
						vararg: NoneType = None
						kwonlyargs: list 
						kw_defaults: list 
						kwarg: NoneType = None
						defaults: list 
					body: list 
						element: Return 
							value: Str 
								s: str = Grow
					decorator_list: list 
					returns: NoneType = None
			decorator_list: list 
		element: ClassDef 
			name: str = Stone
			bases: list 
			keywords: list 
			body: list 
				element: ClassDef 
					name: str = Thoughts
					bases: list 
					keywords: list 
					body: list 
						element: Assign 
							targets: list 
								element: Name 
									id: str = quantity
									ctx: Store 
							value: Num 
								n: int = 5
					decorator_list: list 
				element: Assign 
					targets: list 
						element: Name 
							id: str = color
							ctx: Store 
					value: Str 
						s: str = Gray
				element: FunctionDef 
					name: str = be
					args: arguments 
						args: list 
							element: arg 
								arg: str = self
								annotation: NoneType = None
						vararg: NoneType = None
						kwonlyargs: list 
						kw_defaults: list 
						kwarg: NoneType = None
						defaults: list 
					body: list 
						element: Return 
							value: Str 
								s: str = Being
					decorator_list: list 
					returns: NoneType = None
			decorator_list: list 
		element: FunctionDef 
			name: str = run
			args: arguments 
				args: list 
					element: arg 
						arg: str = autoTester
						annotation: NoneType = None
				vararg: NoneType = None
				kwonlyargs: list 
				kw_defaults: list 
				kwarg: NoneType = None
				defaults: list 
			body: list 
				element: Assign 
					targets: list 
						element: Name 
							id: str = animal
							ctx: Store 
					value: Call 
						func: Name 
							id: str = Animal
							ctx: Load 
						args: list 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Attribute 
								value: Attribute 
									value: Name 
										id: str = animal
										ctx: Load 
									attr: str = THOUGHTS
									ctx: Load 
								attr: str = quantity
								ctx: Load 
							element: Attribute 
								value: Name 
									id: str = Animal
									ctx: Load 
								attr: str = COLOR
								ctx: Load 
							element: Attribute 
								value: Name 
									id: str = animal
									ctx: Load 
								attr: str = COLOR
								ctx: Load 
							element: Call 
								func: Attribute 
									value: Name 
										id: str = animal
										ctx: Load 
									attr: str = MOVE
									ctx: Load 
								args: list 
								keywords: list 
						keywords: list 
				element: Assign 
					targets: list 
						element: Name 
							id: str = plant
							ctx: Store 
					value: Call 
						func: Name 
							id: str = Plant
							ctx: Load 
						args: list 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Attribute 
								value: Attribute 
									value: Name 
										id: str = plant
										ctx: Load 
									attr: str = THOUGHTS
									ctx: Load 
								attr: str = quantity
								ctx: Load 
							element: Attribute 
								value: Name 
									id: str = Plant
									ctx: Load 
								attr: str = COLOR
								ctx: Load 
							element: Attribute 
								value: Name 
									id: str = plant
									ctx: Load 
								attr: str = COLOR
								ctx: Load 
							element: Call 
								func: Attribute 
									value: Name 
										id: str = plant
										ctx: Load 
									attr: str = GROW
									ctx: Load 
								args: list 
								keywords: list 
						keywords: list 
				element: Assign 
					targets: list 
						element: Name 
							id: str = stone
							ctx: Store 
					value: Call 
						func: Name 
							id: str = Stone
							ctx: Load 
						args: list 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Attribute 
								value: Attribute 
									value: Name 
										id: str = stone
										ctx: Load 
									attr: str = Thoughts
									ctx: Load 
								attr: str = quantity
								ctx: Load 
							element: Attribute 
								value: Name 
									id: str = Stone
									ctx: Load 
								attr: str = color
								ctx: Load 
							element: Attribute 
								value: Name 
									id: str = stone
									ctx: Load 
								attr: str = color
								ctx: Load 
							element: Call 
								func: Attribute 
									value: Name 
										id: str = stone
										ctx: Load 
									attr: str = be
									ctx: Load 
								args: list 
								keywords: list 
						keywords: list 
			decorator_list: list 
			returns: NoneType = None