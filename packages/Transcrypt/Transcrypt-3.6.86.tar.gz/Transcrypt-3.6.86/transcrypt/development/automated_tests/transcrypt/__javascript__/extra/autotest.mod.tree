file: Module 
	body: list 
		element: Import 
			names: list 
				element: alias 
					name: str = org.transcrypt.autotester
					asname: NoneType = None
		element: Import 
			names: list 
				element: alias 
					name: str = arguments
					asname: NoneType = None
		element: Import 
			names: list 
				element: alias 
					name: str = attribs_by_name
					asname: NoneType = None
		element: Import 
			names: list 
				element: alias 
					name: str = builtin_super
					asname: NoneType = None
		element: Import 
			names: list 
				element: alias 
					name: str = byte_arrays
					asname: NoneType = None
		element: Import 
			names: list 
				element: alias 
					name: str = callable_test
					asname: NoneType = None
		element: Import 
			names: list 
				element: alias 
					name: str = classes
					asname: NoneType = None
		element: Import 
			names: list 
				element: alias 
					name: str = complex_numbers
					asname: NoneType = None
		element: Import 
			names: list 
				element: alias 
					name: str = conditional_expressions
					asname: NoneType = None
		element: Import 
			names: list 
				element: alias 
					name: str = control_structures
					asname: NoneType = None
		element: Expr 
			value: Call 
				func: Name 
					id: str = __pragma__
					ctx: Load 
				args: list 
					element: Str 
						s: str = ifdef
					element: Str 
						s: str = __py3.6__
				keywords: list 
		element: If 
			test: Compare 
				left: Str 
					s: str = __py3.6__
				ops: list 
					element: In 
				comparators: list 
					element: Name 
						id: str = __symbols__
						ctx: Load 
			body: list 
				element: Import 
					names: list 
						element: alias 
							name: str = dashed_numbers
							asname: NoneType = None
			orelse: list 
		element: Expr 
			value: Call 
				func: Name 
					id: str = __pragma__
					ctx: Load 
				args: list 
					element: Str 
						s: str = endif
				keywords: list 
		element: Import 
			names: list 
				element: alias 
					name: str = data_structures
					asname: NoneType = None
		element: Import 
			names: list 
				element: alias 
					name: str = decorators
					asname: NoneType = None
		element: Import 
			names: list 
				element: alias 
					name: str = dict_comprehensions
					asname: NoneType = None
		element: Import 
			names: list 
				element: alias 
					name: str = dictionaries
					asname: NoneType = None
		element: Import 
			names: list 
				element: alias 
					name: str = div_issues
					asname: NoneType = None
		element: Import 
			names: list 
				element: alias 
					name: str = div_pulls
					asname: NoneType = None
		element: Import 
			names: list 
				element: alias 
					name: str = docstrings
					asname: NoneType = None
		element: Import 
			names: list 
				element: alias 
					name: str = exceptions
					asname: NoneType = None
		element: Import 
			names: list 
				element: alias 
					name: str = extended_slices
					asname: NoneType = None
		element: Expr 
			value: Call 
				func: Name 
					id: str = __pragma__
					ctx: Load 
				args: list 
					element: Str 
						s: str = ifdef
					element: Str 
						s: str = __py3.6__
				keywords: list 
		element: If 
			test: Compare 
				left: Str 
					s: str = __py3.6__
				ops: list 
					element: In 
				comparators: list 
					element: Name 
						id: str = __symbols__
						ctx: Load 
			body: list 
				element: Import 
					names: list 
						element: alias 
							name: str = fstrings
							asname: NoneType = None
			orelse: list 
		element: Expr 
			value: Call 
				func: Name 
					id: str = __pragma__
					ctx: Load 
				args: list 
					element: Str 
						s: str = endif
				keywords: list 
		element: Import 
			names: list 
				element: alias 
					name: str = general_functions
					asname: NoneType = None
		element: Import 
			names: list 
				element: alias 
					name: str = globals_function
					asname: NoneType = None
		element: Import 
			names: list 
				element: alias 
					name: str = indices_and_slices
					asname: NoneType = None
		element: Expr 
			value: Call 
				func: Name 
					id: str = __pragma__
					ctx: Load 
				args: list 
					element: Str 
						s: str = ifdef
					element: Str 
						s: str = __esv6__
				keywords: list 
		element: If 
			test: Compare 
				left: Str 
					s: str = __esv6__
				ops: list 
					element: In 
				comparators: list 
					element: Name 
						id: str = __symbols__
						ctx: Load 
			body: list 
				element: Import 
					names: list 
						element: alias 
							name: str = iterators_and_generators
							asname: NoneType = None
			orelse: list 
		element: Expr 
			value: Call 
				func: Name 
					id: str = __pragma__
					ctx: Load 
				args: list 
					element: Str 
						s: str = endif
				keywords: list 
		element: Import 
			names: list 
				element: alias 
					name: str = lambda_functions
					asname: NoneType = None
		element: Import 
			names: list 
				element: alias 
					name: str = list_comprehensions
					asname: NoneType = None
		element: Import 
			names: list 
				element: alias 
					name: str = local_classes
					asname: NoneType = None
		element: Import 
			names: list 
				element: alias 
					name: str = metaclasses
					asname: NoneType = None
		element: Import 
			names: list 
				element: alias 
					name: str = method_and_class_decorators
					asname: NoneType = None
		element: Import 
			names: list 
				element: alias 
					name: str = module_builtin
					asname: NoneType = None
		element: Import 
			names: list 
				element: alias 
					name: str = module_cmath
					asname: NoneType = None
		element: Import 
			names: list 
				element: alias 
					name: str = module_datetime
					asname: NoneType = None
		element: Expr 
			value: Call 
				func: Name 
					id: str = __pragma__
					ctx: Load 
				args: list 
					element: Str 
						s: str = ifdef
					element: Str 
						s: str = __esv6__
				keywords: list 
		element: If 
			test: Compare 
				left: Str 
					s: str = __esv6__
				ops: list 
					element: In 
				comparators: list 
					element: Name 
						id: str = __symbols__
						ctx: Load 
			body: list 
				element: Import 
					names: list 
						element: alias 
							name: str = module_itertools
							asname: NoneType = None
			orelse: list 
		element: Expr 
			value: Call 
				func: Name 
					id: str = __pragma__
					ctx: Load 
				args: list 
					element: Str 
						s: str = endif
				keywords: list 
		element: Import 
			names: list 
				element: alias 
					name: str = module_math
					asname: NoneType = None
		element: Import 
			names: list 
				element: alias 
					name: str = modules
					asname: NoneType = None
		element: Import 
			names: list 
				element: alias 
					name: str = nonlocals
					asname: NoneType = None
		element: Import 
			names: list 
				element: alias 
					name: str = operator_overloading
					asname: NoneType = None
		element: Import 
			names: list 
				element: alias 
					name: str = properties
					asname: NoneType = None
		element: Import 
			names: list 
				element: alias 
					name: str = reprtest
					asname: NoneType = None
		element: Expr 
			value: Call 
				func: Name 
					id: str = __pragma__
					ctx: Load 
				args: list 
					element: Str 
						s: str = ifdef
					element: Str 
						s: str = __esv6__
				keywords: list 
		element: If 
			test: Compare 
				left: Str 
					s: str = __esv6__
				ops: list 
					element: In 
				comparators: list 
					element: Name 
						id: str = __symbols__
						ctx: Load 
			body: list 
				element: Import 
					names: list 
						element: alias 
							name: str = proxies
							asname: NoneType = None
			orelse: list 
		element: Expr 
			value: Call 
				func: Name 
					id: str = __pragma__
					ctx: Load 
				args: list 
					element: Str 
						s: str = endif
				keywords: list 
		element: Import 
			names: list 
				element: alias 
					name: str = set_comprehensions
					asname: NoneType = None
		element: Import 
			names: list 
				element: alias 
					name: str = simple_and_augmented_assignment
					asname: NoneType = None
		element: Import 
			names: list 
				element: alias 
					name: str = truthyness
					asname: NoneType = None
		element: Import 
			names: list 
				element: alias 
					name: str = tuple_assignment
					asname: NoneType = None
		element: Assign 
			targets: list 
				element: Name 
					id: str = autoTester
					ctx: Store 
			value: Call 
				func: Attribute 
					value: Attribute 
						value: Attribute 
							value: Name 
								id: str = org
								ctx: Load 
							attr: str = transcrypt
							ctx: Load 
						attr: str = autotester
						ctx: Load 
					attr: str = AutoTester
					ctx: Load 
				args: list 
				keywords: list 
		element: Expr 
			value: Call 
				func: Attribute 
					value: Name 
						id: str = autoTester
						ctx: Load 
					attr: str = run
					ctx: Load 
				args: list 
					element: Name 
						id: str = arguments
						ctx: Load 
					element: Str 
						s: str = arguments
				keywords: list 
		element: Expr 
			value: Call 
				func: Attribute 
					value: Name 
						id: str = autoTester
						ctx: Load 
					attr: str = run
					ctx: Load 
				args: list 
					element: Name 
						id: str = attribs_by_name
						ctx: Load 
					element: Str 
						s: str = attribs_by_name
				keywords: list 
		element: Expr 
			value: Call 
				func: Attribute 
					value: Name 
						id: str = autoTester
						ctx: Load 
					attr: str = run
					ctx: Load 
				args: list 
					element: Name 
						id: str = builtin_super
						ctx: Load 
					element: Str 
						s: str = builtin_super
				keywords: list 
		element: Expr 
			value: Call 
				func: Attribute 
					value: Name 
						id: str = autoTester
						ctx: Load 
					attr: str = run
					ctx: Load 
				args: list 
					element: Name 
						id: str = byte_arrays
						ctx: Load 
					element: Str 
						s: str = byte_arrays
				keywords: list 
		element: Expr 
			value: Call 
				func: Attribute 
					value: Name 
						id: str = autoTester
						ctx: Load 
					attr: str = run
					ctx: Load 
				args: list 
					element: Name 
						id: str = callable_test
						ctx: Load 
					element: Str 
						s: str = callable
				keywords: list 
		element: Expr 
			value: Call 
				func: Attribute 
					value: Name 
						id: str = autoTester
						ctx: Load 
					attr: str = run
					ctx: Load 
				args: list 
					element: Name 
						id: str = classes
						ctx: Load 
					element: Str 
						s: str = classes
				keywords: list 
		element: Expr 
			value: Call 
				func: Attribute 
					value: Name 
						id: str = autoTester
						ctx: Load 
					attr: str = run
					ctx: Load 
				args: list 
					element: Name 
						id: str = complex_numbers
						ctx: Load 
					element: Str 
						s: str = complex_numbers
				keywords: list 
		element: Expr 
			value: Call 
				func: Attribute 
					value: Name 
						id: str = autoTester
						ctx: Load 
					attr: str = run
					ctx: Load 
				args: list 
					element: Name 
						id: str = conditional_expressions
						ctx: Load 
					element: Str 
						s: str = conditional_expressions
				keywords: list 
		element: Expr 
			value: Call 
				func: Attribute 
					value: Name 
						id: str = autoTester
						ctx: Load 
					attr: str = run
					ctx: Load 
				args: list 
					element: Name 
						id: str = control_structures
						ctx: Load 
					element: Str 
						s: str = control_structures
				keywords: list 
		element: Expr 
			value: Call 
				func: Name 
					id: str = __pragma__
					ctx: Load 
				args: list 
					element: Str 
						s: str = ifdef
					element: Str 
						s: str = __py3.6__
				keywords: list 
		element: If 
			test: Compare 
				left: Str 
					s: str = __py3.6__
				ops: list 
					element: In 
				comparators: list 
					element: Name 
						id: str = __symbols__
						ctx: Load 
			body: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = run
							ctx: Load 
						args: list 
							element: Name 
								id: str = dashed_numbers
								ctx: Load 
							element: Str 
								s: str = dashed_numbers
						keywords: list 
			orelse: list 
		element: Expr 
			value: Call 
				func: Name 
					id: str = __pragma__
					ctx: Load 
				args: list 
					element: Str 
						s: str = endif
				keywords: list 
		element: Expr 
			value: Call 
				func: Attribute 
					value: Name 
						id: str = autoTester
						ctx: Load 
					attr: str = run
					ctx: Load 
				args: list 
					element: Name 
						id: str = data_structures
						ctx: Load 
					element: Str 
						s: str = data_structures
				keywords: list 
		element: Expr 
			value: Call 
				func: Attribute 
					value: Name 
						id: str = autoTester
						ctx: Load 
					attr: str = run
					ctx: Load 
				args: list 
					element: Name 
						id: str = decorators
						ctx: Load 
					element: Str 
						s: str = decorators
				keywords: list 
		element: Expr 
			value: Call 
				func: Attribute 
					value: Name 
						id: str = autoTester
						ctx: Load 
					attr: str = run
					ctx: Load 
				args: list 
					element: Name 
						id: str = dict_comprehensions
						ctx: Load 
					element: Str 
						s: str = dict_comprehensions
				keywords: list 
		element: Expr 
			value: Call 
				func: Attribute 
					value: Name 
						id: str = autoTester
						ctx: Load 
					attr: str = run
					ctx: Load 
				args: list 
					element: Name 
						id: str = dictionaries
						ctx: Load 
					element: Str 
						s: str = dictionaries
				keywords: list 
		element: Expr 
			value: Call 
				func: Attribute 
					value: Name 
						id: str = autoTester
						ctx: Load 
					attr: str = run
					ctx: Load 
				args: list 
					element: Name 
						id: str = div_issues
						ctx: Load 
					element: Str 
						s: str = div_issues
				keywords: list 
		element: Expr 
			value: Call 
				func: Attribute 
					value: Name 
						id: str = autoTester
						ctx: Load 
					attr: str = run
					ctx: Load 
				args: list 
					element: Name 
						id: str = div_pulls
						ctx: Load 
					element: Str 
						s: str = div_pulls
				keywords: list 
		element: Expr 
			value: Call 
				func: Attribute 
					value: Name 
						id: str = autoTester
						ctx: Load 
					attr: str = run
					ctx: Load 
				args: list 
					element: Name 
						id: str = docstrings
						ctx: Load 
					element: Str 
						s: str = docstrings
				keywords: list 
		element: Expr 
			value: Call 
				func: Attribute 
					value: Name 
						id: str = autoTester
						ctx: Load 
					attr: str = run
					ctx: Load 
				args: list 
					element: Name 
						id: str = exceptions
						ctx: Load 
					element: Str 
						s: str = exceptions
				keywords: list 
		element: Expr 
			value: Call 
				func: Attribute 
					value: Name 
						id: str = autoTester
						ctx: Load 
					attr: str = run
					ctx: Load 
				args: list 
					element: Name 
						id: str = extended_slices
						ctx: Load 
					element: Str 
						s: str = extended_slices
				keywords: list 
		element: Expr 
			value: Call 
				func: Name 
					id: str = __pragma__
					ctx: Load 
				args: list 
					element: Str 
						s: str = ifdef
					element: Str 
						s: str = __py3.6__
				keywords: list 
		element: If 
			test: Compare 
				left: Str 
					s: str = __py3.6__
				ops: list 
					element: In 
				comparators: list 
					element: Name 
						id: str = __symbols__
						ctx: Load 
			body: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = run
							ctx: Load 
						args: list 
							element: Name 
								id: str = fstrings
								ctx: Load 
							element: Str 
								s: str = fstrings
						keywords: list 
			orelse: list 
		element: Expr 
			value: Call 
				func: Name 
					id: str = __pragma__
					ctx: Load 
				args: list 
					element: Str 
						s: str = endif
				keywords: list 
		element: Expr 
			value: Call 
				func: Attribute 
					value: Name 
						id: str = autoTester
						ctx: Load 
					attr: str = run
					ctx: Load 
				args: list 
					element: Name 
						id: str = globals_function
						ctx: Load 
					element: Str 
						s: str = globals_function
				keywords: list 
		element: Expr 
			value: Call 
				func: Attribute 
					value: Name 
						id: str = autoTester
						ctx: Load 
					attr: str = run
					ctx: Load 
				args: list 
					element: Name 
						id: str = general_functions
						ctx: Load 
					element: Str 
						s: str = general_functions
				keywords: list 
		element: Expr 
			value: Call 
				func: Attribute 
					value: Name 
						id: str = autoTester
						ctx: Load 
					attr: str = run
					ctx: Load 
				args: list 
					element: Name 
						id: str = indices_and_slices
						ctx: Load 
					element: Str 
						s: str = indices_and_slices
				keywords: list 
		element: Expr 
			value: Call 
				func: Name 
					id: str = __pragma__
					ctx: Load 
				args: list 
					element: Str 
						s: str = ifdef
					element: Str 
						s: str = __esv6__
				keywords: list 
		element: If 
			test: Compare 
				left: Str 
					s: str = __esv6__
				ops: list 
					element: In 
				comparators: list 
					element: Name 
						id: str = __symbols__
						ctx: Load 
			body: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = run
							ctx: Load 
						args: list 
							element: Name 
								id: str = iterators_and_generators
								ctx: Load 
							element: Str 
								s: str = iterators_and_generators
						keywords: list 
			orelse: list 
		element: Expr 
			value: Call 
				func: Name 
					id: str = __pragma__
					ctx: Load 
				args: list 
					element: Str 
						s: str = endif
				keywords: list 
		element: Expr 
			value: Call 
				func: Attribute 
					value: Name 
						id: str = autoTester
						ctx: Load 
					attr: str = run
					ctx: Load 
				args: list 
					element: Name 
						id: str = lambda_functions
						ctx: Load 
					element: Str 
						s: str = lambda_functions
				keywords: list 
		element: Expr 
			value: Call 
				func: Attribute 
					value: Name 
						id: str = autoTester
						ctx: Load 
					attr: str = run
					ctx: Load 
				args: list 
					element: Name 
						id: str = list_comprehensions
						ctx: Load 
					element: Str 
						s: str = list_comprehensions
				keywords: list 
		element: Expr 
			value: Call 
				func: Attribute 
					value: Name 
						id: str = autoTester
						ctx: Load 
					attr: str = run
					ctx: Load 
				args: list 
					element: Name 
						id: str = local_classes
						ctx: Load 
					element: Str 
						s: str = local_classes
				keywords: list 
		element: Expr 
			value: Call 
				func: Attribute 
					value: Name 
						id: str = autoTester
						ctx: Load 
					attr: str = run
					ctx: Load 
				args: list 
					element: Name 
						id: str = metaclasses
						ctx: Load 
					element: Str 
						s: str = metaclasses
				keywords: list 
		element: Expr 
			value: Call 
				func: Attribute 
					value: Name 
						id: str = autoTester
						ctx: Load 
					attr: str = run
					ctx: Load 
				args: list 
					element: Name 
						id: str = method_and_class_decorators
						ctx: Load 
					element: Str 
						s: str = method_and_class_decorators
				keywords: list 
		element: Expr 
			value: Call 
				func: Attribute 
					value: Name 
						id: str = autoTester
						ctx: Load 
					attr: str = run
					ctx: Load 
				args: list 
					element: Name 
						id: str = module_builtin
						ctx: Load 
					element: Str 
						s: str = module_builtin
				keywords: list 
		element: Expr 
			value: Call 
				func: Attribute 
					value: Name 
						id: str = autoTester
						ctx: Load 
					attr: str = run
					ctx: Load 
				args: list 
					element: Name 
						id: str = module_cmath
						ctx: Load 
					element: Str 
						s: str = module_cmath
				keywords: list 
		element: Expr 
			value: Call 
				func: Attribute 
					value: Name 
						id: str = autoTester
						ctx: Load 
					attr: str = run
					ctx: Load 
				args: list 
					element: Name 
						id: str = module_datetime
						ctx: Load 
					element: Str 
						s: str = module_datetime
				keywords: list 
		element: Expr 
			value: Call 
				func: Name 
					id: str = __pragma__
					ctx: Load 
				args: list 
					element: Str 
						s: str = ifdef
					element: Str 
						s: str = __esv6__
				keywords: list 
		element: If 
			test: Compare 
				left: Str 
					s: str = __esv6__
				ops: list 
					element: In 
				comparators: list 
					element: Name 
						id: str = __symbols__
						ctx: Load 
			body: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = run
							ctx: Load 
						args: list 
							element: Name 
								id: str = module_itertools
								ctx: Load 
							element: Str 
								s: str = module_itertools
						keywords: list 
			orelse: list 
		element: Expr 
			value: Call 
				func: Name 
					id: str = __pragma__
					ctx: Load 
				args: list 
					element: Str 
						s: str = endif
				keywords: list 
		element: Expr 
			value: Call 
				func: Attribute 
					value: Name 
						id: str = autoTester
						ctx: Load 
					attr: str = run
					ctx: Load 
				args: list 
					element: Name 
						id: str = module_math
						ctx: Load 
					element: Str 
						s: str = module_math
				keywords: list 
		element: Expr 
			value: Call 
				func: Attribute 
					value: Name 
						id: str = autoTester
						ctx: Load 
					attr: str = run
					ctx: Load 
				args: list 
					element: Name 
						id: str = modules
						ctx: Load 
					element: Str 
						s: str = modules
				keywords: list 
		element: Expr 
			value: Call 
				func: Attribute 
					value: Name 
						id: str = autoTester
						ctx: Load 
					attr: str = run
					ctx: Load 
				args: list 
					element: Name 
						id: str = nonlocals
						ctx: Load 
					element: Str 
						s: str = nonlocals
				keywords: list 
		element: Expr 
			value: Call 
				func: Attribute 
					value: Name 
						id: str = autoTester
						ctx: Load 
					attr: str = run
					ctx: Load 
				args: list 
					element: Name 
						id: str = operator_overloading
						ctx: Load 
					element: Str 
						s: str = operator_overloading
				keywords: list 
		element: Expr 
			value: Call 
				func: Attribute 
					value: Name 
						id: str = autoTester
						ctx: Load 
					attr: str = run
					ctx: Load 
				args: list 
					element: Name 
						id: str = properties
						ctx: Load 
					element: Str 
						s: str = properties
				keywords: list 
		element: Expr 
			value: Call 
				func: Attribute 
					value: Name 
						id: str = autoTester
						ctx: Load 
					attr: str = run
					ctx: Load 
				args: list 
					element: Name 
						id: str = reprtest
						ctx: Load 
					element: Str 
						s: str = repr_str
				keywords: list 
		element: Expr 
			value: Call 
				func: Name 
					id: str = __pragma__
					ctx: Load 
				args: list 
					element: Str 
						s: str = ifdef
					element: Str 
						s: str = __esv6__
				keywords: list 
		element: If 
			test: Compare 
				left: Str 
					s: str = __esv6__
				ops: list 
					element: In 
				comparators: list 
					element: Name 
						id: str = __symbols__
						ctx: Load 
			body: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = run
							ctx: Load 
						args: list 
							element: Name 
								id: str = proxies
								ctx: Load 
							element: Str 
								s: str = proxies
						keywords: list 
			orelse: list 
		element: Expr 
			value: Call 
				func: Name 
					id: str = __pragma__
					ctx: Load 
				args: list 
					element: Str 
						s: str = endif
				keywords: list 
		element: Expr 
			value: Call 
				func: Attribute 
					value: Name 
						id: str = autoTester
						ctx: Load 
					attr: str = run
					ctx: Load 
				args: list 
					element: Name 
						id: str = set_comprehensions
						ctx: Load 
					element: Str 
						s: str = set_comprehensions
				keywords: list 
		element: Expr 
			value: Call 
				func: Attribute 
					value: Name 
						id: str = autoTester
						ctx: Load 
					attr: str = run
					ctx: Load 
				args: list 
					element: Name 
						id: str = simple_and_augmented_assignment
						ctx: Load 
					element: Str 
						s: str = simple_and_augmented_assignment
				keywords: list 
		element: Expr 
			value: Call 
				func: Attribute 
					value: Name 
						id: str = autoTester
						ctx: Load 
					attr: str = run
					ctx: Load 
				args: list 
					element: Name 
						id: str = truthyness
						ctx: Load 
					element: Str 
						s: str = truthyness
				keywords: list 
		element: Expr 
			value: Call 
				func: Attribute 
					value: Name 
						id: str = autoTester
						ctx: Load 
					attr: str = run
					ctx: Load 
				args: list 
					element: Name 
						id: str = tuple_assignment
						ctx: Load 
					element: Str 
						s: str = tuple_assignment
				keywords: list 
		element: Expr 
			value: Call 
				func: Attribute 
					value: Name 
						id: str = autoTester
						ctx: Load 
					attr: str = done
					ctx: Load 
				args: list 
				keywords: list 