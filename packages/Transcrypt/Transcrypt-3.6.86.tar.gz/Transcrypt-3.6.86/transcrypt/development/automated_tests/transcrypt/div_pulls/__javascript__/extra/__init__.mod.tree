file: Module 
	body: list 
		element: Expr 
			value: Str 
				s: str = This is a single line docstring
		element: ClassDef 
			name: str = A
			bases: list 
			keywords: list 
			body: list 
				element: Expr 
					value: Str 
						s: str = 
    This
    is 
    a 
    multiline
    docstring
    
				element: FunctionDef 
					name: str = __init__
					args: arguments 
						args: list 
							element: arg 
								arg: str = self
								annotation: NoneType = None
							element: arg 
								arg: str = x
								annotation: NoneType = None
						vararg: NoneType = None
						kwonlyargs: list 
						kw_defaults: list 
						kwarg: NoneType = None
						defaults: list 
					body: list 
						element: Expr 
							value: Str 
								s: str = This is a single line comment
						element: Assign 
							targets: list 
								element: Attribute 
									value: Name 
										id: str = self
										ctx: Load 
									attr: str = x
									ctx: Store 
							value: Name 
								id: str = x
								ctx: Load 
						element: Expr 
							value: Str 
								s: str = 
        This
        is 
        a 
        multiline
        docstring
        
					decorator_list: list 
					returns: NoneType = None
				element: Expr 
					value: Str 
						s: str = This is a single line docstring
			decorator_list: list 
		element: Expr 
			value: Str 
				s: str = 
This
is 
a 
multiline
docstring

		element: Assign 
			targets: list 
				element: Name 
					id: str = a
					ctx: Store 
			value: Call 
				func: Name 
					id: str = A
					ctx: Load 
				args: list 
					element: Num 
						n: float = 5.5
				keywords: list 
		element: FunctionDef 
			name: str = run
			args: arguments 
				args: list 
					element: arg 
						arg: str = autoTester
						annotation: NoneType = None
				vararg: NoneType = None
				kwonlyargs: list 
				kw_defaults: list 
				kwarg: NoneType = None
				defaults: list 
			body: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Str 
								s: str = Pull 56
						keywords: list 
				element: Assign 
					targets: list 
						element: Name 
							id: str = s
							ctx: Store 
					value: Str 
						s: str = abcdefghij
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Subscript 
								value: Name 
									id: str = s
									ctx: Load 
								slice: Slice 
									lower: Num 
										n: int = 2
									upper: Num 
										n: int = 3
									step: NoneType = None
								ctx: Load 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Subscript 
								value: Name 
									id: str = s
									ctx: Load 
								slice: Slice 
									lower: NoneType = None
									upper: Num 
										n: int = 3
									step: NoneType = None
								ctx: Load 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Subscript 
								value: Name 
									id: str = s
									ctx: Load 
								slice: Slice 
									lower: Num 
										n: int = 2
									upper: NoneType = None
									step: NoneType = None
								ctx: Load 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Subscript 
								value: Name 
									id: str = s
									ctx: Load 
								slice: Slice 
									lower: NoneType = None
									upper: NoneType = None
									step: Num 
										n: int = 2
								ctx: Load 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Str 
								s: str = Pull 59
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Call 
								func: Name 
									id: str = list
									ctx: Load 
								args: list 
									element: Call 
										func: Name 
											id: str = filter
											ctx: Load 
										args: list 
											element: Lambda 
												args: arguments 
													args: list 
														element: arg 
															arg: str = x
															annotation: NoneType = None
													vararg: NoneType = None
													kwonlyargs: list 
													kw_defaults: list 
													kwarg: NoneType = None
													defaults: list 
												body: Compare 
													left: BinOp 
														left: Name 
															id: str = x
															ctx: Load 
														op: Mod 
														right: Num 
															n: int = 2
													ops: list 
														element: Eq 
													comparators: list 
														element: Num 
															n: int = 0
											element: Call 
												func: Name 
													id: str = range
													ctx: Load 
												args: list 
													element: Num 
														n: int = 10
												keywords: list 
										keywords: list 
								keywords: list 
						keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Call 
								func: Name 
									id: str = list
									ctx: Load 
								args: list 
									element: Call 
										func: Name 
											id: str = map
											ctx: Load 
										args: list 
											element: Lambda 
												args: arguments 
													args: list 
														element: arg 
															arg: str = x
															annotation: NoneType = None
													vararg: NoneType = None
													kwonlyargs: list 
													kw_defaults: list 
													kwarg: NoneType = None
													defaults: list 
												body: BinOp 
													left: Name 
														id: str = x
														ctx: Load 
													op: Mult 
													right: Name 
														id: str = x
														ctx: Load 
											element: Call 
												func: Name 
													id: str = range
													ctx: Load 
												args: list 
													element: Num 
														n: int = 0
													element: Num 
														n: int = 31
													element: Num 
														n: int = 3
												keywords: list 
										keywords: list 
								keywords: list 
						keywords: list 
			decorator_list: list 
			returns: NoneType = None