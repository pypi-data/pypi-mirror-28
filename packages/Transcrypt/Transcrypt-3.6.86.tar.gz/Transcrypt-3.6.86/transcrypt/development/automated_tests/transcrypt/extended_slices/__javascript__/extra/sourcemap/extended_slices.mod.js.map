{
	"version": 3,
	"file": "D:/activ_tosh/geatec/transcrypt/qquick/Transcrypt/transcrypt/development/automated_tests/transcrypt/extended_slices/__javascript__/extended_slices.mod.js",
	"sources": [
		"D:/activ_tosh/geatec/transcrypt/qquick/Transcrypt/transcrypt/development/automated_tests/transcrypt/extended_slices/__init__.py"
	],
	"sourcesContent": [
		"from org.transcrypt.stubs.browser import *\nfrom org.transcrypt.stubs.browser import __pragma__, __envir__\n\ndef indices (key):\n    if __envir__.executor_name == __envir__.transpiler_name:\n        return tuple (key) if type (key) == list else key\n    else:\n        try:\n            return key.indices (1000000000)\n        except:\n            try:\n                return tuple ([indices (subkey) for subkey in key])\n            except:\n                return key\n\nclass Test:\n    def __init__ (self, autoTester):\n        self.autoTester = autoTester\n\n    def __getitem__ (self, key):\n        self.autoTester.check ('getitem (', indices (key), ')')\n        return 1234567\n        \n    def __setitem__ (self, key, value):\n        self.autoTester.check ('setitem (', indices (key), ')', value)\n\ndef run (autoTester):\n    a = b = c = d = e = f = g = h = i = j = k = l = Test (autoTester)\n\n    __pragma__ ('opov')\n            \n    a [1:2:3, 4:5:6] = b [7:8:9]\n    c [1:2:3] = d [4:5:6, 7:8:9]\n    e [1, 1:2:3, 3] = f [4, 4:5:6, 6]\n    g [1, 2, 3] = h [1, 2, 3]\n    i [1] = j [1]\n    k [1:2:3] = l [1:2:3]\n"
	],
	"mappings": "AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA"
}