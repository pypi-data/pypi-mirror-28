file: Module 
	body: list 
		element: ImportFrom 
			module: str = org.transcrypt.stubs.browser
			names: list 
				element: alias 
					name: str = __envir__
					asname: NoneType = None
				element: alias 
					name: str = __new__
					asname: NoneType = None
				element: alias 
					name: str = __pragma__
					asname: NoneType = None
			level: int = 0
		element: If 
			test: Compare 
				left: Attribute 
					value: Name 
						id: str = __envir__
						ctx: Load 
					attr: str = executor_name
					ctx: Load 
				ops: list 
					element: Eq 
				comparators: list 
					element: Attribute 
						value: Name 
							id: str = __envir__
							ctx: Load 
						attr: str = transpiler_name
						ctx: Load 
			body: list 
				element: ClassDef 
					name: str = BaseException
					bases: list 
					keywords: list 
					body: list 
						element: Pass 
					decorator_list: list 
			orelse: list 
		element: ClassDef 
			name: str = Ex1
			bases: list 
				element: Name 
					id: str = Exception
					ctx: Load 
			keywords: list 
			body: list 
				element: Pass 
			decorator_list: list 
		element: ClassDef 
			name: str = Ex2
			bases: list 
				element: Name 
					id: str = Ex1
					ctx: Load 
			keywords: list 
			body: list 
				element: Pass 
			decorator_list: list 
		element: ClassDef 
			name: str = Ex3
			bases: list 
				element: Name 
					id: str = Exception
					ctx: Load 
			keywords: list 
			body: list 
				element: Pass 
			decorator_list: list 
		element: ClassDef 
			name: str = Table
			bases: list 
				element: Name 
					id: str = BaseException
					ctx: Load 
			keywords: list 
			body: list 
				element: FunctionDef 
					name: str = __init__
					args: arguments 
						args: list 
							element: arg 
								arg: str = self
								annotation: NoneType = None
						vararg: arg 
							arg: str = args
							annotation: NoneType = None
						kwonlyargs: list 
						kw_defaults: list 
						kwarg: NoneType = None
						defaults: list 
					body: list 
						element: Assign 
							targets: list 
								element: Attribute 
									value: Name 
										id: str = self
										ctx: Load 
									attr: str = fields
									ctx: Store 
							value: Name 
								id: str = args
								ctx: Load 
					decorator_list: list 
					returns: NoneType = None
				element: FunctionDef 
					name: str = __repr__
					args: arguments 
						args: list 
							element: arg 
								arg: str = self
								annotation: NoneType = None
						vararg: NoneType = None
						kwonlyargs: list 
						kw_defaults: list 
						kwarg: NoneType = None
						defaults: list 
					body: list 
						element: Return 
							value: BinOp 
								left: Str 
									s: str = Table
								op: Add 
								right: Call 
									func: Attribute 
										value: Call 
											func: Attribute 
												value: Call 
													func: Name 
														id: str = repr
														ctx: Load 
													args: list 
														element: Attribute 
															value: Name 
																id: str = self
																ctx: Load 
															attr: str = fields
															ctx: Load 
													keywords: list 
												attr: str = replace
												ctx: Load 
											args: list 
												element: Str 
													s: str = , 
												element: Str 
													s: str = ,
											keywords: list 
										attr: str = replace
										ctx: Load 
									args: list 
										element: Str 
											s: str = '
										element: Str 
											s: str = 
									keywords: list 
					decorator_list: list 
					returns: NoneType = None
			decorator_list: list 
		element: FunctionDef 
			name: str = test1
			args: arguments 
				args: list 
				vararg: NoneType = None
				kwonlyargs: list 
				kw_defaults: list 
				kwarg: NoneType = None
				defaults: list 
			body: list 
				element: Raise 
					exc: Call 
						func: Name 
							id: str = Exception
							ctx: Load 
						args: list 
							element: Str 
								s: str = mary
						keywords: list 
					cause: NoneType = None
			decorator_list: list 
			returns: NoneType = None
		element: FunctionDef 
			name: str = test2
			args: arguments 
				args: list 
					element: arg 
						arg: str = autoTester
						annotation: NoneType = None
				vararg: NoneType = None
				kwonlyargs: list 
				kw_defaults: list 
				kwarg: NoneType = None
				defaults: list 
			body: list 
				element: Try 
					body: list 
						element: Expr 
							value: Call 
								func: Name 
									id: str = test1
									ctx: Load 
								args: list 
								keywords: list 
					handlers: list 
						element: ExceptHandler 
							type: Name 
								id: str = Ex1
								ctx: Load 
							name: str = exception
							body: list 
								element: Expr 
									value: Call 
										func: Attribute 
											value: Name 
												id: str = autoTester
												ctx: Load 
											attr: str = check
											ctx: Load 
										args: list 
											element: Num 
												n: int = 111
										keywords: list 
								element: Expr 
									value: Call 
										func: Attribute 
											value: Name 
												id: str = autoTester
												ctx: Load 
											attr: str = check
											ctx: Load 
										args: list 
											element: Name 
												id: str = exception
												ctx: Load 
										keywords: list 
						element: ExceptHandler 
							type: Name 
								id: str = Exception
								ctx: Load 
							name: str = exception
							body: list 
								element: Expr 
									value: Call 
										func: Attribute 
											value: Name 
												id: str = autoTester
												ctx: Load 
											attr: str = check
											ctx: Load 
										args: list 
											element: Num 
												n: int = 222
										keywords: list 
								element: Expr 
									value: Call 
										func: Attribute 
											value: Name 
												id: str = autoTester
												ctx: Load 
											attr: str = check
											ctx: Load 
										args: list 
											element: Name 
												id: str = exception
												ctx: Load 
										keywords: list 
					orelse: list 
					finalbody: list 
			decorator_list: list 
			returns: NoneType = None
		element: FunctionDef 
			name: str = run
			args: arguments 
				args: list 
					element: arg 
						arg: str = autoTester
						annotation: NoneType = None
				vararg: NoneType = None
				kwonlyargs: list 
				kw_defaults: list 
				kwarg: NoneType = None
				defaults: list 
			body: list 
				element: Expr 
					value: Call 
						func: Name 
							id: str = test2
							ctx: Load 
						args: list 
							element: Name 
								id: str = autoTester
								ctx: Load 
						keywords: list 
				element: Try 
					body: list 
						element: Raise 
							exc: Call 
								func: Name 
									id: str = Ex2
									ctx: Load 
								args: list 
									element: Str 
										s: str = had
								keywords: list 
							cause: NoneType = None
					handlers: list 
						element: ExceptHandler 
							type: Name 
								id: str = Ex1
								ctx: Load 
							name: str = exception
							body: list 
								element: Expr 
									value: Call 
										func: Attribute 
											value: Name 
												id: str = autoTester
												ctx: Load 
											attr: str = check
											ctx: Load 
										args: list 
											element: Str 
												s: str = a
										keywords: list 
						element: ExceptHandler 
							type: Name 
								id: str = Exception
								ctx: Load 
							name: str = exception
							body: list 
								element: Expr 
									value: Call 
										func: Attribute 
											value: Name 
												id: str = autoTester
												ctx: Load 
											attr: str = check
											ctx: Load 
										args: list 
											element: Str 
												s: str = little
										keywords: list 
								element: Expr 
									value: Call 
										func: Attribute 
											value: Name 
												id: str = autoTester
												ctx: Load 
											attr: str = check
											ctx: Load 
										args: list 
											element: Name 
												id: str = exception
												ctx: Load 
										keywords: list 
					orelse: list 
					finalbody: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Num 
								n: int = 333
						keywords: list 
				element: Try 
					body: list 
						element: Raise 
							exc: Call 
								func: Name 
									id: str = Ex1
									ctx: Load 
								args: list 
									element: Str 
										s: str = lamb
								keywords: list 
							cause: NoneType = None
					handlers: list 
						element: ExceptHandler 
							type: Name 
								id: str = Ex2
								ctx: Load 
							name: str = exception
							body: list 
								element: Expr 
									value: Call 
										func: Attribute 
											value: Name 
												id: str = autoTester
												ctx: Load 
											attr: str = check
											ctx: Load 
										args: list 
											element: Str 
												s: str = his
										keywords: list 
								element: Expr 
									value: Call 
										func: Attribute 
											value: Name 
												id: str = autoTester
												ctx: Load 
											attr: str = check
											ctx: Load 
										args: list 
											element: Name 
												id: str = exception
												ctx: Load 
										keywords: list 
						element: ExceptHandler 
							type: Name 
								id: str = Ex1
								ctx: Load 
							name: str = exception
							body: list 
								element: Expr 
									value: Call 
										func: Attribute 
											value: Name 
												id: str = autoTester
												ctx: Load 
											attr: str = check
											ctx: Load 
										args: list 
											element: Str 
												s: str = fleece
										keywords: list 
								element: Expr 
									value: Call 
										func: Attribute 
											value: Name 
												id: str = autoTester
												ctx: Load 
											attr: str = check
											ctx: Load 
										args: list 
											element: Name 
												id: str = exception
												ctx: Load 
										keywords: list 
						element: ExceptHandler 
							type: Name 
								id: str = Exception
								ctx: Load 
							name: str = exception
							body: list 
								element: Expr 
									value: Call 
										func: Attribute 
											value: Name 
												id: str = autoTester
												ctx: Load 
											attr: str = check
											ctx: Load 
										args: list 
											element: Str 
												s: str = was
										keywords: list 
								element: Expr 
									value: Call 
										func: Attribute 
											value: Name 
												id: str = autoTester
												ctx: Load 
											attr: str = check
											ctx: Load 
										args: list 
											element: Name 
												id: str = exception
												ctx: Load 
										keywords: list 
					orelse: list 
					finalbody: list 
						element: Expr 
							value: Call 
								func: Attribute 
									value: Name 
										id: str = autoTester
										ctx: Load 
									attr: str = check
									ctx: Load 
								args: list 
									element: Str 
										s: str = white
								keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Num 
								n: int = 444
						keywords: list 
				element: FunctionDef 
					name: str = test3
					args: arguments 
						args: list 
						vararg: NoneType = None
						kwonlyargs: list 
						kw_defaults: list 
						kwarg: NoneType = None
						defaults: list 
					body: list 
						element: Raise 
							exc: Call 
								func: Name 
									id: str = Ex3
									ctx: Load 
								args: list 
									element: Str 
										s: str = as
								keywords: list 
							cause: NoneType = None
					decorator_list: list 
					returns: NoneType = None
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Num 
								n: int = 555
						keywords: list 
				element: Try 
					body: list 
						element: Expr 
							value: Call 
								func: Name 
									id: str = test3
									ctx: Load 
								args: list 
								keywords: list 
					handlers: list 
						element: ExceptHandler 
							type: Name 
								id: str = Ex1
								ctx: Load 
							name: str = exception
							body: list 
								element: Expr 
									value: Call 
										func: Attribute 
											value: Name 
												id: str = autoTester
												ctx: Load 
											attr: str = check
											ctx: Load 
										args: list 
											element: Str 
												s: str = snow
										keywords: list 
								element: Expr 
									value: Call 
										func: Attribute 
											value: Name 
												id: str = autoTester
												ctx: Load 
											attr: str = check
											ctx: Load 
										args: list 
											element: Name 
												id: str = exception
												ctx: Load 
										keywords: list 
						element: ExceptHandler 
							type: Name 
								id: str = Exception
								ctx: Load 
							name: str = exception
							body: list 
								element: Expr 
									value: Call 
										func: Attribute 
											value: Name 
												id: str = autoTester
												ctx: Load 
											attr: str = check
											ctx: Load 
										args: list 
											element: Str 
												s: str = and
										keywords: list 
								element: Expr 
									value: Call 
										func: Attribute 
											value: Name 
												id: str = autoTester
												ctx: Load 
											attr: str = check
											ctx: Load 
										args: list 
											element: Name 
												id: str = exception
												ctx: Load 
										keywords: list 
					orelse: list 
					finalbody: list 
						element: Expr 
							value: Call 
								func: Attribute 
									value: Name 
										id: str = autoTester
										ctx: Load 
									attr: str = check
									ctx: Load 
								args: list 
									element: Str 
										s: str = everywhere
								keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Num 
								n: int = 666
						keywords: list 
				element: Try 
					body: list 
						element: Raise 
							exc: Call 
								func: Name 
									id: str = Ex3
									ctx: Load 
								args: list 
									element: Str 
										s: str = that
								keywords: list 
							cause: NoneType = None
					handlers: list 
						element: ExceptHandler 
							type: Name 
								id: str = Ex1
								ctx: Load 
							name: str = exception
							body: list 
								element: Expr 
									value: Call 
										func: Attribute 
											value: Name 
												id: str = autoTester
												ctx: Load 
											attr: str = check
											ctx: Load 
										args: list 
											element: Str 
												s: str = mary
										keywords: list 
								element: Expr 
									value: Call 
										func: Attribute 
											value: Name 
												id: str = autoTester
												ctx: Load 
											attr: str = check
											ctx: Load 
										args: list 
											element: Name 
												id: str = exception
												ctx: Load 
										keywords: list 
						element: ExceptHandler 
							type: NoneType = None
							name: NoneType = None
							body: list 
								element: Expr 
									value: Call 
										func: Attribute 
											value: Name 
												id: str = autoTester
												ctx: Load 
											attr: str = check
											ctx: Load 
										args: list 
											element: Str 
												s: str = went
										keywords: list 
					orelse: list 
					finalbody: list 
						element: Expr 
							value: Call 
								func: Attribute 
									value: Name 
										id: str = autoTester
										ctx: Load 
									attr: str = check
									ctx: Load 
								args: list 
									element: Str 
										s: str = the
								keywords: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Num 
								n: int = 777
						keywords: list 
				element: Try 
					body: list 
						element: Try 
							body: list 
								element: Raise 
									exc: Call 
										func: Name 
											id: str = Ex3
											ctx: Load 
										args: list 
											element: Str 
												s: str = lamb
										keywords: list 
									cause: NoneType = None
							handlers: list 
								element: ExceptHandler 
									type: Name 
										id: str = Ex1
										ctx: Load 
									name: str = exception
									body: list 
										element: Expr 
											value: Call 
												func: Attribute 
													value: Name 
														id: str = autoTester
														ctx: Load 
													attr: str = check
													ctx: Load 
												args: list 
													element: Str 
														s: str = was
												keywords: list 
										element: Expr 
											value: Call 
												func: Attribute 
													value: Name 
														id: str = autoTester
														ctx: Load 
													attr: str = check
													ctx: Load 
												args: list 
													element: Name 
														id: str = exception
														ctx: Load 
												keywords: list 
							orelse: list 
							finalbody: list 
								element: Expr 
									value: Call 
										func: Attribute 
											value: Name 
												id: str = autoTester
												ctx: Load 
											attr: str = check
											ctx: Load 
										args: list 
											element: Str 
												s: str = to
										keywords: list 
					handlers: list 
						element: ExceptHandler 
							type: Name 
								id: str = Ex3
								ctx: Load 
							name: str = exception
							body: list 
								element: Expr 
									value: Call 
										func: Attribute 
											value: Name 
												id: str = autoTester
												ctx: Load 
											attr: str = check
											ctx: Load 
										args: list 
											element: Str 
												s: str = go
										keywords: list 
								element: Expr 
									value: Call 
										func: Attribute 
											value: Name 
												id: str = autoTester
												ctx: Load 
											attr: str = check
											ctx: Load 
										args: list 
											element: Name 
												id: str = exception
												ctx: Load 
										keywords: list 
					orelse: list 
					finalbody: list 
				element: Try 
					body: list 
						element: Raise 
							exc: Call 
								func: Name 
									id: str = __new__
									ctx: Load 
								args: list 
									element: Call 
										func: Name 
											id: str = Table
											ctx: Load 
										args: list 
											element: Str 
												s: str = he
											element: Str 
												s: str = followed
											element: Str 
												s: str = her
										keywords: list 
								keywords: list 
							cause: NoneType = None
					handlers: list 
						element: ExceptHandler 
							type: Name 
								id: str = Ex1
								ctx: Load 
							name: str = exception
							body: list 
								element: Expr 
									value: Call 
										func: Attribute 
											value: Name 
												id: str = autoTester
												ctx: Load 
											attr: str = check
											ctx: Load 
										args: list 
											element: Str 
												s: str = to
										keywords: list 
								element: Expr 
									value: Call 
										func: Attribute 
											value: Name 
												id: str = autoTester
												ctx: Load 
											attr: str = check
											ctx: Load 
										args: list 
											element: Name 
												id: str = exception
												ctx: Load 
										keywords: list 
						element: ExceptHandler 
							type: Name 
								id: str = Table
								ctx: Load 
							name: str = exception
							body: list 
								element: Expr 
									value: Call 
										func: Attribute 
											value: Name 
												id: str = autoTester
												ctx: Load 
											attr: str = check
											ctx: Load 
										args: list 
											element: Str 
												s: str = school
										keywords: list 
								element: Expr 
									value: Call 
										func: Attribute 
											value: Name 
												id: str = autoTester
												ctx: Load 
											attr: str = check
											ctx: Load 
										args: list 
											element: Name 
												id: str = exception
												ctx: Load 
										keywords: list 
						element: ExceptHandler 
							type: Name 
								id: str = Ex3
								ctx: Load 
							name: str = exception
							body: list 
								element: Expr 
									value: Call 
										func: Attribute 
											value: Name 
												id: str = autoTester
												ctx: Load 
											attr: str = check
											ctx: Load 
										args: list 
											element: Str 
												s: str = one
										keywords: list 
								element: Expr 
									value: Call 
										func: Attribute 
											value: Name 
												id: str = autoTester
												ctx: Load 
											attr: str = check
											ctx: Load 
										args: list 
											element: Name 
												id: str = exception
												ctx: Load 
										keywords: list 
					orelse: list 
					finalbody: list 
						element: Expr 
							value: Call 
								func: Attribute 
									value: Name 
										id: str = autoTester
										ctx: Load 
									attr: str = check
									ctx: Load 
								args: list 
									element: Str 
										s: str = day
								keywords: list 
				element: Try 
					body: list 
						element: Assert 
							test: Compare 
								left: BinOp 
									left: BinOp 
										left: Num 
											n: int = 2
										op: Mult 
										right: Num 
											n: int = 8
									op: Div 
									right: Num 
										n: int = 4
								ops: list 
									element: Eq 
								comparators: list 
									element: Num 
										n: int = 2
							msg: Str 
								s: str = Assert error 1
					handlers: list 
						element: ExceptHandler 
							type: Name 
								id: str = AssertionError
								ctx: Load 
							name: str = exception
							body: list 
								element: Expr 
									value: Call 
										func: Attribute 
											value: Name 
												id: str = autoTester
												ctx: Load 
											attr: str = check
											ctx: Load 
										args: list 
											element: Name 
												id: str = exception
												ctx: Load 
										keywords: list 
					orelse: list 
					finalbody: list 
				element: Try 
					body: list 
						element: Assert 
							test: Compare 
								left: BinOp 
									left: BinOp 
										left: Num 
											n: int = 2
										op: Mult 
										right: Num 
											n: int = 8
									op: Div 
									right: Num 
										n: int = 4
								ops: list 
									element: Eq 
								comparators: list 
									element: Num 
										n: int = 4
							msg: Str 
								s: str = Assert error 2
					handlers: list 
						element: ExceptHandler 
							type: Name 
								id: str = AssertionError
								ctx: Load 
							name: str = exception
							body: list 
								element: Expr 
									value: Call 
										func: Attribute 
											value: Name 
												id: str = autoTester
												ctx: Load 
											attr: str = check
											ctx: Load 
										args: list 
											element: Name 
												id: str = exception
												ctx: Load 
										keywords: list 
					orelse: list 
					finalbody: list 
				element: Try 
					body: list 
						element: Assert 
							test: Compare 
								left: BinOp 
									left: BinOp 
										left: Num 
											n: int = 2
										op: Mult 
										right: Num 
											n: int = 8
									op: Div 
									right: Num 
										n: int = 4
								ops: list 
									element: Eq 
								comparators: list 
									element: Num 
										n: int = 2
							msg: NoneType = None
					handlers: list 
						element: ExceptHandler 
							type: Name 
								id: str = AssertionError
								ctx: Load 
							name: str = exception
							body: list 
								element: Expr 
									value: Call 
										func: Attribute 
											value: Name 
												id: str = autoTester
												ctx: Load 
											attr: str = check
											ctx: Load 
										args: list 
											element: Name 
												id: str = exception
												ctx: Load 
										keywords: list 
					orelse: list 
					finalbody: list 
				element: Try 
					body: list 
						element: Assert 
							test: Compare 
								left: BinOp 
									left: BinOp 
										left: Num 
											n: int = 2
										op: Mult 
										right: Num 
											n: int = 8
									op: Div 
									right: Num 
										n: int = 4
								ops: list 
									element: Eq 
								comparators: list 
									element: Num 
										n: int = 4
							msg: NoneType = None
					handlers: list 
						element: ExceptHandler 
							type: Name 
								id: str = AssertionError
								ctx: Load 
							name: str = exception
							body: list 
								element: Expr 
									value: Call 
										func: Attribute 
											value: Name 
												id: str = autoTester
												ctx: Load 
											attr: str = check
											ctx: Load 
										args: list 
											element: Name 
												id: str = exception
												ctx: Load 
										keywords: list 
					orelse: list 
					finalbody: list 
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Num 
								n: int = 888
						keywords: list 
				element: Try 
					body: list 
						element: Expr 
							value: Call 
								func: Attribute 
									value: Name 
										id: str = autoTester
										ctx: Load 
									attr: str = check
									ctx: Load 
								args: list 
									element: Str 
										s: str = hello world 1
								keywords: list 
					handlers: list 
						element: ExceptHandler 
							type: NoneType = None
							name: NoneType = None
							body: list 
								element: Expr 
									value: Call 
										func: Attribute 
											value: Name 
												id: str = autoTester
												ctx: Load 
											attr: str = check
											ctx: Load 
										args: list 
											element: Str 
												s: str = error 1
										keywords: list 
					orelse: list 
						element: Expr 
							value: Call 
								func: Attribute 
									value: Name 
										id: str = autoTester
										ctx: Load 
									attr: str = check
									ctx: Load 
								args: list 
									element: Str 
										s: str = no error 1
								keywords: list 
					finalbody: list 
				element: Assign 
					targets: list 
						element: Name 
							id: str = i
							ctx: Store 
					value: BinOp 
						left: Num 
							n: int = 1
						op: Add 
						right: Num 
							n: int = 2
				element: Try 
					body: list 
						element: Expr 
							value: Call 
								func: Attribute 
									value: Name 
										id: str = autoTester
										ctx: Load 
									attr: str = check
									ctx: Load 
								args: list 
									element: Str 
										s: str = hello world 2
								keywords: list 
						element: If 
							test: Compare 
								left: Name 
									id: str = i
									ctx: Load 
								ops: list 
									element: Eq 
								comparators: list 
									element: Num 
										n: int = 3
							body: list 
								element: Raise 
									exc: Call 
										func: Name 
											id: str = Exception
											ctx: Load 
										args: list 
										keywords: list 
									cause: NoneType = None
							orelse: list 
					handlers: list 
						element: ExceptHandler 
							type: NoneType = None
							name: NoneType = None
							body: list 
								element: Expr 
									value: Call 
										func: Attribute 
											value: Name 
												id: str = autoTester
												ctx: Load 
											attr: str = check
											ctx: Load 
										args: list 
											element: Str 
												s: str = error 2
										keywords: list 
					orelse: list 
						element: Expr 
							value: Call 
								func: Attribute 
									value: Name 
										id: str = autoTester
										ctx: Load 
									attr: str = check
									ctx: Load 
								args: list 
									element: Str 
										s: str = no error 2
								keywords: list 
					finalbody: list 
				element: For 
					target: Name 
						id: str = raiseIt
						ctx: Store 
					iter: Tuple 
						elts: list 
							element: NameConstant 
								value: bool = False
							element: NameConstant 
								value: bool = True
						ctx: Load 
					body: list 
						element: Try 
							body: list 
								element: Try 
									body: list 
										element: If 
											test: Name 
												id: str = raiseIt
												ctx: Load 
											body: list 
												element: Raise 
													exc: Call 
														func: Name 
															id: str = Exception
															ctx: Load 
														args: list 
														keywords: list 
													cause: NoneType = None
											orelse: list 
										element: Expr 
											value: Call 
												func: Attribute 
													value: Name 
														id: str = autoTester
														ctx: Load 
													attr: str = check
													ctx: Load 
												args: list 
													element: Str 
														s: str = no error 3
												keywords: list 
									handlers: list 
									orelse: list 
									finalbody: list 
										element: Expr 
											value: Call 
												func: Attribute 
													value: Name 
														id: str = autoTester
														ctx: Load 
													attr: str = check
													ctx: Load 
												args: list 
													element: Str 
														s: str = anyhow 3
												keywords: list 
							handlers: list 
								element: ExceptHandler 
									type: NoneType = None
									name: NoneType = None
									body: list 
										element: Expr 
											value: Call 
												func: Attribute 
													value: Name 
														id: str = autoTester
														ctx: Load 
													attr: str = check
													ctx: Load 
												args: list 
													element: Str 
														s: str = error 3
												keywords: list 
							orelse: list 
							finalbody: list 
					orelse: list 
			decorator_list: list 
			returns: NoneType = None