file: Module 
	body: list 
		element: Assign 
			targets: list 
				element: Name 
					id: str = pi
					ctx: Store 
			value: Attribute 
				value: Name 
					id: str = Math
					ctx: Load 
				attr: str = PI
				ctx: Load 
		element: Assign 
			targets: list 
				element: Name 
					id: str = e
					ctx: Store 
			value: Attribute 
				value: Name 
					id: str = Math
					ctx: Load 
				attr: str = E
				ctx: Load 
		element: Assign 
			targets: list 
				element: Name 
					id: str = exp
					ctx: Store 
			value: Attribute 
				value: Name 
					id: str = Math
					ctx: Load 
				attr: str = exp
				ctx: Load 
		element: FunctionDef 
			name: str = expm1
			args: arguments 
				args: list 
					element: arg 
						arg: str = x
						annotation: NoneType = None
				vararg: NoneType = None
				kwonlyargs: list 
				kw_defaults: list 
				kwarg: NoneType = None
				defaults: list 
			body: list 
				element: Return 
					value: BinOp 
						left: Call 
							func: Attribute 
								value: Name 
									id: str = Math
									ctx: Load 
								attr: str = exp
								ctx: Load 
							args: list 
								element: Name 
									id: str = x
									ctx: Load 
							keywords: list 
						op: Sub 
						right: Num 
							n: int = 1
			decorator_list: list 
			returns: NoneType = None
		element: FunctionDef 
			name: str = log
			args: arguments 
				args: list 
					element: arg 
						arg: str = x
						annotation: NoneType = None
					element: arg 
						arg: str = base
						annotation: NoneType = None
				vararg: NoneType = None
				kwonlyargs: list 
				kw_defaults: list 
				kwarg: NoneType = None
				defaults: list 
			body: list 
				element: Return 
					value: IfExp 
						test: Compare 
							left: Name 
								id: str = base
								ctx: Load 
							ops: list 
								element: Is 
							comparators: list 
								element: Name 
									id: str = js_undefined
									ctx: Load 
						body: Call 
							func: Attribute 
								value: Name 
									id: str = Math
									ctx: Load 
								attr: str = log
								ctx: Load 
							args: list 
								element: Name 
									id: str = x
									ctx: Load 
							keywords: list 
						orelse: BinOp 
							left: Call 
								func: Attribute 
									value: Name 
										id: str = Math
										ctx: Load 
									attr: str = log
									ctx: Load 
								args: list 
									element: Name 
										id: str = x
										ctx: Load 
								keywords: list 
							op: Div 
							right: Call 
								func: Attribute 
									value: Name 
										id: str = Math
										ctx: Load 
									attr: str = log
									ctx: Load 
								args: list 
									element: Name 
										id: str = base
										ctx: Load 
								keywords: list 
			decorator_list: list 
			returns: NoneType = None
		element: FunctionDef 
			name: str = log1p
			args: arguments 
				args: list 
					element: arg 
						arg: str = x
						annotation: NoneType = None
				vararg: NoneType = None
				kwonlyargs: list 
				kw_defaults: list 
				kwarg: NoneType = None
				defaults: list 
			body: list 
				element: Return 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = Math
								ctx: Load 
							attr: str = log
							ctx: Load 
						args: list 
							element: BinOp 
								left: Name 
									id: str = x
									ctx: Load 
								op: Add 
								right: Num 
									n: int = 1
						keywords: list 
			decorator_list: list 
			returns: NoneType = None
		element: FunctionDef 
			name: str = log2
			args: arguments 
				args: list 
					element: arg 
						arg: str = x
						annotation: NoneType = None
				vararg: NoneType = None
				kwonlyargs: list 
				kw_defaults: list 
				kwarg: NoneType = None
				defaults: list 
			body: list 
				element: Return 
					value: BinOp 
						left: Call 
							func: Attribute 
								value: Name 
									id: str = Math
									ctx: Load 
								attr: str = log
								ctx: Load 
							args: list 
								element: Name 
									id: str = x
									ctx: Load 
							keywords: list 
						op: Div 
						right: Attribute 
							value: Name 
								id: str = Math
								ctx: Load 
							attr: str = LN2
							ctx: Load 
			decorator_list: list 
			returns: NoneType = None
		element: FunctionDef 
			name: str = log10
			args: arguments 
				args: list 
					element: arg 
						arg: str = x
						annotation: NoneType = None
				vararg: NoneType = None
				kwonlyargs: list 
				kw_defaults: list 
				kwarg: NoneType = None
				defaults: list 
			body: list 
				element: Return 
					value: BinOp 
						left: Call 
							func: Attribute 
								value: Name 
									id: str = Math
									ctx: Load 
								attr: str = log
								ctx: Load 
							args: list 
								element: Name 
									id: str = x
									ctx: Load 
							keywords: list 
						op: Div 
						right: Attribute 
							value: Name 
								id: str = Math
								ctx: Load 
							attr: str = LN10
							ctx: Load 
			decorator_list: list 
			returns: NoneType = None
		element: Assign 
			targets: list 
				element: Name 
					id: str = pow
					ctx: Store 
			value: Attribute 
				value: Name 
					id: str = Math
					ctx: Load 
				attr: str = pow
				ctx: Load 
		element: Assign 
			targets: list 
				element: Name 
					id: str = sqrt
					ctx: Store 
			value: Attribute 
				value: Name 
					id: str = Math
					ctx: Load 
				attr: str = sqrt
				ctx: Load 
		element: Assign 
			targets: list 
				element: Name 
					id: str = sin
					ctx: Store 
			value: Attribute 
				value: Name 
					id: str = Math
					ctx: Load 
				attr: str = sin
				ctx: Load 
		element: Assign 
			targets: list 
				element: Name 
					id: str = cos
					ctx: Store 
			value: Attribute 
				value: Name 
					id: str = Math
					ctx: Load 
				attr: str = cos
				ctx: Load 
		element: Assign 
			targets: list 
				element: Name 
					id: str = tan
					ctx: Store 
			value: Attribute 
				value: Name 
					id: str = Math
					ctx: Load 
				attr: str = tan
				ctx: Load 
		element: Assign 
			targets: list 
				element: Name 
					id: str = asin
					ctx: Store 
			value: Attribute 
				value: Name 
					id: str = Math
					ctx: Load 
				attr: str = asin
				ctx: Load 
		element: Assign 
			targets: list 
				element: Name 
					id: str = acos
					ctx: Store 
			value: Attribute 
				value: Name 
					id: str = Math
					ctx: Load 
				attr: str = acos
				ctx: Load 
		element: Assign 
			targets: list 
				element: Name 
					id: str = atan
					ctx: Store 
			value: Attribute 
				value: Name 
					id: str = Math
					ctx: Load 
				attr: str = atan
				ctx: Load 
		element: Assign 
			targets: list 
				element: Name 
					id: str = atan2
					ctx: Store 
			value: Attribute 
				value: Name 
					id: str = Math
					ctx: Load 
				attr: str = atan2
				ctx: Load 
		element: Assign 
			targets: list 
				element: Name 
					id: str = hypot
					ctx: Store 
			value: Attribute 
				value: Name 
					id: str = Math
					ctx: Load 
				attr: str = hypot
				ctx: Load 
		element: FunctionDef 
			name: str = degrees
			args: arguments 
				args: list 
					element: arg 
						arg: str = x
						annotation: NoneType = None
				vararg: NoneType = None
				kwonlyargs: list 
				kw_defaults: list 
				kwarg: NoneType = None
				defaults: list 
			body: list 
				element: Return 
					value: BinOp 
						left: BinOp 
							left: Name 
								id: str = x
								ctx: Load 
							op: Mult 
							right: Num 
								n: int = 180
						op: Div 
						right: Attribute 
							value: Name 
								id: str = Math
								ctx: Load 
							attr: str = PI
							ctx: Load 
			decorator_list: list 
			returns: NoneType = None
		element: FunctionDef 
			name: str = radians
			args: arguments 
				args: list 
					element: arg 
						arg: str = x
						annotation: NoneType = None
				vararg: NoneType = None
				kwonlyargs: list 
				kw_defaults: list 
				kwarg: NoneType = None
				defaults: list 
			body: list 
				element: Return 
					value: BinOp 
						left: BinOp 
							left: Name 
								id: str = x
								ctx: Load 
							op: Mult 
							right: Attribute 
								value: Name 
									id: str = Math
									ctx: Load 
								attr: str = PI
								ctx: Load 
						op: Div 
						right: Num 
							n: int = 180
			decorator_list: list 
			returns: NoneType = None
		element: Assign 
			targets: list 
				element: Name 
					id: str = sinh
					ctx: Store 
			value: Attribute 
				value: Name 
					id: str = Math
					ctx: Load 
				attr: str = sinh
				ctx: Load 
		element: Assign 
			targets: list 
				element: Name 
					id: str = cosh
					ctx: Store 
			value: Attribute 
				value: Name 
					id: str = Math
					ctx: Load 
				attr: str = cosh
				ctx: Load 
		element: Assign 
			targets: list 
				element: Name 
					id: str = tanh
					ctx: Store 
			value: Attribute 
				value: Name 
					id: str = Math
					ctx: Load 
				attr: str = tanh
				ctx: Load 
		element: Assign 
			targets: list 
				element: Name 
					id: str = asinh
					ctx: Store 
			value: Attribute 
				value: Name 
					id: str = Math
					ctx: Load 
				attr: str = asinh
				ctx: Load 
		element: Assign 
			targets: list 
				element: Name 
					id: str = acosh
					ctx: Store 
			value: Attribute 
				value: Name 
					id: str = Math
					ctx: Load 
				attr: str = acosh
				ctx: Load 
		element: Assign 
			targets: list 
				element: Name 
					id: str = atanh
					ctx: Store 
			value: Attribute 
				value: Name 
					id: str = Math
					ctx: Load 
				attr: str = atanh
				ctx: Load 
		element: Assign 
			targets: list 
				element: Name 
					id: str = floor
					ctx: Store 
			value: Attribute 
				value: Name 
					id: str = Math
					ctx: Load 
				attr: str = floor
				ctx: Load 
		element: Assign 
			targets: list 
				element: Name 
					id: str = ceil
					ctx: Store 
			value: Attribute 
				value: Name 
					id: str = Math
					ctx: Load 
				attr: str = ceil
				ctx: Load 
		element: Assign 
			targets: list 
				element: Name 
					id: str = trunc
					ctx: Store 
			value: Attribute 
				value: Name 
					id: str = Math
					ctx: Load 
				attr: str = trunc
				ctx: Load 
		element: Assign 
			targets: list 
				element: Name 
					id: str = isnan
					ctx: Store 
			value: Name 
				id: str = js_isNaN
				ctx: Load 
		element: Assign 
			targets: list 
				element: Name 
					id: str = inf
					ctx: Store 
			value: Name 
				id: str = js_Infinity
				ctx: Load 
		element: Assign 
			targets: list 
				element: Name 
					id: str = nan
					ctx: Store 
			value: Name 
				id: str = js_NaN
				ctx: Load 