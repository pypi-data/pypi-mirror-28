
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDrightNOTrightMLSrightMLS_ENDINT FLOAT ID CID SEP STRING MLS MLS_END CMP_OP REGEX REL AND AS DEFINED DICT END ENTITY EXTENDS FALSE FOR IMPLEMENT IMPLEMENTATION IMPORT IN INDEX IS MATCHING NOT NULL OR PARENTS TRUE TYPEDEF UNDEF USING WHENmain : top_stmt mainmain : top_stmttop_stmt : mls \n                | entity_def\n                | implement_def\n                | implementation_def\n                | relation\n                | statement\n                | typedef\n                | index\n                | import import : IMPORT ns_refimport : IMPORT ns_ref AS IDstatement : assign\n                | constructor\n                | function_call\n                | forstmt_list : statement stmt_liststmt_list : statementassign : var_ref \'=\' operandfor : FOR ID IN operand \':\' blockentity_def : ENTITY CID \':\' entity_body_outer entity_def : ENTITY ID \':\' entity_body_outer entity_def : ENTITY CID EXTENDS class_ref_list \':\' entity_body_outer entity_def : ENTITY ID EXTENDS class_ref_list \':\' entity_body_outer entity_body_outer : mls entity_body ENDentity_body_outer : entity_body END entity_body_outer : END entity_body_outer : mls END entity_body : entity_body attr entity_body : attrattr_type : ns_refattr_type : ns_ref \'?\'attr : attr_type IDattr : attr_type ID \'=\' constantattr : attr_type ID \'=\' UNDEFattr_type_multi : ns_ref \'[\' \']\'attr_type_multi : ns_ref \'[\' \']\' \'?\'attr : attr_type_multi IDattr : attr_type_multi ID \'=\' constant_listattr : attr_type_multi ID \'=\' UNDEFattr : attr_type_multi ID \'=\' NULLattr : DICT IDattr : DICT ID \'=\' map_defattr : DICT ID \'=\' NULLattr : DICT \'?\' IDattr : DICT \'?\'  ID \'=\' map_defattr : DICT \'?\'  ID \'=\' NULLimplement_def : IMPLEMENT class_ref USING PARENTSimplement_def : IMPLEMENT class_ref USING ns_listimplement_def : IMPLEMENT class_ref USING ns_list WHEN conditionimplement_def : IMPLEMENT class_ref USING ns_list mlsimplement_def : IMPLEMENT class_ref USING PARENTS mlsimplement_def : IMPLEMENT class_ref USING ns_list WHEN condition mlsimplementation_def : IMPLEMENTATION ID FOR class_ref implementationimplementation : \':\' mls blockimplementation : \':\' blockblock : stmt_list ENDblock : ENDrelation : class_ref ID multi REL multi class_ref IDrelation : class_ref ID multi REL multi class_ref ID mlsrelation : relationnew mlsrelation : relationnewrelationnew : class_ref \'.\' ID multi REL class_ref \'.\' ID multirelationnew : class_ref \'.\' ID multi REL class_refrelationnew : class_ref \'.\' ID multi operand_list class_ref \'.\' ID multirelationnew : class_ref \'.\' ID multi operand_list class_refmulti : \'[\' INT \']\' multi : \'[\' INT \':\' \']\' multi : \'[\' INT \':\' INT \']\' multi : \'[\'  \':\' INT \']\' typedef : typedef_innertypedef : typedef_inner mlstypedef_inner : TYPEDEF ID AS ns_ref MATCHING REGEX\n                | TYPEDEF ID AS ns_ref MATCHING conditiontypedef_inner : TYPEDEF CID AS constructorindex : INDEX class_ref \'(\' id_list \')\' condition : \'(\' condition \')\'condition : operand CMP_OP operand\n                | operand IN list_def\n                | operand IN var_ref\n                | condition AND condition\n                | condition OR condition condition : function_call\n                | var_refcondition : NOT conditioncondition : var_ref \'.\' ID IS DEFINEDcondition : ID IS DEFINEDcondition : TRUE\n                | FALSE operand : constant\n              | function_call\n              | constructor\n              | list_def\n              | map_def\n              | var_ref\n              | index_lookup constructor : class_ref \'(\' param_list \')\'  function_call : ns_ref \'(\' operand_list \')\' list_def : \'[\' operand_list \']\'pair_list : STRING \':\' operand \',\' pair_listpair_list : STRING \':\' operandpair_list :  map_def : \'{\' pair_list \'}\' map_def : \'{\' \'}\' index_lookup : class_ref \'[\' param_list \']\' index_lookup : attr_ref \'[\' param_list \']\' constant : INT\n    | FLOAT\n    | mls\n     constant : NULL\n     constant : REGEX\n     constant : TRUE\n     constant : FALSE\n     constant : STRING  constant_list : \'[\' constants \']\' constants : constantconstants : constants : constant \',\' constantsparam_list : ID \'=\' operand \',\' param_listparam_list : ID \'=\' operandparam_list : operand_list : operand \',\' operand_listoperand_list : operandoperand_list :ns_list : ns_ref \',\' ns_listns_list : ns_refvar_ref : attr_refattr_ref : var_ref \'.\' IDvar_ref : ns_refclass_ref : CIDclass_ref : ns_ref SEP CIDclass_ref_list : class_ref \',\' class_ref_listclass_ref_list : var_ref \',\' class_ref_listclass_ref_list : class_refclass_ref_list : var_refns_ref : ns_ref SEP IDns_ref : IDid_list : ID "," id_listid_list : IDmls : MLS_ENDmls : MLS mls'
    
_lr_action_items = {'MLS_END':([0,2,3,4,5,6,7,8,9,10,11,12,13,15,16,21,22,23,24,25,26,32,34,44,45,47,49,50,54,56,65,69,70,71,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,90,92,93,94,97,100,110,112,113,114,118,119,120,125,127,128,132,136,139,140,148,151,152,153,154,157,163,164,166,170,171,172,174,175,176,181,184,185,186,188,189,190,191,192,193,194,197,198,199,200,203,205,208,210,212,213,214,220,225,226,227,229,232,234,235,239,240,247,248,249,250,251,252,253,254,255,256,261,263,264,266,],[12,12,-3,-4,-5,-6,-7,-8,-9,-10,-11,-141,12,-131,-138,12,-14,-15,-16,-17,12,-128,-142,-62,-73,-12,12,12,12,12,12,-132,-137,-130,-91,-92,-93,-94,-95,-96,-97,-108,-109,-110,-111,-112,-113,-114,-115,12,-128,-20,-129,-22,-28,-23,12,12,-127,12,-98,12,-13,-99,12,-105,-76,-29,-27,12,12,-53,12,-52,-68,-55,12,-77,-100,-104,12,12,-26,12,-24,-25,12,12,-85,-84,12,-138,-89,-90,-126,-69,-71,-65,-67,-57,-59,-21,-106,-107,-74,-75,12,-54,12,12,12,-86,12,-70,-56,-58,-82,-83,-78,-79,-80,-81,-130,-129,-88,-61,12,-64,-66,-87,]),'MLS':([0,2,3,4,5,6,7,8,9,10,11,12,13,15,16,21,22,23,24,25,26,32,34,44,45,47,49,50,54,56,65,69,70,71,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,90,92,93,94,97,100,110,112,113,114,118,119,120,125,127,128,132,136,139,140,148,151,152,153,154,157,163,164,166,170,171,172,174,175,176,181,184,185,186,188,189,190,191,192,193,194,197,198,199,200,203,205,208,210,212,213,214,220,225,226,227,229,232,234,235,239,240,247,248,249,250,251,252,253,254,255,256,261,263,264,266,],[13,13,-3,-4,-5,-6,-7,-8,-9,-10,-11,-141,13,-131,-138,13,-14,-15,-16,-17,13,-128,-142,-62,-73,-12,13,13,13,13,13,-132,-137,-130,-91,-92,-93,-94,-95,-96,-97,-108,-109,-110,-111,-112,-113,-114,-115,13,-128,-20,-129,-22,-28,-23,13,13,-127,13,-98,13,-13,-99,13,-105,-76,-29,-27,13,13,-53,13,-52,-68,-55,13,-77,-100,-104,13,13,-26,13,-24,-25,13,13,-85,-84,13,-138,-89,-90,-126,-69,-71,-65,-67,-57,-59,-21,-106,-107,-74,-75,13,-54,13,13,13,-86,13,-70,-56,-58,-82,-83,-78,-79,-80,-81,-130,-129,-88,-61,13,-64,-66,-87,]),'ENTITY':([0,2,3,4,5,6,7,8,9,10,11,12,15,16,21,22,23,24,25,26,32,34,44,45,47,69,70,71,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,92,93,94,97,100,110,112,113,114,119,125,127,132,136,139,140,152,154,157,163,166,170,171,175,181,184,185,188,189,191,192,193,194,197,198,199,200,203,205,208,210,212,213,214,225,232,234,235,239,240,247,248,249,250,251,252,253,254,255,256,263,264,266,],[14,14,-3,-4,-5,-6,-7,-8,-9,-10,-11,-141,-131,-138,-63,-14,-15,-16,-17,-72,-128,-142,-62,-73,-12,-132,-137,-130,-91,-92,-93,-94,-95,-96,-97,-108,-109,-110,-111,-112,-113,-114,-115,-128,-20,-129,-22,-28,-23,-49,-50,-127,-98,-13,-99,-105,-76,-29,-27,-53,-52,-68,-55,-77,-100,-104,-26,-24,-25,-51,-85,-84,-138,-89,-90,-126,-69,-71,-65,-67,-57,-59,-21,-106,-107,-74,-75,-54,-86,-60,-70,-56,-58,-82,-83,-78,-79,-80,-81,-130,-129,-88,-61,-64,-66,-87,]),'IMPLEMENT':([0,2,3,4,5,6,7,8,9,10,11,12,15,16,21,22,23,24,25,26,32,34,44,45,47,69,70,71,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,92,93,94,97,100,110,112,113,114,119,125,127,132,136,139,140,152,154,157,163,166,170,171,175,181,184,185,188,189,191,192,193,194,197,198,199,200,203,205,208,210,212,213,214,225,232,234,235,239,240,247,248,249,250,251,252,253,254,255,256,263,264,266,],[17,17,-3,-4,-5,-6,-7,-8,-9,-10,-11,-141,-131,-138,-63,-14,-15,-16,-17,-72,-128,-142,-62,-73,-12,-132,-137,-130,-91,-92,-93,-94,-95,-96,-97,-108,-109,-110,-111,-112,-113,-114,-115,-128,-20,-129,-22,-28,-23,-49,-50,-127,-98,-13,-99,-105,-76,-29,-27,-53,-52,-68,-55,-77,-100,-104,-26,-24,-25,-51,-85,-84,-138,-89,-90,-126,-69,-71,-65,-67,-57,-59,-21,-106,-107,-74,-75,-54,-86,-60,-70,-56,-58,-82,-83,-78,-79,-80,-81,-130,-129,-88,-61,-64,-66,-87,]),'IMPLEMENTATION':([0,2,3,4,5,6,7,8,9,10,11,12,15,16,21,22,23,24,25,26,32,34,44,45,47,69,70,71,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,92,93,94,97,100,110,112,113,114,119,125,127,132,136,139,140,152,154,157,163,166,170,171,175,181,184,185,188,189,191,192,193,194,197,198,199,200,203,205,208,210,212,213,214,225,232,234,235,239,240,247,248,249,250,251,252,253,254,255,256,263,264,266,],[19,19,-3,-4,-5,-6,-7,-8,-9,-10,-11,-141,-131,-138,-63,-14,-15,-16,-17,-72,-128,-142,-62,-73,-12,-132,-137,-130,-91,-92,-93,-94,-95,-96,-97,-108,-109,-110,-111,-112,-113,-114,-115,-128,-20,-129,-22,-28,-23,-49,-50,-127,-98,-13,-99,-105,-76,-29,-27,-53,-52,-68,-55,-77,-100,-104,-26,-24,-25,-51,-85,-84,-138,-89,-90,-126,-69,-71,-65,-67,-57,-59,-21,-106,-107,-74,-75,-54,-86,-60,-70,-56,-58,-82,-83,-78,-79,-80,-81,-130,-129,-88,-61,-64,-66,-87,]),'INDEX':([0,2,3,4,5,6,7,8,9,10,11,12,15,16,21,22,23,24,25,26,32,34,44,45,47,69,70,71,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,92,93,94,97,100,110,112,113,114,119,125,127,132,136,139,140,152,154,157,163,166,170,171,175,181,184,185,188,189,191,192,193,194,197,198,199,200,203,205,208,210,212,213,214,225,232,234,235,239,240,247,248,249,250,251,252,253,254,255,256,263,264,266,],[27,27,-3,-4,-5,-6,-7,-8,-9,-10,-11,-141,-131,-138,-63,-14,-15,-16,-17,-72,-128,-142,-62,-73,-12,-132,-137,-130,-91,-92,-93,-94,-95,-96,-97,-108,-109,-110,-111,-112,-113,-114,-115,-128,-20,-129,-22,-28,-23,-49,-50,-127,-98,-13,-99,-105,-76,-29,-27,-53,-52,-68,-55,-77,-100,-104,-26,-24,-25,-51,-85,-84,-138,-89,-90,-126,-69,-71,-65,-67,-57,-59,-21,-106,-107,-74,-75,-54,-86,-60,-70,-56,-58,-82,-83,-78,-79,-80,-81,-130,-129,-88,-61,-64,-66,-87,]),'IMPORT':([0,2,3,4,5,6,7,8,9,10,11,12,15,16,21,22,23,24,25,26,32,34,44,45,47,69,70,71,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,92,93,94,97,100,110,112,113,114,119,125,127,132,136,139,140,152,154,157,163,166,170,171,175,181,184,185,188,189,191,192,193,194,197,198,199,200,203,205,208,210,212,213,214,225,232,234,235,239,240,247,248,249,250,251,252,253,254,255,256,263,264,266,],[28,28,-3,-4,-5,-6,-7,-8,-9,-10,-11,-141,-131,-138,-63,-14,-15,-16,-17,-72,-128,-142,-62,-73,-12,-132,-137,-130,-91,-92,-93,-94,-95,-96,-97,-108,-109,-110,-111,-112,-113,-114,-115,-128,-20,-129,-22,-28,-23,-49,-50,-127,-98,-13,-99,-105,-76,-29,-27,-53,-52,-68,-55,-77,-100,-104,-26,-24,-25,-51,-85,-84,-138,-89,-90,-126,-69,-71,-65,-67,-57,-59,-21,-106,-107,-74,-75,-54,-86,-60,-70,-56,-58,-82,-83,-78,-79,-80,-81,-130,-129,-88,-61,-64,-66,-87,]),'CID':([0,2,3,4,5,6,7,8,9,10,11,12,14,15,16,17,21,22,23,24,25,26,27,31,32,34,44,45,47,48,49,50,55,57,64,65,69,70,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,90,92,93,94,96,97,100,110,112,113,114,118,119,120,125,126,127,128,132,136,139,140,149,150,152,153,154,156,157,160,161,163,164,165,166,168,170,171,172,174,175,181,184,185,186,188,189,190,191,192,193,194,197,198,199,200,202,203,205,206,208,210,212,213,214,225,226,227,229,232,234,235,239,240,247,248,249,250,251,252,253,254,255,256,263,264,266,],[15,15,-3,-4,-5,-6,-7,-8,-9,-10,-11,-141,35,-131,-138,15,-63,-14,-15,-16,-17,-72,15,53,-128,-142,-62,-73,-12,69,15,15,15,15,15,15,-132,-137,-130,-124,-91,-92,-93,-94,-95,-96,-97,-108,-109,-110,-111,-112,-113,-114,-115,15,-128,-20,-129,15,-22,-28,-23,-49,-50,-127,15,-98,15,-13,69,-99,15,-105,-76,-29,-27,15,15,-53,15,-52,15,-68,15,15,-55,15,15,-77,-123,-100,-104,15,15,-26,-24,-25,-51,15,-85,-84,15,-138,-89,-90,-126,-69,-71,-65,-67,15,-57,-59,15,-21,-106,-107,-74,-75,-54,15,15,15,-86,-60,-70,-56,-58,-82,-83,-78,-79,-80,-81,-130,-129,-88,-61,-64,-66,-87,]),'FOR':([0,2,3,4,5,6,7,8,9,10,11,12,15,16,21,22,23,24,25,26,32,34,42,44,45,47,69,70,71,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,92,93,94,97,100,110,112,113,114,119,125,127,132,136,139,140,152,154,157,163,164,165,166,170,171,175,181,184,185,188,189,191,192,193,194,197,198,199,200,202,203,205,206,208,210,212,213,214,225,232,234,235,239,240,247,248,249,250,251,252,253,254,255,256,263,264,266,],[20,20,-3,-4,-5,-6,-7,-8,-9,-10,-11,-141,-131,-138,-63,-14,-15,-16,-17,-72,-128,-142,64,-62,-73,-12,-132,-137,-130,-91,-92,-93,-94,-95,-96,-97,-108,-109,-110,-111,-112,-113,-114,-115,-128,-20,-129,-22,-28,-23,-49,-50,-127,-98,-13,-99,-105,-76,-29,-27,-53,-52,-68,-55,20,20,-77,-100,-104,-26,-24,-25,-51,-85,-84,-138,-89,-90,-126,-69,-71,-65,-67,20,-57,-59,20,-21,-106,-107,-74,-75,-54,-86,-60,-70,-56,-58,-82,-83,-78,-79,-80,-81,-130,-129,-88,-61,-64,-66,-87,]),'TYPEDEF':([0,2,3,4,5,6,7,8,9,10,11,12,15,16,21,22,23,24,25,26,32,34,44,45,47,69,70,71,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,92,93,94,97,100,110,112,113,114,119,125,127,132,136,139,140,152,154,157,163,166,170,171,175,181,184,185,188,189,191,192,193,194,197,198,199,200,203,205,208,210,212,213,214,225,232,234,235,239,240,247,248,249,250,251,252,253,254,255,256,263,264,266,],[31,31,-3,-4,-5,-6,-7,-8,-9,-10,-11,-141,-131,-138,-63,-14,-15,-16,-17,-72,-128,-142,-62,-73,-12,-132,-137,-130,-91,-92,-93,-94,-95,-96,-97,-108,-109,-110,-111,-112,-113,-114,-115,-128,-20,-129,-22,-28,-23,-49,-50,-127,-98,-13,-99,-105,-76,-29,-27,-53,-52,-68,-55,-77,-100,-104,-26,-24,-25,-51,-85,-84,-138,-89,-90,-126,-69,-71,-65,-67,-57,-59,-21,-106,-107,-74,-75,-54,-86,-60,-70,-56,-58,-82,-83,-78,-79,-80,-81,-130,-129,-88,-61,-64,-66,-87,]),'ID':([0,2,3,4,5,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,31,32,34,40,41,44,45,47,48,49,50,51,54,55,56,57,58,64,65,66,67,68,69,70,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,90,92,93,94,95,96,97,98,99,100,101,102,103,104,105,110,112,113,114,118,119,120,125,126,127,128,129,132,134,136,138,139,140,141,142,143,144,145,146,148,149,150,151,152,153,154,155,156,157,160,161,163,164,165,166,167,168,170,171,172,174,175,179,180,181,184,185,186,188,189,190,191,192,193,194,195,197,198,199,200,201,202,203,205,206,208,210,212,213,214,215,216,217,218,219,221,222,224,225,226,227,229,230,231,232,234,235,236,237,239,240,245,246,247,248,249,250,251,252,253,254,255,256,260,263,264,266,],[16,16,-3,-4,-5,-6,-7,-8,-9,-10,-11,-141,36,-131,-138,16,39,42,43,-63,-14,-15,-16,-17,-72,16,16,52,-128,-142,61,63,-62,-73,-12,70,16,16,94,16,16,16,16,16,16,16,124,125,70,-132,-137,-130,-124,-91,-92,-93,-94,-95,-96,-97,-108,-109,-110,-111,-112,-113,-114,-115,16,-128,-20,-129,16,16,-22,16,16,-28,-31,142,143,144,-32,-23,-49,-50,-127,16,-98,16,-13,70,-99,16,63,-105,63,-76,16,-29,-27,-30,-34,-39,-43,179,-33,16,16,16,16,-53,191,-52,16,16,-68,16,16,-55,16,16,-77,124,-123,-100,-104,16,191,-26,-46,-37,-24,-25,-51,191,-85,-84,191,-138,-89,-90,-126,234,-69,-71,-65,-67,63,16,-57,-59,16,-21,-106,-107,-74,-75,-35,-36,-40,-41,-42,-44,-45,-38,-54,191,191,16,16,254,-86,-60,-70,257,258,-56,-58,-47,-48,-82,-83,-78,-79,-80,-81,-130,-129,-88,-61,-116,-64,-66,-87,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,15,16,21,22,23,24,25,26,32,33,34,44,45,47,69,70,71,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,92,93,94,97,100,110,112,113,114,119,125,127,132,136,139,140,152,154,157,163,166,170,171,175,181,184,185,188,189,191,192,193,194,197,198,199,200,203,205,208,210,212,213,214,225,232,234,235,239,240,247,248,249,250,251,252,253,254,255,256,263,264,266,],[0,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-141,-131,-138,-63,-14,-15,-16,-17,-72,-128,-1,-142,-62,-73,-12,-132,-137,-130,-91,-92,-93,-94,-95,-96,-97,-108,-109,-110,-111,-112,-113,-114,-115,-128,-20,-129,-22,-28,-23,-49,-50,-127,-98,-13,-99,-105,-76,-29,-27,-53,-52,-68,-55,-77,-100,-104,-26,-24,-25,-51,-85,-84,-138,-89,-90,-126,-69,-71,-65,-67,-57,-59,-21,-106,-107,-74,-75,-54,-86,-60,-70,-56,-58,-82,-83,-78,-79,-80,-81,-130,-129,-88,-61,-64,-66,-87,]),',':([12,15,16,32,34,69,70,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,92,94,107,108,109,114,119,124,127,132,162,170,171,210,211,212,244,],[-141,-131,-138,-128,-142,-132,-137,-130,128,-91,-92,-93,-94,-95,-96,-97,-108,-109,-110,-111,-112,-113,-114,-115,-128,-129,149,150,-130,155,-98,167,-99,-105,201,-100,-104,-106,242,-107,261,]),')':([12,16,32,34,41,49,62,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,92,94,119,123,124,127,128,132,162,168,170,171,188,189,191,192,193,201,209,210,212,228,232,238,247,248,249,250,251,252,253,254,255,266,],[-141,-138,-128,-142,-122,-125,119,-137,-130,127,-124,-91,-92,-93,-94,-95,-96,-97,-108,-109,-110,-111,-112,-113,-114,-115,-128,-129,-98,166,-140,-99,-125,-105,-121,-123,-100,-104,-85,-84,-138,-89,-90,-122,-139,-106,-107,249,-86,-120,-82,-83,-78,-79,-80,-81,-130,-129,-88,-87,]),'END':([12,16,22,23,24,25,34,54,56,70,71,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,92,93,94,98,99,101,119,127,132,138,141,142,143,144,148,151,164,165,170,171,179,202,204,205,206,208,210,212,215,216,217,218,219,221,222,240,241,245,246,260,],[-141,-138,-14,-15,-16,-17,-142,100,100,-137,-130,-91,-92,-93,-94,-95,-96,-97,-108,-109,-110,-111,-112,-113,-114,-115,-128,-20,-129,139,140,-31,-98,-99,-105,175,-30,-34,-39,-43,100,100,205,205,-100,-104,-46,205,240,-59,-19,-21,-106,-107,-35,-36,-40,-41,-42,-44,-45,-58,-18,-47,-48,-116,]),'DICT':([12,34,54,56,81,82,83,84,85,86,87,88,98,99,101,132,138,141,142,143,144,148,151,171,179,215,216,217,218,219,221,222,245,246,260,],[-141,-142,104,104,-108,-109,-110,-111,-112,-113,-114,-115,104,104,-31,-105,104,-30,-34,-39,-43,104,104,-104,-46,-35,-36,-40,-41,-42,-44,-45,-47,-48,-116,]),':':([12,15,16,32,34,35,36,60,69,70,71,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,92,94,106,107,108,109,111,116,119,121,122,127,132,133,170,171,182,183,210,212,],[-141,-131,-138,-128,-142,54,56,117,-132,-137,-130,-91,-92,-93,-94,-95,-96,-97,-108,-109,-110,-111,-112,-113,-114,-115,-128,-129,148,-135,-136,-130,151,158,-98,164,165,-99,-105,172,-100,-104,-133,-134,-106,-107,]),']':([12,16,34,70,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,90,92,94,116,119,127,128,129,130,132,134,147,158,159,162,168,169,170,171,173,196,201,210,212,220,238,243,244,261,265,],[-141,-138,-142,-137,-130,-124,-91,-92,-93,-94,-95,-96,-97,-108,-109,-110,-111,-112,-113,-114,-115,-125,-128,-129,157,-98,-99,-125,-122,170,-105,-122,180,197,198,-121,-123,210,-100,-104,212,235,-122,-106,-107,-118,-120,260,-117,-118,-119,]),'CMP_OP':([12,34,70,71,74,76,77,78,80,81,82,83,84,85,88,92,119,127,132,170,171,187,188,189,191,192,193,210,212,213,254,],[-141,-142,-137,-130,-91,-93,-94,-95,-97,-108,-109,-110,-111,-112,-115,-128,-98,-99,-105,-100,-104,229,-96,-92,-138,-113,-114,-106,-107,-112,-129,]),'IN':([12,34,43,70,71,74,76,77,78,80,81,82,83,84,85,88,92,119,127,132,170,171,187,188,189,191,192,193,210,212,213,254,],[-141,-142,65,-137,-130,-91,-93,-94,-95,-97,-108,-109,-110,-111,-112,-115,-128,-98,-99,-105,-100,-104,230,-96,-92,-138,-113,-114,-106,-107,-112,-129,]),'}':([12,16,34,70,71,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,91,92,94,119,127,131,132,170,171,210,211,212,242,259,],[-141,-138,-142,-137,-130,-91,-92,-93,-94,-95,-96,-97,-108,-109,-110,-111,-112,-113,-114,-115,132,-128,-129,-98,-99,171,-105,-100,-104,-106,-102,-107,-103,-101,]),'AND':([12,16,32,34,70,71,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,92,94,119,127,132,170,171,185,188,189,191,192,193,210,212,214,228,232,247,248,249,250,251,252,253,254,255,266,],[-141,-138,-128,-142,-137,-130,-91,-92,-93,-94,-95,-96,-97,-108,-109,-110,-111,-112,-113,-114,-115,-128,-129,-98,-99,-105,-100,-104,226,-85,-84,-138,-89,-90,-106,-107,226,226,-86,-82,226,-78,-79,-80,-81,-130,-129,-88,-87,]),'OR':([12,16,32,34,70,71,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,92,94,119,127,132,170,171,185,188,189,191,192,193,210,212,214,228,232,247,248,249,250,251,252,253,254,255,266,],[-141,-138,-128,-142,-137,-130,-91,-92,-93,-94,-95,-96,-97,-108,-109,-110,-111,-112,-113,-114,-115,-128,-129,-98,-99,-105,-100,-104,227,-85,-84,-138,-89,-90,-106,-107,227,227,-86,-82,-83,-78,-79,-80,-81,-130,-129,-88,-87,]),'.':([15,16,18,29,30,32,69,70,71,79,92,94,108,109,188,191,199,200,207,252,253,254,],[-131,-138,40,-130,51,-128,-132,-137,-130,51,-128,-129,51,-130,231,-138,236,237,-130,51,-130,-129,]),'(':([15,16,18,29,46,69,70,71,89,137,153,174,186,190,191,207,226,227,],[-131,-138,41,49,66,-132,-137,49,41,41,186,186,186,186,-138,49,186,186,]),'USING':([15,37,69,],[-131,58,-132,]),'[':([15,16,39,49,50,61,65,69,70,89,90,92,94,105,115,118,120,128,153,157,172,174,177,186,190,197,198,226,227,229,230,235,254,257,258,],[-131,-138,60,90,90,60,90,-132,-137,129,90,134,-129,147,60,90,90,90,90,-68,90,90,220,90,90,-69,-71,90,90,90,90,-70,-129,60,60,]),'SEP':([16,29,38,47,70,71,105,109,114,135,191,207,253,],[-138,48,48,68,-137,126,68,48,68,68,-138,48,68,]),'=':([16,29,30,32,63,70,94,142,143,144,179,207,],[-138,-130,50,-128,120,-137,-129,176,177,178,223,-130,]),'AS':([16,47,52,53,70,],[-138,67,95,96,-137,]),'?':([16,70,104,105,180,],[-138,-137,145,146,224,]),'WHEN':([16,70,113,114,194,],[-138,-137,153,-127,-126,]),'MATCHING':([16,70,135,],[-138,-137,174,]),'EXTENDS':([35,36,],[55,57,]),'INT':([49,50,60,65,90,117,118,120,128,153,157,158,172,174,176,186,190,197,198,220,226,227,229,235,261,],[81,81,116,81,81,159,81,81,81,81,-68,196,81,81,81,81,81,-69,-71,81,81,81,81,-70,81,]),'FLOAT':([49,50,65,90,118,120,128,153,157,172,174,176,186,190,197,198,220,226,227,229,235,261,],[82,82,82,82,82,82,82,82,-68,82,82,82,82,82,-69,-71,82,82,82,82,-70,82,]),'NULL':([49,50,65,90,118,120,128,153,157,172,174,176,177,178,186,190,197,198,220,223,226,227,229,235,261,],[84,84,84,84,84,84,84,84,-68,84,84,84,219,222,84,84,-69,-71,84,246,84,84,84,-70,84,]),'REGEX':([49,50,65,90,118,120,128,153,157,172,174,176,186,190,197,198,220,226,227,229,235,261,],[85,85,85,85,85,85,85,85,-68,85,213,85,85,85,-69,-71,85,85,85,85,-70,85,]),'TRUE':([49,50,65,90,118,120,128,153,157,172,174,176,186,190,197,198,220,226,227,229,235,261,],[86,86,86,86,86,86,86,192,-68,86,192,86,192,192,-69,-71,86,192,192,86,-70,86,]),'FALSE':([49,50,65,90,118,120,128,153,157,172,174,176,186,190,197,198,220,226,227,229,235,261,],[87,87,87,87,87,87,87,193,-68,87,193,87,193,193,-69,-71,87,193,193,87,-70,87,]),'STRING':([49,50,65,90,91,118,120,128,153,157,172,174,176,186,190,197,198,220,226,227,229,235,242,261,],[88,88,88,88,133,88,88,88,88,-68,88,88,88,88,88,-69,-71,88,88,88,88,-70,133,88,]),'{':([49,50,65,90,118,120,128,153,157,172,174,178,186,190,197,198,223,226,227,229,235,],[91,91,91,91,91,91,91,91,-68,91,91,91,91,91,-69,-71,91,91,91,91,-70,]),'PARENTS':([58,],[112,]),'REL':([59,118,157,197,198,235,],[115,160,-68,-69,-71,-70,]),'NOT':([153,174,186,190,226,227,],[190,190,190,190,190,190,]),'UNDEF':([176,177,],[216,218,]),'IS':([191,254,],[233,262,]),'DEFINED':([233,262,],[255,266,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'main':([0,2,],[1,33,]),'top_stmt':([0,2,],[2,2,]),'mls':([0,2,13,21,26,49,50,54,56,65,90,112,113,118,120,128,148,151,153,164,172,174,176,185,186,190,220,226,227,229,234,261,],[3,3,34,44,45,83,83,98,98,83,83,152,154,83,83,83,98,98,83,202,83,83,83,225,83,83,83,83,83,83,256,83,]),'entity_def':([0,2,],[4,4,]),'implement_def':([0,2,],[5,5,]),'implementation_def':([0,2,],[6,6,]),'relation':([0,2,],[7,7,]),'statement':([0,2,164,165,202,206,],[8,8,206,206,206,206,]),'typedef':([0,2,],[9,9,]),'index':([0,2,],[10,10,]),'import':([0,2,],[11,11,]),'class_ref':([0,2,17,27,49,50,55,57,64,65,90,96,118,120,128,149,150,153,156,160,161,164,165,172,174,186,190,202,206,226,227,229,],[18,18,37,46,89,89,107,107,121,89,89,137,89,89,89,107,107,89,195,199,200,137,137,89,89,89,89,137,137,89,89,89,]),'relationnew':([0,2,],[21,21,]),'assign':([0,2,164,165,202,206,],[22,22,22,22,22,22,]),'constructor':([0,2,49,50,65,90,96,118,120,128,153,164,165,172,174,186,190,202,206,226,227,229,],[23,23,76,76,76,76,136,76,76,76,76,23,23,76,76,76,76,23,23,76,76,76,]),'function_call':([0,2,49,50,65,90,118,120,128,153,164,165,172,174,186,190,202,206,226,227,229,],[24,24,75,75,75,75,75,75,75,189,24,24,75,189,189,189,24,24,189,189,75,]),'for':([0,2,164,165,202,206,],[25,25,25,25,25,25,]),'typedef_inner':([0,2,],[26,26,]),'ns_ref':([0,2,17,27,28,49,50,54,55,56,57,58,64,65,90,95,96,98,99,118,120,128,138,148,149,150,151,153,155,156,160,161,164,165,172,174,186,190,202,206,226,227,229,230,],[29,29,38,38,47,71,71,105,109,105,109,114,38,71,71,135,38,105,105,71,71,71,105,105,109,109,105,71,114,38,38,38,207,207,71,71,71,71,207,207,71,71,71,253,]),'var_ref':([0,2,49,50,55,57,65,90,118,120,128,149,150,153,164,165,172,174,186,190,202,206,226,227,229,230,],[30,30,79,79,108,108,79,79,79,79,79,108,108,188,30,30,79,188,188,188,30,30,188,188,79,252,]),'attr_ref':([0,2,49,50,55,57,65,90,118,120,128,149,150,153,164,165,172,174,186,190,202,206,226,227,229,230,],[32,32,92,92,32,32,92,92,92,92,92,32,32,92,32,32,92,92,92,92,32,32,92,92,92,32,]),'multi':([39,61,115,257,258,],[59,118,156,263,264,]),'param_list':([41,129,134,201,],[62,169,173,238,]),'operand_list':([49,90,118,128,],[72,130,161,168,]),'operand':([49,50,65,90,118,120,128,153,172,174,186,190,226,227,229,],[73,93,122,73,73,162,73,187,211,187,187,187,187,187,250,]),'constant':([49,50,65,90,118,120,128,153,172,174,176,186,190,220,226,227,229,261,],[74,74,74,74,74,74,74,74,74,74,215,74,74,244,74,74,74,244,]),'list_def':([49,50,65,90,118,120,128,153,172,174,186,190,226,227,229,230,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,251,]),'map_def':([49,50,65,90,118,120,128,153,172,174,178,186,190,223,226,227,229,],[78,78,78,78,78,78,78,78,78,78,221,78,78,245,78,78,78,]),'index_lookup':([49,50,65,90,118,120,128,153,172,174,186,190,226,227,229,],[80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'entity_body_outer':([54,56,148,151,],[97,110,181,184,]),'entity_body':([54,56,98,148,151,],[99,99,138,99,99,]),'attr':([54,56,98,99,138,148,151,],[101,101,101,141,141,101,101,]),'attr_type':([54,56,98,99,138,148,151,],[102,102,102,102,102,102,102,]),'attr_type_multi':([54,56,98,99,138,148,151,],[103,103,103,103,103,103,103,]),'class_ref_list':([55,57,149,150,],[106,111,182,183,]),'ns_list':([58,155,],[113,194,]),'id_list':([66,167,],[123,209,]),'pair_list':([91,242,],[131,259,]),'implementation':([121,],[163,]),'condition':([153,174,186,190,226,227,],[185,214,228,232,247,248,]),'block':([164,165,202,],[203,208,239,]),'stmt_list':([164,165,202,206,],[204,204,204,241,]),'constant_list':([177,],[217,]),'constants':([220,261,],[243,265,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> main","S'",1,None,None,None),
  ('main -> top_stmt main','main',2,'p_main_collect','plyInmantaParser.py',91),
  ('main -> top_stmt','main',1,'p_main_term','plyInmantaParser.py',98),
  ('top_stmt -> mls','top_stmt',1,'p_top_stmt','plyInmantaParser.py',103),
  ('top_stmt -> entity_def','top_stmt',1,'p_top_stmt','plyInmantaParser.py',104),
  ('top_stmt -> implement_def','top_stmt',1,'p_top_stmt','plyInmantaParser.py',105),
  ('top_stmt -> implementation_def','top_stmt',1,'p_top_stmt','plyInmantaParser.py',106),
  ('top_stmt -> relation','top_stmt',1,'p_top_stmt','plyInmantaParser.py',107),
  ('top_stmt -> statement','top_stmt',1,'p_top_stmt','plyInmantaParser.py',108),
  ('top_stmt -> typedef','top_stmt',1,'p_top_stmt','plyInmantaParser.py',109),
  ('top_stmt -> index','top_stmt',1,'p_top_stmt','plyInmantaParser.py',110),
  ('top_stmt -> import','top_stmt',1,'p_top_stmt','plyInmantaParser.py',111),
  ('import -> IMPORT ns_ref','import',2,'p_import','plyInmantaParser.py',120),
  ('import -> IMPORT ns_ref AS ID','import',4,'p_import_1','plyInmantaParser.py',126),
  ('statement -> assign','statement',1,'p_stmt','plyInmantaParser.py',135),
  ('statement -> constructor','statement',1,'p_stmt','plyInmantaParser.py',136),
  ('statement -> function_call','statement',1,'p_stmt','plyInmantaParser.py',137),
  ('statement -> for','statement',1,'p_stmt','plyInmantaParser.py',138),
  ('stmt_list -> statement stmt_list','stmt_list',2,'p_stmt_list_collect','plyInmantaParser.py',152),
  ('stmt_list -> statement','stmt_list',1,'p_stmt_list_term','plyInmantaParser.py',159),
  ('assign -> var_ref = operand','assign',3,'p_assign','plyInmantaParser.py',164),
  ('for -> FOR ID IN operand : block','for',6,'p_for','plyInmantaParser.py',170),
  ('entity_def -> ENTITY CID : entity_body_outer','entity_def',4,'p_entity','plyInmantaParser.py',179),
  ('entity_def -> ENTITY ID : entity_body_outer','entity_def',4,'p_entity_err_1','plyInmantaParser.py',185),
  ('entity_def -> ENTITY CID EXTENDS class_ref_list : entity_body_outer','entity_def',6,'p_entity_extends','plyInmantaParser.py',191),
  ('entity_def -> ENTITY ID EXTENDS class_ref_list : entity_body_outer','entity_def',6,'p_entity_extends_err','plyInmantaParser.py',197),
  ('entity_body_outer -> mls entity_body END','entity_body_outer',3,'p_entity_body_outer','plyInmantaParser.py',203),
  ('entity_body_outer -> entity_body END','entity_body_outer',2,'p_entity_body_outer_1','plyInmantaParser.py',208),
  ('entity_body_outer -> END','entity_body_outer',1,'p_entity_body_outer_none','plyInmantaParser.py',213),
  ('entity_body_outer -> mls END','entity_body_outer',2,'p_entity_body_outer_4','plyInmantaParser.py',218),
  ('entity_body -> entity_body attr','entity_body',2,'p_entity_body_collect','plyInmantaParser.py',223),
  ('entity_body -> attr','entity_body',1,'p_entity_body','plyInmantaParser.py',229),
  ('attr_type -> ns_ref','attr_type',1,'p_attribute_type','plyInmantaParser.py',234),
  ('attr_type -> ns_ref ?','attr_type',2,'p_attribute_type_opt','plyInmantaParser.py',239),
  ('attr -> attr_type ID','attr',2,'p_attr','plyInmantaParser.py',244),
  ('attr -> attr_type ID = constant','attr',4,'p_attr_cte','plyInmantaParser.py',251),
  ('attr -> attr_type ID = UNDEF','attr',4,'p_attr_undef','plyInmantaParser.py',258),
  ('attr_type_multi -> ns_ref [ ]','attr_type_multi',3,'p_attribute_type_multi','plyInmantaParser.py',265),
  ('attr_type_multi -> ns_ref [ ] ?','attr_type_multi',4,'p_attribute_type_multi_opt','plyInmantaParser.py',270),
  ('attr -> attr_type_multi ID','attr',2,'p_attr_list','plyInmantaParser.py',275),
  ('attr -> attr_type_multi ID = constant_list','attr',4,'p_attr_list_cte','plyInmantaParser.py',283),
  ('attr -> attr_type_multi ID = UNDEF','attr',4,'p_attr_list_undef','plyInmantaParser.py',290),
  ('attr -> attr_type_multi ID = NULL','attr',4,'p_attr_list_null','plyInmantaParser.py',297),
  ('attr -> DICT ID','attr',2,'p_attr_dict','plyInmantaParser.py',304),
  ('attr -> DICT ID = map_def','attr',4,'p_attr_list_dict','plyInmantaParser.py',310),
  ('attr -> DICT ID = NULL','attr',4,'p_attr_list_dict_null_err','plyInmantaParser.py',316),
  ('attr -> DICT ? ID','attr',3,'p_attr_dict_nullable','plyInmantaParser.py',322),
  ('attr -> DICT ? ID = map_def','attr',5,'p_attr_list_dict_nullable','plyInmantaParser.py',328),
  ('attr -> DICT ? ID = NULL','attr',5,'p_attr_list_dict_null','plyInmantaParser.py',334),
  ('implement_def -> IMPLEMENT class_ref USING PARENTS','implement_def',4,'p_implement_inh','plyInmantaParser.py',341),
  ('implement_def -> IMPLEMENT class_ref USING ns_list','implement_def',4,'p_implement','plyInmantaParser.py',347),
  ('implement_def -> IMPLEMENT class_ref USING ns_list WHEN condition','implement_def',6,'p_implement_when','plyInmantaParser.py',353),
  ('implement_def -> IMPLEMENT class_ref USING ns_list mls','implement_def',5,'p_implement_comment','plyInmantaParser.py',359),
  ('implement_def -> IMPLEMENT class_ref USING PARENTS mls','implement_def',5,'p_implement_inh_comment','plyInmantaParser.py',365),
  ('implement_def -> IMPLEMENT class_ref USING ns_list WHEN condition mls','implement_def',7,'p_implement_when_comment','plyInmantaParser.py',371),
  ('implementation_def -> IMPLEMENTATION ID FOR class_ref implementation','implementation_def',5,'p_implementation_def','plyInmantaParser.py',380),
  ('implementation -> : mls block','implementation',3,'p_implementation','plyInmantaParser.py',392),
  ('implementation -> : block','implementation',2,'p_implementation_1','plyInmantaParser.py',397),
  ('block -> stmt_list END','block',2,'p_block','plyInmantaParser.py',402),
  ('block -> END','block',1,'p_block_empty','plyInmantaParser.py',407),
  ('relation -> class_ref ID multi REL multi class_ref ID','relation',7,'p_relation','plyInmantaParser.py',414),
  ('relation -> class_ref ID multi REL multi class_ref ID mls','relation',8,'p_relation_comment','plyInmantaParser.py',423),
  ('relation -> relationnew mls','relation',2,'p_relation_new_outer_comment','plyInmantaParser.py',434),
  ('relation -> relationnew','relation',1,'p_relation_new_outer','plyInmantaParser.py',441),
  ('relationnew -> class_ref . ID multi REL class_ref . ID multi','relationnew',9,'p_relation_new','plyInmantaParser.py',446),
  ('relationnew -> class_ref . ID multi REL class_ref','relationnew',6,'p_relation_new_unidir','plyInmantaParser.py',452),
  ('relationnew -> class_ref . ID multi operand_list class_ref . ID multi','relationnew',9,'p_relation_new_annotated','plyInmantaParser.py',458),
  ('relationnew -> class_ref . ID multi operand_list class_ref','relationnew',6,'p_relation_new_annotated_unidir','plyInmantaParser.py',464),
  ('multi -> [ INT ]','multi',3,'p_multi_1','plyInmantaParser.py',470),
  ('multi -> [ INT : ]','multi',4,'p_multi_2','plyInmantaParser.py',475),
  ('multi -> [ INT : INT ]','multi',5,'p_multi_3','plyInmantaParser.py',480),
  ('multi -> [ : INT ]','multi',4,'p_multi_4','plyInmantaParser.py',485),
  ('typedef -> typedef_inner','typedef',1,'p_typedef_outer','plyInmantaParser.py',492),
  ('typedef -> typedef_inner mls','typedef',2,'p_typedef_outer_comment','plyInmantaParser.py',497),
  ('typedef_inner -> TYPEDEF ID AS ns_ref MATCHING REGEX','typedef_inner',6,'p_typedef_1','plyInmantaParser.py',504),
  ('typedef_inner -> TYPEDEF ID AS ns_ref MATCHING condition','typedef_inner',6,'p_typedef_1','plyInmantaParser.py',505),
  ('typedef_inner -> TYPEDEF CID AS constructor','typedef_inner',4,'p_typedef_cls','plyInmantaParser.py',511),
  ('index -> INDEX class_ref ( id_list )','index',5,'p_index','plyInmantaParser.py',518),
  ('condition -> ( condition )','condition',3,'p_condition_1','plyInmantaParser.py',527),
  ('condition -> operand CMP_OP operand','condition',3,'p_condition_2','plyInmantaParser.py',532),
  ('condition -> operand IN list_def','condition',3,'p_condition_2','plyInmantaParser.py',533),
  ('condition -> operand IN var_ref','condition',3,'p_condition_2','plyInmantaParser.py',534),
  ('condition -> condition AND condition','condition',3,'p_condition_2','plyInmantaParser.py',535),
  ('condition -> condition OR condition','condition',3,'p_condition_2','plyInmantaParser.py',536),
  ('condition -> function_call','condition',1,'p_condition_3','plyInmantaParser.py',543),
  ('condition -> var_ref','condition',1,'p_condition_3','plyInmantaParser.py',544),
  ('condition -> NOT condition','condition',2,'p_condition_not','plyInmantaParser.py',549),
  ('condition -> var_ref . ID IS DEFINED','condition',5,'p_condition_is_defined','plyInmantaParser.py',555),
  ('condition -> ID IS DEFINED','condition',3,'p_condition_is_defined_short','plyInmantaParser.py',561),
  ('condition -> TRUE','condition',1,'p_condition_term_1','plyInmantaParser.py',567),
  ('condition -> FALSE','condition',1,'p_condition_term_1','plyInmantaParser.py',568),
  ('operand -> constant','operand',1,'p_operand','plyInmantaParser.py',578),
  ('operand -> function_call','operand',1,'p_operand','plyInmantaParser.py',579),
  ('operand -> constructor','operand',1,'p_operand','plyInmantaParser.py',580),
  ('operand -> list_def','operand',1,'p_operand','plyInmantaParser.py',581),
  ('operand -> map_def','operand',1,'p_operand','plyInmantaParser.py',582),
  ('operand -> var_ref','operand',1,'p_operand','plyInmantaParser.py',583),
  ('operand -> index_lookup','operand',1,'p_operand','plyInmantaParser.py',584),
  ('constructor -> class_ref ( param_list )','constructor',4,'p_constructor','plyInmantaParser.py',589),
  ('function_call -> ns_ref ( operand_list )','function_call',4,'p_function_call','plyInmantaParser.py',594),
  ('list_def -> [ operand_list ]','list_def',3,'p_list_def','plyInmantaParser.py',600),
  ('pair_list -> STRING : operand , pair_list','pair_list',5,'p_pair_list_collect','plyInmantaParser.py',606),
  ('pair_list -> STRING : operand','pair_list',3,'p_pair_list_term','plyInmantaParser.py',612),
  ('pair_list -> <empty>','pair_list',0,'p_pair_list_term_2','plyInmantaParser.py',617),
  ('map_def -> { pair_list }','map_def',3,'p_map_def','plyInmantaParser.py',622),
  ('map_def -> { }','map_def',2,'p_map_def_empty','plyInmantaParser.py',628),
  ('index_lookup -> class_ref [ param_list ]','index_lookup',4,'p_index_lookup','plyInmantaParser.py',634),
  ('index_lookup -> attr_ref [ param_list ]','index_lookup',4,'p_short_index_lookup','plyInmantaParser.py',640),
  ('constant -> INT','constant',1,'p_constant','plyInmantaParser.py',649),
  ('constant -> FLOAT','constant',1,'p_constant','plyInmantaParser.py',650),
  ('constant -> mls','constant',1,'p_constant','plyInmantaParser.py',651),
  ('constant -> NULL','constant',1,'p_constant_none','plyInmantaParser.py',658),
  ('constant -> REGEX','constant',1,'p_constant_regex','plyInmantaParser.py',665),
  ('constant -> TRUE','constant',1,'p_constant_t','plyInmantaParser.py',672),
  ('constant -> FALSE','constant',1,'p_constant_f','plyInmantaParser.py',679),
  ('constant -> STRING','constant',1,'p_string','plyInmantaParser.py',689),
  ('constant_list -> [ constants ]','constant_list',3,'p_constant_list','plyInmantaParser.py',723),
  ('constants -> constant','constants',1,'p_constants_term','plyInmantaParser.py',729),
  ('constants -> <empty>','constants',0,'p_constants_term_2','plyInmantaParser.py',734),
  ('constants -> constant , constants','constants',3,'p_constants_collect','plyInmantaParser.py',739),
  ('param_list -> ID = operand , param_list','param_list',5,'p_param_list_collect','plyInmantaParser.py',745),
  ('param_list -> ID = operand','param_list',3,'p_param_list_term','plyInmantaParser.py',751),
  ('param_list -> <empty>','param_list',0,'p_param_list_term_2','plyInmantaParser.py',756),
  ('operand_list -> operand , operand_list','operand_list',3,'p_operand_list_collect','plyInmantaParser.py',761),
  ('operand_list -> operand','operand_list',1,'p_operand_list_term','plyInmantaParser.py',767),
  ('operand_list -> <empty>','operand_list',0,'p_operand_list_term_2','plyInmantaParser.py',772),
  ('ns_list -> ns_ref , ns_list','ns_list',3,'p_ns_list_collect','plyInmantaParser.py',777),
  ('ns_list -> ns_ref','ns_list',1,'p_ns_list_term','plyInmantaParser.py',783),
  ('var_ref -> attr_ref','var_ref',1,'p_var_ref','plyInmantaParser.py',788),
  ('attr_ref -> var_ref . ID','attr_ref',3,'p_attr_ref','plyInmantaParser.py',793),
  ('var_ref -> ns_ref','var_ref',1,'p_var_ref_2','plyInmantaParser.py',799),
  ('class_ref -> CID','class_ref',1,'p_class_ref_direct','plyInmantaParser.py',805),
  ('class_ref -> ns_ref SEP CID','class_ref',3,'p_class_ref','plyInmantaParser.py',816),
  ('class_ref_list -> class_ref , class_ref_list','class_ref_list',3,'p_class_ref_list_collect','plyInmantaParser.py',827),
  ('class_ref_list -> var_ref , class_ref_list','class_ref_list',3,'p_class_ref_list_collect_err','plyInmantaParser.py',833),
  ('class_ref_list -> class_ref','class_ref_list',1,'p_class_ref_list_term','plyInmantaParser.py',839),
  ('class_ref_list -> var_ref','class_ref_list',1,'p_class_ref_list_term_err','plyInmantaParser.py',844),
  ('ns_ref -> ns_ref SEP ID','ns_ref',3,'p_ns_ref','plyInmantaParser.py',850),
  ('ns_ref -> ID','ns_ref',1,'p_ns_ref_term','plyInmantaParser.py',856),
  ('id_list -> ID , id_list','id_list',3,'p_id_list_collect','plyInmantaParser.py',862),
  ('id_list -> ID','id_list',1,'p_id_list_term','plyInmantaParser.py',868),
  ('mls -> MLS_END','mls',1,'p_mls_term','plyInmantaParser.py',873),
  ('mls -> MLS mls','mls',2,'p_mls_collect','plyInmantaParser.py',879),
]
