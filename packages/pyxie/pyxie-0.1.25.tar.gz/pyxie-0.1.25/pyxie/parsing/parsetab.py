
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.5'

_lr_method = 'LALR'

_lr_signature = '2F6AE4028639FB83D373BAADBD87B922'
    
_lr_action_items = {'DEDENT':([1,3,4,5,6,7,8,10,13,14,15,16,17,19,20,21,22,23,24,25,27,28,29,30,31,32,33,34,37,38,39,40,41,42,43,45,46,47,49,52,55,60,65,70,71,75,76,78,79,80,82,83,84,85,86,89,94,98,99,103,104,106,107,108,109,115,116,117,],[-44,-50,-14,-64,-55,-6,-8,-40,-49,-12,-61,-4,-7,-9,-2,-51,-63,-10,-36,-11,-60,-56,-58,-32,-48,-59,-13,-65,-34,-57,-67,-31,-66,-15,-16,-39,-5,-62,-67,-47,-3,-68,-37,-46,-45,-53,-38,-35,-69,-54,-30,-33,-41,-42,-43,-52,-17,-18,107,-19,-20,-21,-27,-25,-26,-22,-23,-24,]),'ELIF':([98,107,116,],[102,-27,102,]),'IN':([57,],[77,]),'CHARACTER':([0,1,3,4,5,6,7,8,9,10,11,13,14,15,16,17,19,20,21,22,23,24,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,50,51,52,54,56,58,60,63,64,65,66,67,68,70,71,75,76,77,78,79,80,82,83,84,85,86,89,90,93,94,98,102,103,104,106,107,108,109,115,116,117,],[5,-44,-50,-14,-64,-55,-6,-8,5,-40,5,-49,-12,-61,-4,-7,-9,5,-51,-63,-10,-36,-11,-60,-56,-58,-32,-48,-59,-13,-65,5,5,-34,-57,-67,-31,-66,-15,-16,5,-39,-5,-62,-67,5,5,-47,5,5,5,-68,5,5,-37,5,5,5,-46,-45,-53,-38,5,-35,-69,-54,-30,-33,-41,-42,-43,-52,5,5,-17,-18,5,-19,-20,-21,-27,-25,-26,-22,-23,-24,]),'NUMBER':([0,1,3,4,5,6,7,8,9,10,11,13,14,15,16,17,19,20,21,22,23,24,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,50,51,52,54,56,58,60,63,64,65,66,67,68,70,71,75,76,77,78,79,80,82,83,84,85,86,89,90,93,94,98,102,103,104,106,107,108,109,115,116,117,],[28,-44,-50,-14,-64,-55,-6,-8,28,-40,28,-49,-12,-61,-4,-7,-9,28,-51,-63,-10,-36,-11,-60,-56,-58,-32,-48,-59,-13,-65,28,28,-34,-57,-67,-31,-66,-15,-16,28,-39,-5,-62,-67,28,28,-47,28,28,28,-68,28,28,-37,28,28,28,-46,-45,-53,-38,28,-35,-69,-54,-30,-33,-41,-42,-43,-52,28,28,-17,-18,28,-19,-20,-21,-27,-25,-26,-22,-23,-24,]),'EOL':([0,1,3,4,5,6,7,8,10,13,14,15,16,17,19,20,21,22,23,24,25,27,28,29,30,31,32,33,34,37,38,39,40,41,42,43,45,46,47,49,52,60,65,69,70,71,75,76,78,79,80,81,82,83,84,85,86,89,93,94,95,97,98,103,104,106,107,108,109,111,112,115,116,117,],[7,-44,-50,-14,-64,-55,-6,-8,-40,-49,-12,-61,-4,-7,-9,7,-51,-63,-10,-36,-11,-60,-56,-58,-32,-48,-59,-13,-65,-34,-57,-67,-31,-66,-15,-16,-39,-5,-62,-67,-47,-68,-37,87,-46,-45,-53,-38,-35,-69,-54,92,-30,-33,-41,-42,-43,-52,7,-17,100,101,-18,-19,-20,-21,-27,-25,-26,113,114,-22,-23,-24,]),'WHILE':([0,1,3,4,5,6,7,8,10,13,14,15,16,17,19,20,21,22,23,24,25,27,28,29,30,31,32,33,34,37,38,39,40,41,42,43,45,46,47,49,52,60,65,70,71,75,76,78,79,80,82,83,84,85,86,89,93,94,98,103,104,106,107,108,109,115,116,117,],[9,-44,-50,-14,-64,-55,-6,-8,-40,-49,-12,-61,-4,-7,-9,9,-51,-63,-10,-36,-11,-60,-56,-58,-32,-48,-59,-13,-65,-34,-57,-67,-31,-66,-15,-16,-39,-5,-62,-67,-47,-68,-37,-46,-45,-53,-38,-35,-69,-54,-30,-33,-41,-42,-43,-52,9,-17,-18,-19,-20,-21,-27,-25,-26,-22,-23,-24,]),'MINUS':([0,1,3,4,5,6,7,8,9,10,11,13,14,15,16,17,19,20,21,22,23,24,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,50,51,52,54,56,58,60,63,64,65,66,67,68,70,71,75,76,77,78,79,80,82,83,84,85,86,89,90,93,94,98,102,103,104,106,107,108,109,115,116,117,],[11,-44,-50,-14,-64,-55,-6,-8,11,-40,11,-49,-12,-61,-4,-7,-9,11,-51,-63,-10,-36,-11,-60,-56,-58,-32,-48,-59,-13,-65,11,11,-34,-57,-67,-31,-66,-15,-16,11,67,-5,-62,-67,11,11,-47,11,11,11,-68,11,11,-37,11,11,11,-46,-45,-53,67,11,-35,-69,-54,-30,-33,-41,-42,-43,-52,11,11,-17,-18,11,-19,-20,-21,-27,-25,-26,-22,-23,-24,]),'DEF':([0,1,3,4,5,6,7,8,10,13,14,15,16,17,19,20,21,22,23,24,25,27,28,29,30,31,32,33,34,37,38,39,40,41,42,43,45,46,47,49,52,60,65,70,71,75,76,78,79,80,82,83,84,85,86,89,93,94,98,103,104,106,107,108,109,115,116,117,],[12,-44,-50,-14,-64,-55,-6,-8,-40,-49,-12,-61,-4,-7,-9,12,-51,-63,-10,-36,-11,-60,-56,-58,-32,-48,-59,-13,-65,-34,-57,-67,-31,-66,-15,-16,-39,-5,-62,-67,-47,-68,-37,-46,-45,-53,-38,-35,-69,-54,-30,-33,-41,-42,-43,-52,12,-17,-18,-19,-20,-21,-27,-25,-26,-22,-23,-24,]),'DIVIDE':([1,3,5,6,10,13,15,21,22,27,28,29,31,32,34,38,39,41,47,49,52,60,70,71,75,79,80,84,85,86,89,],[-44,-50,-64,-55,50,-49,-61,-51,-63,-60,-56,-58,-48,-59,-65,-57,-67,-66,-62,-67,-47,-68,-46,-45,-53,-69,-54,50,50,50,-52,]),'POWER':([1,3,5,6,10,13,15,21,22,27,28,29,31,32,34,38,39,41,45,47,49,52,60,70,71,75,76,79,80,84,85,86,89,],[-44,-50,-64,-55,-40,-49,-61,-51,-63,-60,-56,-58,-48,-59,-65,-57,-67,-66,68,-62,-67,-47,-68,-46,-45,-53,68,-69,-54,-41,-42,-43,-52,]),'SIGNEDLONG':([0,1,3,4,5,6,7,8,9,10,11,13,14,15,16,17,19,20,21,22,23,24,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,50,51,52,54,56,58,60,63,64,65,66,67,68,70,71,75,76,77,78,79,80,82,83,84,85,86,89,90,93,94,98,102,103,104,106,107,108,109,115,116,117,],[15,-44,-50,-14,-64,-55,-6,-8,15,-40,15,-49,-12,-61,-4,-7,-9,15,-51,-63,-10,-36,-11,-60,-56,-58,-32,-48,-59,-13,-65,15,15,-34,-57,-67,-31,-66,-15,-16,15,-39,-5,-62,-67,15,15,-47,15,15,15,-68,15,15,-37,15,15,15,-46,-45,-53,-38,15,-35,-69,-54,-30,-33,-41,-42,-43,-52,15,15,-17,-18,15,-19,-20,-21,-27,-25,-26,-22,-23,-24,]),'CONTINUE':([0,1,3,4,5,6,7,8,10,13,14,15,16,17,19,20,21,22,23,24,25,27,28,29,30,31,32,33,34,37,38,39,40,41,42,43,45,46,47,49,52,60,65,70,71,75,76,78,79,80,82,83,84,85,86,89,93,94,98,103,104,106,107,108,109,115,116,117,],[43,-44,-50,-14,-64,-55,-6,-8,-40,-49,-12,-61,-4,-7,-9,43,-51,-63,-10,-36,-11,-60,-56,-58,-32,-48,-59,-13,-65,-34,-57,-67,-31,-66,-15,-16,-39,-5,-62,-67,-47,-68,-37,-46,-45,-53,-38,-35,-69,-54,-30,-33,-41,-42,-43,-52,43,-17,-18,-19,-20,-21,-27,-25,-26,-22,-23,-24,]),'PLUS':([1,3,5,6,10,13,15,21,22,27,28,29,31,32,34,38,39,41,45,47,49,52,60,70,71,75,76,79,80,84,85,86,89,],[-44,-50,-64,-55,-40,-49,-61,-51,-63,-60,-56,-58,-48,-59,-65,-57,-67,-66,66,-62,-67,-47,-68,-46,-45,-53,66,-69,-54,-41,-42,-43,-52,]),'DOT':([3,5,6,13,15,21,22,27,28,29,31,32,34,38,39,41,47,49,60,75,79,80,89,],[-50,-64,-55,-49,-61,-51,-63,-60,-56,-58,59,-59,-65,-57,-67,-66,-62,-67,-68,-53,-69,-54,-52,]),'COLON':([1,3,5,6,10,13,15,21,22,24,27,28,29,30,31,32,34,37,38,40,41,45,47,48,49,52,60,62,65,70,71,75,76,78,79,80,83,84,85,86,88,89,91,105,110,],[-44,-50,-64,-55,-40,-49,-61,-51,-63,-36,-60,-56,-58,-32,-48,-59,-65,-34,-57,-31,-66,-39,-62,69,-67,-47,-68,81,-37,-46,-45,-53,-38,-35,-69,-54,-33,-41,-42,-43,95,-52,97,111,112,]),'IDENTIFIER':([0,1,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,50,51,52,54,56,58,59,60,63,64,65,66,67,68,70,71,75,76,77,78,79,80,82,83,84,85,86,89,90,93,94,98,102,103,104,106,107,108,109,115,116,117,],[39,-44,-50,-14,-64,-55,-6,-8,49,-40,49,53,-49,-12,-61,-4,-7,-9,39,-51,-63,-10,-36,-11,57,-60,-56,-58,-32,-48,-59,-13,-65,49,49,-34,-57,-67,-31,-66,-15,-16,49,-39,-5,-62,-67,49,49,-47,49,49,49,79,-68,49,49,-37,49,49,49,-46,-45,-53,-38,49,-35,-69,-54,-30,-33,-41,-42,-43,-52,49,39,-17,-18,49,-19,-20,-21,-27,-25,-26,-22,-23,-24,]),'COMPARISON_OPERATOR':([1,3,5,6,10,13,15,21,22,24,27,28,29,31,32,34,38,39,41,45,47,49,52,60,70,71,75,76,79,80,84,85,86,89,],[-44,-50,-64,-55,-40,-49,-61,-51,-63,56,-60,-56,-58,-48,-59,-65,-57,-67,-66,-39,-62,-67,-47,-68,-46,-45,-53,-38,-69,-54,-41,-42,-43,-52,]),'$end':([1,2,3,4,5,6,7,8,10,13,14,15,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,32,33,34,37,38,39,40,41,42,43,45,46,47,49,52,55,60,65,70,71,75,76,78,79,80,82,83,84,85,86,89,94,98,103,104,106,107,108,109,115,116,117,],[-44,-1,-50,-14,-64,-55,-6,-8,-40,-49,-12,-61,-4,-7,0,-9,-2,-51,-63,-10,-36,-11,-60,-56,-58,-32,-48,-59,-13,-65,-34,-57,-67,-31,-66,-15,-16,-39,-5,-62,-67,-47,-3,-68,-37,-46,-45,-53,-38,-35,-69,-54,-30,-33,-41,-42,-43,-52,-17,-18,-19,-20,-21,-27,-25,-26,-22,-23,-24,]),'PARENR':([1,3,5,6,10,13,15,21,22,24,27,28,29,30,31,32,34,37,38,40,41,45,47,49,52,54,60,61,65,70,71,72,73,74,75,76,78,79,80,83,84,85,86,89,96,],[-44,-50,-64,-55,-40,-49,-61,-51,-63,-36,-60,-56,-58,-32,-48,-59,-65,-34,-57,-31,-66,-39,-62,-67,-47,75,-68,80,-37,-46,-45,88,89,-28,-53,-38,-35,-69,-54,-33,-41,-42,-43,-52,-29,]),'STRING':([0,1,3,4,5,6,7,8,9,10,11,13,14,15,16,17,19,20,21,22,23,24,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,50,51,52,54,56,58,60,63,64,65,66,67,68,70,71,75,76,77,78,79,80,82,83,84,85,86,89,90,93,94,98,102,103,104,106,107,108,109,115,116,117,],[22,-44,-50,-14,-64,-55,-6,-8,22,-40,22,-49,-12,-61,-4,-7,-9,22,-51,-63,-10,-36,-11,-60,-56,-58,-32,-48,-59,-13,-65,22,22,-34,-57,-67,-31,-66,-15,-16,22,-39,-5,-62,-67,22,22,-47,22,22,22,-68,22,22,-37,22,22,22,-46,-45,-53,-38,22,-35,-69,-54,-30,-33,-41,-42,-43,-52,22,22,-17,-18,22,-19,-20,-21,-27,-25,-26,-22,-23,-24,]),'FOR':([0,1,3,4,5,6,7,8,10,13,14,15,16,17,19,20,21,22,23,24,25,27,28,29,30,31,32,33,34,37,38,39,40,41,42,43,45,46,47,49,52,60,65,70,71,75,76,78,79,80,82,83,84,85,86,89,93,94,98,103,104,106,107,108,109,115,116,117,],[26,-44,-50,-14,-64,-55,-6,-8,-40,-49,-12,-61,-4,-7,-9,26,-51,-63,-10,-36,-11,-60,-56,-58,-32,-48,-59,-13,-65,-34,-57,-67,-31,-66,-15,-16,-39,-5,-62,-67,-47,-68,-37,-46,-45,-53,-38,-35,-69,-54,-30,-33,-41,-42,-43,-52,26,-17,-18,-19,-20,-21,-27,-25,-26,-22,-23,-24,]),'HEX':([0,1,3,4,5,6,7,8,9,10,11,13,14,15,16,17,19,20,21,22,23,24,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,50,51,52,54,56,58,60,63,64,65,66,67,68,70,71,75,76,77,78,79,80,82,83,84,85,86,89,90,93,94,98,102,103,104,106,107,108,109,115,116,117,],[29,-44,-50,-14,-64,-55,-6,-8,29,-40,29,-49,-12,-61,-4,-7,-9,29,-51,-63,-10,-36,-11,-60,-56,-58,-32,-48,-59,-13,-65,29,29,-34,-57,-67,-31,-66,-15,-16,29,-39,-5,-62,-67,29,29,-47,29,29,29,-68,29,29,-37,29,29,29,-46,-45,-53,-38,29,-35,-69,-54,-30,-33,-41,-42,-43,-52,29,29,-17,-18,29,-19,-20,-21,-27,-25,-26,-22,-23,-24,]),'TIMES':([1,3,5,6,10,13,15,21,22,27,28,29,31,32,34,38,39,41,47,49,52,60,70,71,75,79,80,84,85,86,89,],[-44,-50,-64,-55,51,-49,-61,-51,-63,-60,-56,-58,-48,-59,-65,-57,-67,-66,-62,-67,-47,-68,-46,-45,-53,-69,-54,51,51,51,-52,]),'PASS':([0,1,3,4,5,6,7,8,10,13,14,15,16,17,19,20,21,22,23,24,25,27,28,29,30,31,32,33,34,37,38,39,40,41,42,43,45,46,47,49,52,60,65,70,71,75,76,78,79,80,82,83,84,85,86,89,93,94,98,103,104,106,107,108,109,115,116,117,],[4,-44,-50,-14,-64,-55,-6,-8,-40,-49,-12,-61,-4,-7,-9,4,-51,-63,-10,-36,-11,-60,-56,-58,-32,-48,-59,-13,-65,-34,-57,-67,-31,-66,-15,-16,-39,-5,-62,-67,-47,-68,-37,-46,-45,-53,-38,-35,-69,-54,-30,-33,-41,-42,-43,-52,4,-17,-18,-19,-20,-21,-27,-25,-26,-22,-23,-24,]),'OCTAL':([0,1,3,4,5,6,7,8,9,10,11,13,14,15,16,17,19,20,21,22,23,24,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,50,51,52,54,56,58,60,63,64,65,66,67,68,70,71,75,76,77,78,79,80,82,83,84,85,86,89,90,93,94,98,102,103,104,106,107,108,109,115,116,117,],[32,-44,-50,-14,-64,-55,-6,-8,32,-40,32,-49,-12,-61,-4,-7,-9,32,-51,-63,-10,-36,-11,-60,-56,-58,-32,-48,-59,-13,-65,32,32,-34,-57,-67,-31,-66,-15,-16,32,-39,-5,-62,-67,32,32,-47,32,32,32,-68,32,32,-37,32,32,32,-46,-45,-53,-38,32,-35,-69,-54,-30,-33,-41,-42,-43,-52,32,32,-17,-18,32,-19,-20,-21,-27,-25,-26,-22,-23,-24,]),'ELSE':([98,107,116,],[105,-27,105,]),'PARENL':([0,1,3,4,5,6,7,8,9,10,11,13,14,15,16,17,19,20,21,22,23,24,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,50,51,52,53,54,56,58,60,63,64,65,66,67,68,70,71,75,76,77,78,79,80,82,83,84,85,86,89,90,93,94,98,102,103,104,106,107,108,109,115,116,117,],[35,-44,-50,-14,-64,-55,-6,-8,35,-40,35,54,-12,-61,-4,-7,-9,35,-51,-63,-10,-36,-11,-60,-56,-58,-32,-48,-59,-13,-65,35,35,-34,-57,-67,-31,-66,-15,-16,35,-39,-5,-62,-67,35,35,-47,72,35,35,35,-68,35,35,-37,35,35,35,-46,-45,-53,-38,35,-35,-69,-54,-30,-33,-41,-42,-43,-52,35,35,-17,-18,35,-19,-20,-21,-27,-25,-26,-22,-23,-24,]),'IF':([0,1,3,4,5,6,7,8,10,13,14,15,16,17,19,20,21,22,23,24,25,27,28,29,30,31,32,33,34,37,38,39,40,41,42,43,45,46,47,49,52,60,65,70,71,75,76,78,79,80,82,83,84,85,86,89,93,94,98,103,104,106,107,108,109,115,116,117,],[36,-44,-50,-14,-64,-55,-6,-8,-40,-49,-12,-61,-4,-7,-9,36,-51,-63,-10,-36,-11,-60,-56,-58,-32,-48,-59,-13,-65,-34,-57,-67,-31,-66,-15,-16,-39,-5,-62,-67,-47,-68,-37,-46,-45,-53,-38,-35,-69,-54,-30,-33,-41,-42,-43,-52,36,-17,-18,-19,-20,-21,-27,-25,-26,-22,-23,-24,]),'AND':([1,3,5,6,10,13,15,21,22,24,27,28,29,30,31,32,34,37,38,39,41,45,47,49,52,60,65,70,71,75,76,78,79,80,83,84,85,86,89,],[-44,-50,-64,-55,-40,-49,-61,-51,-63,-36,-60,-56,-58,58,-48,-59,-65,-34,-57,-67,-66,-39,-62,-67,-47,-68,-37,-46,-45,-53,-38,-35,-69,-54,58,-41,-42,-43,-52,]),'BINARY':([0,1,3,4,5,6,7,8,9,10,11,13,14,15,16,17,19,20,21,22,23,24,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,50,51,52,54,56,58,60,63,64,65,66,67,68,70,71,75,76,77,78,79,80,82,83,84,85,86,89,90,93,94,98,102,103,104,106,107,108,109,115,116,117,],[27,-44,-50,-14,-64,-55,-6,-8,27,-40,27,-49,-12,-61,-4,-7,-9,27,-51,-63,-10,-36,-11,-60,-56,-58,-32,-48,-59,-13,-65,27,27,-34,-57,-67,-31,-66,-15,-16,27,-39,-5,-62,-67,27,27,-47,27,27,27,-68,27,27,-37,27,27,27,-46,-45,-53,-38,27,-35,-69,-54,-30,-33,-41,-42,-43,-52,27,27,-17,-18,27,-19,-20,-21,-27,-25,-26,-22,-23,-24,]),'INDENT':([87,92,100,101,113,114,],[93,93,93,93,93,93,]),'FLOAT':([0,1,3,4,5,6,7,8,9,10,11,13,14,15,16,17,19,20,21,22,23,24,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,50,51,52,54,56,58,60,63,64,65,66,67,68,70,71,75,76,77,78,79,80,82,83,84,85,86,89,90,93,94,98,102,103,104,106,107,108,109,115,116,117,],[38,-44,-50,-14,-64,-55,-6,-8,38,-40,38,-49,-12,-61,-4,-7,-9,38,-51,-63,-10,-36,-11,-60,-56,-58,-32,-48,-59,-13,-65,38,38,-34,-57,-67,-31,-66,-15,-16,38,-39,-5,-62,-67,38,38,-47,38,38,38,-68,38,38,-37,38,38,38,-46,-45,-53,-38,38,-35,-69,-54,-30,-33,-41,-42,-43,-52,38,38,-17,-18,38,-19,-20,-21,-27,-25,-26,-22,-23,-24,]),'ASSIGN':([39,],[63,]),'BREAK':([0,1,3,4,5,6,7,8,10,13,14,15,16,17,19,20,21,22,23,24,25,27,28,29,30,31,32,33,34,37,38,39,40,41,42,43,45,46,47,49,52,60,65,70,71,75,76,78,79,80,82,83,84,85,86,89,93,94,98,103,104,106,107,108,109,115,116,117,],[42,-44,-50,-14,-64,-55,-6,-8,-40,-49,-12,-61,-4,-7,-9,42,-51,-63,-10,-36,-11,-60,-56,-58,-32,-48,-59,-13,-65,-34,-57,-67,-31,-66,-15,-16,-39,-5,-62,-67,-47,-68,-37,-46,-45,-53,-38,-35,-69,-54,-30,-33,-41,-42,-43,-52,42,-17,-18,-19,-20,-21,-27,-25,-26,-22,-23,-24,]),'BOOLEAN':([0,1,3,4,5,6,7,8,9,10,11,13,14,15,16,17,19,20,21,22,23,24,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,50,51,52,54,56,58,60,63,64,65,66,67,68,70,71,75,76,77,78,79,80,82,83,84,85,86,89,90,93,94,98,102,103,104,106,107,108,109,115,116,117,],[34,-44,-50,-14,-64,-55,-6,-8,34,-40,34,-49,-12,-61,-4,-7,-9,34,-51,-63,-10,-36,-11,-60,-56,-58,-32,-48,-59,-13,-65,34,34,-34,-57,-67,-31,-66,-15,-16,34,-39,-5,-62,-67,34,34,-47,34,34,34,-68,34,34,-37,34,34,34,-46,-45,-53,-38,34,-35,-69,-54,-30,-33,-41,-42,-43,-52,34,34,-17,-18,34,-19,-20,-21,-27,-25,-26,-22,-23,-24,]),'NOT':([0,1,3,4,5,6,7,8,9,10,13,14,15,16,17,19,20,21,22,23,24,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,52,54,58,60,63,64,65,70,71,75,76,77,78,79,80,82,83,84,85,86,89,90,93,94,98,102,103,104,106,107,108,109,115,116,117,],[44,-44,-50,-14,-64,-55,-6,-8,44,-40,-49,-12,-61,-4,-7,-9,44,-51,-63,-10,-36,-11,-60,-56,-58,-32,-48,-59,-13,-65,44,44,-34,-57,-67,-31,-66,-15,-16,44,-39,-5,-62,-67,-47,44,44,-68,44,44,-37,-46,-45,-53,-38,44,-35,-69,-54,-30,-33,-41,-42,-43,-52,44,44,-17,-18,44,-19,-20,-21,-27,-25,-26,-22,-23,-24,]),'COMMA':([1,3,5,6,10,13,15,21,22,24,27,28,29,30,31,32,34,37,38,40,41,45,47,49,52,60,65,70,71,74,75,76,78,79,80,83,84,85,86,89,],[-44,-50,-64,-55,-40,-49,-61,-51,-63,-36,-60,-56,-58,-32,-48,-59,-65,-34,-57,-31,-66,-39,-62,-67,-47,-68,-37,-46,-45,90,-53,-38,-35,-69,-54,-33,-41,-42,-43,-52,]),'OR':([1,3,5,6,10,13,15,21,22,24,27,28,29,30,31,32,34,37,38,39,40,41,45,47,49,52,60,65,70,71,75,76,78,79,80,83,84,85,86,89,],[-44,-50,-64,-55,-40,-49,-61,-51,-63,-36,-60,-56,-58,-32,-48,-59,-65,-34,-57,-67,64,-66,-39,-62,-67,-47,-68,-37,-46,-45,-53,-38,-35,-69,-54,-33,-41,-42,-43,-52,]),'UNSIGNEDLONG':([0,1,3,4,5,6,7,8,9,10,11,13,14,15,16,17,19,20,21,22,23,24,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,50,51,52,54,56,58,60,63,64,65,66,67,68,70,71,75,76,77,78,79,80,82,83,84,85,86,89,90,93,94,98,102,103,104,106,107,108,109,115,116,117,],[47,-44,-50,-14,-64,-55,-6,-8,47,-40,47,-49,-12,-61,-4,-7,-9,47,-51,-63,-10,-36,-11,-60,-56,-58,-32,-48,-59,-13,-65,47,47,-34,-57,-67,-31,-66,-15,-16,47,-39,-5,-62,-67,47,47,-47,47,47,47,-68,47,47,-37,47,47,47,-46,-45,-53,-38,47,-35,-69,-54,-30,-33,-41,-42,-43,-52,47,47,-17,-18,47,-19,-20,-21,-27,-25,-26,-22,-23,-24,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'extended_if_clauses':([98,116,],[103,117,]),'statements':([0,20,93,],[2,55,99,]),'else_clause':([98,116,],[104,104,]),'bracketed_expression':([0,9,11,20,35,36,44,50,51,54,56,58,63,64,66,67,68,77,90,93,102,],[3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'expr_list':([54,90,],[73,96,]),'number':([0,9,11,20,35,36,44,50,51,54,56,58,63,64,66,67,68,77,90,93,102,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'statement_block':([87,92,100,101,113,114,],[94,98,108,109,115,116,]),'break_statement':([0,20,93,],[8,8,8,]),'arith_expression':([0,9,20,35,36,44,54,56,58,63,64,66,67,68,77,90,93,102,],[10,10,10,10,10,10,10,10,10,10,10,84,85,86,10,10,10,10,]),'dotexpression':([31,],[60,]),'pass_statement':([0,20,93,],[14,14,14,]),'assignment_statement':([0,20,93,],[16,16,16,]),'while_statement':([0,20,93,],[17,17,17,]),'program':([0,],[18,]),'continue_statement':([0,20,93,],[19,19,19,]),'statement':([0,20,93,],[20,20,20,]),'if_statement':([0,20,93,],[23,23,23,]),'relational_expression':([0,9,20,35,36,44,54,58,63,64,77,90,93,102,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'for_statement':([0,20,93,],[25,25,25,]),'expression_atom':([0,9,11,20,35,36,44,50,51,54,56,58,63,64,66,67,68,77,90,93,102,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'boolean_and_expression':([0,9,20,35,36,54,63,64,77,90,93,102,],[30,30,30,30,30,30,30,83,30,30,30,30,]),'expression_molecule':([0,9,11,20,35,36,44,50,51,54,56,58,63,64,66,67,68,77,90,93,102,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'def_statement':([0,20,93,],[33,33,33,]),'elif_clause':([98,116,],[106,106,]),'value_literal':([0,9,11,20,35,36,44,50,51,54,56,58,63,64,66,67,68,77,90,93,102,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'boolean_not_expression':([0,9,20,35,36,44,54,58,63,64,77,90,93,102,],[37,37,37,37,37,65,37,78,37,37,37,37,37,37,]),'general_expression':([0,9,20,35,36,54,63,77,90,93,102,],[46,48,46,61,62,74,82,91,74,46,110,]),'boolean_expression':([0,9,20,35,36,54,63,77,90,93,102,],[40,40,40,40,40,40,40,40,40,40,40,]),'identifiable':([0,9,11,20,35,36,44,50,51,54,56,58,63,64,66,67,68,77,90,93,102,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'negatable_expression_atom':([0,9,11,20,35,36,44,50,51,54,56,58,63,64,66,67,68,77,90,93,102,],[1,1,52,1,1,1,1,70,71,1,1,1,1,1,1,1,1,1,1,1,1,]),'expression':([0,9,20,35,36,44,54,56,58,63,64,77,90,93,102,],[45,45,45,45,45,45,45,76,45,45,45,45,45,45,45,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statements','program',1,'p_program','grammar.py',38),
  ('statements -> statement','statements',1,'p_statements_1','grammar.py',42),
  ('statements -> statement statements','statements',2,'p_statements_2','grammar.py',46),
  ('statement -> assignment_statement','statement',1,'p_statement_1','grammar.py',50),
  ('statement -> general_expression','statement',1,'p_statement_3','grammar.py',54),
  ('statement -> EOL','statement',1,'p_statement_4_empty','grammar.py',58),
  ('statement -> while_statement','statement',1,'p_statement_5','grammar.py',62),
  ('statement -> break_statement','statement',1,'p_statement_6','grammar.py',66),
  ('statement -> continue_statement','statement',1,'p_statement_7','grammar.py',70),
  ('statement -> if_statement','statement',1,'p_statement_8','grammar.py',74),
  ('statement -> for_statement','statement',1,'p_statement_9','grammar.py',78),
  ('statement -> pass_statement','statement',1,'p_statement_10','grammar.py',82),
  ('statement -> def_statement','statement',1,'p_statement_11','grammar.py',86),
  ('pass_statement -> PASS','pass_statement',1,'p_pass_statement_1','grammar.py',91),
  ('break_statement -> BREAK','break_statement',1,'p_break_statement_1','grammar.py',96),
  ('continue_statement -> CONTINUE','continue_statement',1,'p_continue_statement_1','grammar.py',100),
  ('while_statement -> WHILE general_expression COLON EOL statement_block','while_statement',5,'p_while_statement_1','grammar.py',116),
  ('if_statement -> IF general_expression COLON EOL statement_block','if_statement',5,'p_if_statement_1','grammar.py',129),
  ('if_statement -> IF general_expression COLON EOL statement_block extended_if_clauses','if_statement',6,'p_if_statement_2','grammar.py',143),
  ('extended_if_clauses -> else_clause','extended_if_clauses',1,'p_extended_if_clauses_1','grammar.py',157),
  ('extended_if_clauses -> elif_clause','extended_if_clauses',1,'p_extended_if_clauses_2','grammar.py',161),
  ('else_clause -> ELSE COLON EOL statement_block','else_clause',4,'p_else_clause_1','grammar.py',165),
  ('elif_clause -> ELIF general_expression COLON EOL statement_block','elif_clause',5,'p_elif_clause_1','grammar.py',170),
  ('elif_clause -> ELIF general_expression COLON EOL statement_block extended_if_clauses','elif_clause',6,'p_elif_clause_2','grammar.py',184),
  ('def_statement -> DEF IDENTIFIER PARENL PARENR COLON EOL statement_block','def_statement',7,'p_def_statement_1','grammar.py',200),
  ('for_statement -> FOR IDENTIFIER IN general_expression COLON EOL statement_block','for_statement',7,'p_for_statement_1','grammar.py',211),
  ('statement_block -> INDENT statements DEDENT','statement_block',3,'p_block_1','grammar.py',218),
  ('expr_list -> general_expression','expr_list',1,'p_expr_list_1','grammar.py',226),
  ('expr_list -> general_expression COMMA expr_list','expr_list',3,'p_expr_list_2','grammar.py',230),
  ('assignment_statement -> IDENTIFIER ASSIGN general_expression','assignment_statement',3,'p_assignment_statement','grammar.py',235),
  ('general_expression -> boolean_expression','general_expression',1,'p_general_expression_1','grammar.py',241),
  ('boolean_expression -> boolean_and_expression','boolean_expression',1,'p_boolean_expression_1','grammar.py',245),
  ('boolean_expression -> boolean_expression OR boolean_and_expression','boolean_expression',3,'p_boolean_expression_2','grammar.py',249),
  ('boolean_and_expression -> boolean_not_expression','boolean_and_expression',1,'p_boolean_and_expression_1','grammar.py',263),
  ('boolean_and_expression -> boolean_and_expression AND boolean_not_expression','boolean_and_expression',3,'p_boolean_and_expression_2','grammar.py',267),
  ('boolean_not_expression -> relational_expression','boolean_not_expression',1,'p_boolean_not_expression_1','grammar.py',280),
  ('boolean_not_expression -> NOT boolean_not_expression','boolean_not_expression',2,'p_boolean_not_expression_2','grammar.py',284),
  ('relational_expression -> relational_expression COMPARISON_OPERATOR expression','relational_expression',3,'p_relational_expression_1','grammar.py',296),
  ('relational_expression -> expression','relational_expression',1,'p_relational_expression_2','grammar.py',300),
  ('expression -> arith_expression','expression',1,'p_expression_1','grammar.py',304),
  ('expression -> expression PLUS arith_expression','expression',3,'p_expression_2','grammar.py',308),
  ('expression -> expression MINUS arith_expression','expression',3,'p_expression_3','grammar.py',312),
  ('expression -> expression POWER arith_expression','expression',3,'p_expression_4','grammar.py',316),
  ('arith_expression -> negatable_expression_atom','arith_expression',1,'p_arith_expression_1','grammar.py',320),
  ('arith_expression -> arith_expression TIMES negatable_expression_atom','arith_expression',3,'p_arith_expression_2','grammar.py',324),
  ('arith_expression -> arith_expression DIVIDE negatable_expression_atom','arith_expression',3,'p_arith_expression_3','grammar.py',328),
  ('negatable_expression_atom -> MINUS negatable_expression_atom','negatable_expression_atom',2,'p_negatable_expression_atom_1','grammar.py',332),
  ('negatable_expression_atom -> expression_molecule','negatable_expression_atom',1,'p_negatable_expression_atom_2','grammar.py',336),
  ('expression_molecule -> expression_atom','expression_molecule',1,'p_expression_molecule_1','grammar.py',340),
  ('expression_molecule -> bracketed_expression','expression_molecule',1,'p_expression_molecule_2','grammar.py',344),
  ('expression_atom -> value_literal','expression_atom',1,'p_expression_atom_1','grammar.py',349),
  ('expression_atom -> expression_atom PARENL expr_list PARENR','expression_atom',4,'p_expression_atom_2','grammar.py',353),
  ('expression_atom -> expression_atom PARENL PARENR','expression_atom',3,'p_expression_atom_4','grammar.py',357),
  ('bracketed_expression -> PARENL general_expression PARENR','bracketed_expression',3,'p_expression_atom_5','grammar.py',361),
  ('value_literal -> number','value_literal',1,'p_value_literal_0','grammar.py',368),
  ('number -> NUMBER','number',1,'p_value_literal_1','grammar.py',372),
  ('number -> FLOAT','number',1,'p_value_literal_2','grammar.py',376),
  ('number -> HEX','number',1,'p_value_literal_3','grammar.py',380),
  ('number -> OCTAL','number',1,'p_value_literal_4','grammar.py',384),
  ('number -> BINARY','number',1,'p_value_literal_5','grammar.py',388),
  ('number -> SIGNEDLONG','number',1,'p_value_literal_5a','grammar.py',392),
  ('number -> UNSIGNEDLONG','number',1,'p_value_literal_5b','grammar.py',396),
  ('value_literal -> STRING','value_literal',1,'p_value_literal_6','grammar.py',401),
  ('value_literal -> CHARACTER','value_literal',1,'p_value_literal_6a','grammar.py',405),
  ('value_literal -> BOOLEAN','value_literal',1,'p_value_literal_7','grammar.py',409),
  ('value_literal -> identifiable','value_literal',1,'p_value_literal_8','grammar.py',413),
  ('identifiable -> IDENTIFIER','identifiable',1,'p_value_identifier_1','grammar.py',417),
  ('identifiable -> expression_molecule dotexpression','identifiable',2,'p_value_identifier_2','grammar.py',421),
  ('dotexpression -> DOT IDENTIFIER','dotexpression',2,'p_dotexpression_1','grammar.py',426),
]
