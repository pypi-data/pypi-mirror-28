Metadata-Version: 1.1
Name: django-graphql-countries
Version: 0.0.5
Summary: GraphQL implementation for countries
Home-page: https://github.com/flavors/django-graphql-countries/
Author: mongkok
Author-email: domake.io@gmail.com
License: MIT
Description-Content-Type: UNKNOWN
Description: Django GraphQL Countries
        ========================
        
        |Pypi| |Wheel| |Build Status| |Codecov| |Code Climate|
        
        
        `Countries`_ support for `Django GraphQL`_
        
        .. _Countries: https://github.com/flavors/django-countries/
        .. _Django GraphQL: https://github.com/graphql-python/graphene-django
        
        
        Dependencies
        ------------
        
        * Python â‰¥ 3.4
        * Django â‰¥ 1.11
        * PostGIS database (PostgreSQL â‰¥ 9.4)
        
        
        Installation
        ------------
        
        Install last stable version from Pypi.
        
        .. code:: sh
        
            pip install django-graphql-countries
        
        
        Add ``countries`` to your *INSTALLED_APPS* settings:
        
        .. code:: python
        
            INSTALLED_APPS = [
                ...
                'countries.apps.CountriesAppConfig',
            ]
        
        
        Apply **migrations**:
        
        .. code:: python
        
            python manage.py migrate
        
        
        Load data
        ---------
        
        The ``loadcountries`` management command read all **fixtures** and re-loaded into the database:
        
        .. code:: sh
        
            python manage.py loadcountries
        
        
        Schema
        ------
        
        Add queries to your GraphQL schema
        
        .. code:: python
        
            import graphene
            import graphql_countries
        
        
            class Query(graphene.ObjectType, graphql_countries.Query):
                """GraphQL Queries"""
        
        
            schema = graphene.Schema(query=Query)
        
        
        **Query**
        
        Countries *GeoJSON* **outlines**:
        
        .. code::
        
            query {
              countries {
                capital
                mpoly {
                  type
                  coordinates
                }
              }
            }
        
        
        Relay
        -----
        
        Complete support for `Relay`_.
        
        .. _Relay: https://facebook.github.io/relay/
        
        .. code:: python
        
            import graphene
            import graphql_countries
        
        
            class Query(graphene.ObjectType, graphql_countries.relay.Query):
                """Relay Queries"""
        
        
            schema = graphene.Schema(query=Query)
        
        
        **Query**
        
        *GeoJSON* **outlines** for ðŸ‡»ðŸ‡³ Vietnam:
        
        .. code::
        
            query {
              countries(cca2: "VN") {
                edges {
                  node {
                    capital
                    mpoly {
                      type
                      coordinates
                    }
                  }
                }
              }
            }
        
        
        .. |Pypi| image:: https://img.shields.io/pypi/v/django-graphql-countries.svg
           :target: https://pypi.python.org/pypi/django-graphql-countries
        
        .. |Wheel| image:: https://img.shields.io/pypi/wheel/django-graphql-countries.svg
           :target: https://pypi.python.org/pypi/django-graphql-countries
        
        .. |Build Status| image:: https://travis-ci.org/flavors/django-graphql-countries.svg?branch=master
           :target: https://travis-ci.org/flavors/django-graphql-countries
        
        .. |Codecov| image:: https://img.shields.io/codecov/c/github/flavors/django-graphql-countries.svg
           :target: https://codecov.io/gh/flavors/django-graphql-countries
        
        .. |Code Climate| image:: https://api.codeclimate.com/v1/badges/909e7331eb1c43e92a46/maintainability
           :target: https://codeclimate.com/github/flavors/django-graphql-countries
        
Platform: UNKNOWN
Classifier: Development Status :: 1 - Planning
Classifier: Environment :: Web Environment
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.4
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Framework :: Django
