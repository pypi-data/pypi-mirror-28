# coding: utf-8

"""
    Digitick REST API

    The Digitick REST API is a set of methods giving access to catalog, user and cart management.

    OpenAPI spec version: v1.0
    Contact: contact@digitick.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from pprint import pformat
from six import iteritems
import re


class RequiredMembershipRulesResponse(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, membership_id=None, membership_name=None, quota=None, number_of_days=None, is_rename_forbidden=None):
        """
        RequiredMembershipRulesResponse - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'membership_id': 'int',
            'membership_name': 'str',
            'quota': 'int',
            'number_of_days': 'int',
            'is_rename_forbidden': 'bool'
        }

        self.attribute_map = {
            'membership_id': 'membershipId',
            'membership_name': 'membershipName',
            'quota': 'quota',
            'number_of_days': 'numberOfDays',
            'is_rename_forbidden': 'isRenameForbidden'
        }

        self._membership_id = membership_id
        self._membership_name = membership_name
        self._quota = quota
        self._number_of_days = number_of_days
        self._is_rename_forbidden = is_rename_forbidden

    @property
    def membership_id(self):
        """
        Gets the membership_id of this RequiredMembershipRulesResponse.

        :return: The membership_id of this RequiredMembershipRulesResponse.
        :rtype: int
        """
        return self._membership_id

    @membership_id.setter
    def membership_id(self, membership_id):
        """
        Sets the membership_id of this RequiredMembershipRulesResponse.

        :param membership_id: The membership_id of this RequiredMembershipRulesResponse.
        :type: int
        """

        self._membership_id = membership_id

    @property
    def membership_name(self):
        """
        Gets the membership_name of this RequiredMembershipRulesResponse.

        :return: The membership_name of this RequiredMembershipRulesResponse.
        :rtype: str
        """
        return self._membership_name

    @membership_name.setter
    def membership_name(self, membership_name):
        """
        Sets the membership_name of this RequiredMembershipRulesResponse.

        :param membership_name: The membership_name of this RequiredMembershipRulesResponse.
        :type: str
        """

        self._membership_name = membership_name

    @property
    def quota(self):
        """
        Gets the quota of this RequiredMembershipRulesResponse.

        :return: The quota of this RequiredMembershipRulesResponse.
        :rtype: int
        """
        return self._quota

    @quota.setter
    def quota(self, quota):
        """
        Sets the quota of this RequiredMembershipRulesResponse.

        :param quota: The quota of this RequiredMembershipRulesResponse.
        :type: int
        """

        self._quota = quota

    @property
    def number_of_days(self):
        """
        Gets the number_of_days of this RequiredMembershipRulesResponse.

        :return: The number_of_days of this RequiredMembershipRulesResponse.
        :rtype: int
        """
        return self._number_of_days

    @number_of_days.setter
    def number_of_days(self, number_of_days):
        """
        Sets the number_of_days of this RequiredMembershipRulesResponse.

        :param number_of_days: The number_of_days of this RequiredMembershipRulesResponse.
        :type: int
        """

        self._number_of_days = number_of_days

    @property
    def is_rename_forbidden(self):
        """
        Gets the is_rename_forbidden of this RequiredMembershipRulesResponse.

        :return: The is_rename_forbidden of this RequiredMembershipRulesResponse.
        :rtype: bool
        """
        return self._is_rename_forbidden

    @is_rename_forbidden.setter
    def is_rename_forbidden(self, is_rename_forbidden):
        """
        Sets the is_rename_forbidden of this RequiredMembershipRulesResponse.

        :param is_rename_forbidden: The is_rename_forbidden of this RequiredMembershipRulesResponse.
        :type: bool
        """

        self._is_rename_forbidden = is_rename_forbidden

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        if not isinstance(other, RequiredMembershipRulesResponse):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
