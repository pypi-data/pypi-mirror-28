# coding: utf-8

"""
    NiFi Rest Api

    The Rest Api provides programmatic access to command and control a NiFi instance in real time. Start and                                              stop processors, monitor queues, query provenance data, and more. Each endpoint below includes a description,                                             definitions of the expected input and output, potential response codes, and the authorizations required                                             to invoke each service.

    OpenAPI spec version: 1.5.0
    Contact: dev@nifi.apache.org
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from __future__ import absolute_import

import os
import sys
import unittest

import swagger_client
from swagger_client.rest import ApiException
from swagger_client.apis.versions_api import VersionsApi


class TestVersionsApi(unittest.TestCase):
    """ VersionsApi unit test stubs """

    def setUp(self):
        self.api = swagger_client.apis.versions_api.VersionsApi()

    def tearDown(self):
        pass

    def test_create_version_control_request(self):
        """
        Test case for create_version_control_request

        Creates a request so that a Process Group can be placed under Version Control or have its Version Control configuration changed. Creating this request will prevent any other threads from simultaneously saving local changes to Version Control. It will not, however, actually save the local flow to the Flow Registry. A POST to /versions/process-groups/{id} should be used to initiate saving of the local flow to the Flow Registry.
        """
        pass

    def test_delete_revert_request(self):
        """
        Test case for delete_revert_request

        Deletes the Revert Request with the given ID. After a request is created via a POST to /versions/revert-requests/process-groups/{id}, it is expected that the client will properly clean up the request by DELETE'ing it, once the Revert process has completed. If the request is deleted before the request completes, then the Revert request will finish the step that it is currently performing and then will cancel any subsequent steps.
        """
        pass

    def test_delete_update_request(self):
        """
        Test case for delete_update_request

        Deletes the Update Request with the given ID. After a request is created via a POST to /versions/update-requests/process-groups/{id}, it is expected that the client will properly clean up the request by DELETE'ing it, once the Update process has completed. If the request is deleted before the request completes, then the Update request will finish the step that it is currently performing and then will cancel any subsequent steps.
        """
        pass

    def test_delete_version_control_request(self):
        """
        Test case for delete_version_control_request

        Deletes the Version Control Request with the given ID. This will allow other threads to save flows to the Flow Registry. See also the documentation for POSTing to /versions/active-requests for information regarding why this is done.
        """
        pass

    def test_get_revert_request(self):
        """
        Test case for get_revert_request

        Returns the Revert Request with the given ID. Once a Revert Request has been created by performing a POST to /versions/revert-requests/process-groups/{id}, that request can subsequently be retrieved via this endpoint, and the request that is fetched will contain the updated state, such as percent complete, the current state of the request, and any failures.
        """
        pass

    def test_get_update_request(self):
        """
        Test case for get_update_request

        Returns the Update Request with the given ID. Once an Update Request has been created by performing a POST to /versions/update-requests/process-groups/{id}, that request can subsequently be retrieved via this endpoint, and the request that is fetched will contain the updated state, such as percent complete, the current state of the request, and any failures.
        """
        pass

    def test_get_version_information(self):
        """
        Test case for get_version_information

        Gets the Version Control information for a process group
        """
        pass

    def test_initiate_revert_flow_version(self):
        """
        Test case for initiate_revert_flow_version

        For a Process Group that is already under Version Control, this will initiate the action of reverting any local changes that have been made to the Process Group since it was last synchronized with the Flow Registry. This will result in the flow matching the Versioned Flow that exists in the Flow Registry. This can be a lengthy process, as it will stop any Processors and disable any Controller Services necessary to perform the action and then restart them. As a result, the endpoint will immediately return a VersionedFlowUpdateRequestEntity, and the process of updating the flow will occur asynchronously in the background. The client may then periodically poll the status of the request by issuing a GET request to /versions/revert-requests/{requestId}. Once the request is completed, the client is expected to issue a DELETE request to /versions/revert-requests/{requestId}.
        """
        pass

    def test_initiate_version_control_update(self):
        """
        Test case for initiate_version_control_update

        For a Process Group that is already under Version Control, this will initiate the action of changing from a specific version of the flow in the Flow Registry to a different version of the flow. This can be a lengthy process, as it will stop any Processors and disable any Controller Services necessary to perform the action and then restart them. As a result, the endpoint will immediately return a VersionedFlowUpdateRequestEntity, and the process of updating the flow will occur asynchronously in the background. The client may then periodically poll the status of the request by issuing a GET request to /versions/update-requests/{requestId}. Once the request is completed, the client is expected to issue a DELETE request to /versions/update-requests/{requestId}.
        """
        pass

    def test_save_to_flow_registry(self):
        """
        Test case for save_to_flow_registry

        Begins version controlling the Process Group with the given ID or commits changes to the Versioned Flow, depending on if the provided VersionControlInformation includes a flowId
        """
        pass

    def test_stop_version_control(self):
        """
        Test case for stop_version_control

        Stops version controlling the Process Group with the given ID. The Process Group will no longer track to any Versioned Flow.
        """
        pass

    def test_update_flow_version(self):
        """
        Test case for update_flow_version

        For a Process Group that is already under Version Control, this will update the version of the flow to a different version. This endpoint expects that the given snapshot will not modify any Processor that is currently running or any Controller Service that is enabled.
        """
        pass

    def test_update_version_control_request(self):
        """
        Test case for update_version_control_request

        Updates the request with the given ID
        """
        pass


if __name__ == '__main__':
    unittest.main()
