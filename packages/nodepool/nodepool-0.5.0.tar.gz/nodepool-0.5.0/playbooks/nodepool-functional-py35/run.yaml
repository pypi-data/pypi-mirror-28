- hosts: all
  name: Autoconverted job legacy-dsvm-nodepool-py35 from old job gate-dsvm-nodepool-py35-nv
  tasks:

    - name: Ensure legacy workspace directory
      file:
        path: '{{ ansible_user_dir }}/workspace'
        state: directory

    - shell:
        cmd: |
          set -e
          set -x
          cat > clonemap.yaml << EOF
          clonemap:
            - name: openstack-infra/devstack-gate
              dest: devstack-gate
          EOF
          /usr/zuul-env/bin/zuul-cloner -m clonemap.yaml --cache-dir /opt/git \
              git://git.openstack.org \
              openstack-infra/devstack-gate
        executable: /bin/bash
        chdir: '{{ ansible_user_dir }}/workspace'
      environment: '{{ zuul | zuul_legacy_vars }}'

    - shell:
        cmd: |
          set -e
          set -x
          export PYTHONUNBUFFERED=true
          # Disable tempest as nodepool is talking to the cloud not tempest.
          export DEVSTACK_GATE_TEMPEST=0
          # Use neutron as the public clouds in use are neutron based.
          export DEVSTACK_GATE_NEUTRON=1
          # The nodepool process needs sudo rights in order to
          # perform dib image builds
          export DEVSTACK_GATE_REMOVE_STACK_SUDO=0
          # Disable services we do not need for nodepool
          export DEVSTACK_LOCAL_CONFIG="disable_service horizon"
          export DEVSTACK_LOCAL_CONFIG+=$'\n'"disable_service ceilometer-acentral"
          export DEVSTACK_LOCAL_CONFIG+=$'\n'"disable_service ceilometer-acompute"
          export DEVSTACK_LOCAL_CONFIG+=$'\n'"disable_service ceilometer-alarm-evaluator"
          export DEVSTACK_LOCAL_CONFIG+=$'\n'"disable_service ceilometer-alarm-notifier"
          export DEVSTACK_LOCAL_CONFIG+=$'\n'"disable_service ceilometer-anotification"
          export DEVSTACK_LOCAL_CONFIG+=$'\n'"disable_service ceilometer-api"
          export DEVSTACK_LOCAL_CONFIG+=$'\n'"disable_service ceilometer-collector"
          export DEVSTACK_LOCAL_CONFIG+=$'\n'"disable_service cinder"
          export DEVSTACK_LOCAL_CONFIG+=$'\n'"disable_service c-bak"
          export DEVSTACK_LOCAL_CONFIG+=$'\n'"disable_service c-sch"
          export DEVSTACK_LOCAL_CONFIG+=$'\n'"disable_service c-api"
          export DEVSTACK_LOCAL_CONFIG+=$'\n'"disable_service c-vol"

          if [ "-py35" == "-py35" ]; then
              export DEVSTACK_GATE_USE_PYTHON3=True

              # swift is not ready for python3 yet
              export DEVSTACK_LOCAL_CONFIG+=$'\n'"disable_service s-account"
              export DEVSTACK_LOCAL_CONFIG+=$'\n'"disable_service s-container"
              export DEVSTACK_LOCAL_CONFIG+=$'\n'"disable_service s-object"
              export DEVSTACK_LOCAL_CONFIG+=$'\n'"disable_service s-proxy"
          fi

          export BRANCH_OVERRIDE=default
          if [ "$BRANCH_OVERRIDE" != "default" ] ; then
              export OVERRIDE_ZUUL_BRANCH=$BRANCH_OVERRIDE
          fi
          # Because we are testing a non standard project, add the
          # our project repository. This makes zuul do the right
          # reference magic for testing changes.
          export PROJECTS="openstack-infra/nodepool $PROJECTS"
          # note the actual url here is somewhat irrelevant because it
          # caches in nodepool, however make it a valid url for
          # documentation purposes.
          export DEVSTACK_LOCAL_CONFIG+=$'\n'"enable_plugin nodepool git://git.openstack.org/openstack-infra/nodepool"

          function post_test_hook {
              /opt/stack/new/nodepool/tools/check_devstack_plugin.sh
          }
          export -f post_test_hook

          cp devstack-gate/devstack-vm-gate-wrap.sh ./safe-devstack-vm-gate-wrap.sh
          ./safe-devstack-vm-gate-wrap.sh
        executable: /bin/bash
        chdir: '{{ ansible_user_dir }}/workspace'
      environment: '{{ zuul | zuul_legacy_vars }}'
