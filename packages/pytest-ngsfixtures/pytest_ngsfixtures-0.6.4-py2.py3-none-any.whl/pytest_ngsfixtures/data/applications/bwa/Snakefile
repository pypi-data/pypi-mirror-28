# -*- snakemake -*-
import os
import copy

configfile: "../config.yaml"
configfile: "config.yaml"

APPLICATION = "bwa"
READ1 = os.path.join("../../yuge/CHS.HG00512_1.fastq.gz")
READ2 = os.path.join("../../yuge/CHS.HG00512_2.fastq.gz")

param = {
    'ref' : os.path.join("{version}", config['input']['ref']),
    'index': os.path.join("{version}", config['input']['ref']),
    'index_ext' : ['.amb', '.ann', '.bwt', '.pac', '.sa'],
    'end': config['end'],
}

rule _bwa_index:
    input: ref = param['ref'], conda= APPLICATION + "-{version}.yaml"
    output: temporary(expand("{{version}}/{ref}{index_ext}", index_ext=param['index_ext'], ref=config['input']['ref']))
    conda: APPLICATION + "-{version}.yaml"
    shell: "bwa index {input.ref}"

rule bwa_mem:
    input: read1=READ1, read2=READ2, ref=param['ref'],
           conda=APPLICATION + "-{version}.yaml", index=rules._bwa_index.output
    output: config[APPLICATION]["bwa_mem"]["output"]
    conda: APPLICATION + "-{version}.yaml"
    shell:
        "if [[ '{wildcards.end}' == 'se' ]]; then\n"
        "    bwa mem {input.ref} {input.read1} > /dev/null 2> {output}\n"
        "else\n"
        "    bwa mem {input.ref} {input.read1} {input.read2} > /dev/null 2> {output}\n"
        "fi\n"

include: "../fileutils.sm"        
