Metadata-Version: 1.1
Name: peewee-mssql
Version: 0.1.3
Summary: Database driver to add Microsoft SQL Server/Azure support to Peewee
Home-page: https://github.com/cour4g3/peewee-mssql
Author: Michael de Villiers
Author-email: michael@cour4g3.me
License: MIT
Description-Content-Type: UNKNOWN
Description: Peewee
        ######
        A database driver to add Microsoft SQL Server and Azure support using
        `pymssql <http://pymssql.org>`__ and `FreeTDS <http://freetds.org>`__ in
        Peewee and should run on most Unix-like systems, Microsoft Windows and Mac OS X.
        
        In it's current state you should be able to access data and possibly do certain
        updates. You will not be able to create tables or introspect existing databases,
        so you will have to write your models manually. Offsets will also not work,
        since the query compiler will need some significant rewrite to support TSQL
        dialect, however limit will work (TOP).
        
        Installation
        ============
        Install the latest stable release from Pypi:
        
            $ pip install peewee-mssql
        
        Or alternatively, select a release or development version from Github and run:
        
            $ python setup.py install
        
        Getting Started
        ===============
        For help on installing and configuring `FreeTDS <http://freetds.org>`__ I
        recommend taking a look at the
        `guide <http://pymssql.org/en/latest/freetds.html>`__ in the
        `pymssql <http://www.pymssql.org>`__ documentation.
        
        And then you should be able to instantiate a database as below and start
        building your models for accessing data:
        
        .. code-block:: python
        
            from peewee_mssql import MssqlDatabase
        
            db = MssqlDatabase('MyDatabase', host='host.example.com', user='domain\\username', password='password')
        
        If you are using Microsoft SQL Server 2005 you will need to use the legacy
        datetime data types, simple pass `use_legacy_datetime=True` to the
        database driver when initializing.
        
Platform: any
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 2.6
Classifier: Programming Language :: Python :: 3.3
Classifier: Programming Language :: Python :: 3.4
Classifier: Programming Language :: Python :: 3.5
