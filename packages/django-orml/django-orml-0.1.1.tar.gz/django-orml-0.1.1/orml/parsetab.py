
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftANDORleftCOMMAPERIODleftCOLONleftPLUSMINUSleftTIMESDIVIDEleftSEMICOLONrightUMINUSNAME COLON SEMICOLON COMMA PERIOD OR AND FLOAT INT STRING PLUS MINUS TIMES DIVIDE EQUALS ASSIGN LPAREN RPAREN LBRACKET RBRACKET LQBRACKET RQBRACKETstatement : expression EQUALS expressionstatement : NAME ASSIGN expressionstatement : expressionexpression : accessor queryexpression : NAME LPAREN expression RPAREN\n                  | NAME LPAREN RPAREN\n    expression : LPAREN expression RPAREN\n    expression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression DIVIDE expression\n    expression : MINUS expression %prec UMINUS\n    expression : FLOAT\n               | INT\n               | STRING\n               | list\n               | dict\n               | querychain\n               | query\n    \n    expression : accessor\n    expression : NAMEdict : NAME COLON expressiondict : dict COMMA dictlist : expression COMMA expressionaccessor : expression PERIOD expression\n                | expression LBRACKET expression RBRACKET\n    querychain : dict OR dictquerychain : querychain OR dict\n    querychain : querychain OR querychainquery : LQBRACKET expression RQBRACKET\n    query : LQBRACKET dict RQBRACKET\n    '
    
_lr_action_items = {'NAME':([0,6,7,14,15,16,17,18,19,20,21,22,23,24,25,30,31,32,],[3,28,28,28,28,28,28,28,28,28,28,28,28,28,28,49,49,49,]),'LPAREN':([0,3,6,7,14,15,16,17,18,19,20,21,22,23,24,25,28,],[6,24,6,6,6,6,6,6,6,6,6,6,6,6,6,6,24,]),'MINUS':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,50,51,52,53,54,55,56,],[7,17,-21,-20,-19,7,7,-13,-14,-15,-16,-17,-18,7,7,7,7,7,7,7,7,7,7,7,7,-4,17,-21,-12,17,-17,17,-8,-9,-10,-11,17,17,17,17,17,-6,17,-7,-23,-27,-29,-28,-30,-31,-26,-5,]),'FLOAT':([0,6,7,14,15,16,17,18,19,20,21,22,23,24,25,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'INT':([0,6,7,14,15,16,17,18,19,20,21,22,23,24,25,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'STRING':([0,6,7,14,15,16,17,18,19,20,21,22,23,24,25,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'LQBRACKET':([0,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,28,29,36,37,38,39,40,42,45,46,47,48,50,51,52,53,54,55,56,],[14,14,-19,14,14,-13,-14,-15,-16,-17,-18,14,14,14,14,14,14,14,14,14,14,14,14,-4,-21,-12,-8,-9,-10,-11,-25,-24,-6,-22,-7,-23,-27,-29,-28,-30,-31,-26,-5,]),'$end':([1,2,3,4,5,8,9,10,11,12,13,26,28,29,35,36,37,38,39,40,42,43,45,46,47,48,50,51,52,53,54,55,56,],[0,-3,-21,-20,-19,-13,-14,-15,-16,-17,-18,-4,-21,-12,-1,-8,-9,-10,-11,-25,-24,-2,-6,-22,-7,-23,-27,-29,-28,-30,-31,-26,-5,]),'EQUALS':([2,3,4,5,8,9,10,11,12,13,26,28,29,36,37,38,39,40,42,45,46,47,48,50,51,52,53,54,55,56,],[15,-21,-20,-19,-13,-14,-15,-16,-17,-18,-4,-21,-12,-8,-9,-10,-11,-25,-24,-6,-22,-7,-23,-27,-29,-28,-30,-31,-26,-5,]),'PLUS':([2,3,4,5,8,9,10,11,12,13,26,27,28,29,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,50,51,52,53,54,55,56,],[16,-21,-20,-19,-13,-14,-15,-16,-17,-18,-4,16,-21,-12,16,-17,16,-8,-9,-10,-11,16,16,16,16,16,-6,16,-7,-23,-27,-29,-28,-30,-31,-26,-5,]),'TIMES':([2,3,4,5,8,9,10,11,12,13,26,27,28,29,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,50,51,52,53,54,55,56,],[18,-21,-20,-19,-13,-14,-15,-16,-17,-18,-4,18,-21,-12,18,-17,18,18,18,-10,-11,18,18,18,18,18,-6,18,-7,-23,-27,-29,-28,-30,-31,-26,-5,]),'DIVIDE':([2,3,4,5,8,9,10,11,12,13,26,27,28,29,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,50,51,52,53,54,55,56,],[19,-21,-20,-19,-13,-14,-15,-16,-17,-18,-4,19,-21,-12,19,-17,19,19,19,-10,-11,19,19,19,19,19,-6,19,-7,-23,-27,-29,-28,-30,-31,-26,-5,]),'PERIOD':([2,3,4,5,8,9,10,11,12,13,26,27,28,29,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,50,51,52,53,54,55,56,],[20,-21,-20,-19,-13,-14,-15,-16,-17,-18,-4,20,-21,-12,20,-17,20,-8,-9,-10,-11,-25,20,-24,20,20,-6,-22,-7,-23,-27,-29,-28,-30,-31,-26,-5,]),'LBRACKET':([2,3,4,5,8,9,10,11,12,13,26,27,28,29,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,50,51,52,53,54,55,56,],[21,-21,-20,-19,-13,-14,-15,-16,-17,-18,-4,21,-21,-12,21,-17,21,-8,-9,-10,-11,-25,21,-24,21,21,-6,-22,-7,-23,-27,-29,-28,-30,-31,-26,-5,]),'COMMA':([2,3,4,5,8,9,10,11,12,13,26,27,28,29,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,50,51,52,53,54,55,56,],[22,-21,-20,-19,-13,-14,-15,-16,30,-18,-4,22,-21,-12,22,30,22,-8,-9,-10,-11,-25,22,-24,22,22,-6,-22,-7,-23,30,-29,30,-30,-31,-26,-5,]),'ASSIGN':([3,],[23,]),'COLON':([3,28,49,],[25,25,25,]),'RPAREN':([4,5,8,9,10,11,12,13,24,26,27,28,29,36,37,38,39,40,42,44,45,46,47,48,50,51,52,53,54,55,56,],[-20,-19,-13,-14,-15,-16,-17,-18,45,-4,47,-21,-12,-8,-9,-10,-11,-25,-24,56,-6,-22,-7,-23,-27,-29,-28,-30,-31,-26,-5,]),'RQBRACKET':([4,5,8,9,10,11,12,13,26,28,29,33,34,36,37,38,39,40,42,45,46,47,48,50,51,52,53,54,55,56,],[-20,-19,-13,-14,-15,-16,-17,-18,-4,-21,-12,53,54,-8,-9,-10,-11,-25,-24,-6,-22,-7,-23,-27,-29,-28,-30,-31,-26,-5,]),'RBRACKET':([4,5,8,9,10,11,12,13,26,28,29,36,37,38,39,40,41,42,45,46,47,48,50,51,52,53,54,55,56,],[-20,-19,-13,-14,-15,-16,-17,-18,-4,-21,-12,-8,-9,-10,-11,-25,55,-24,-6,-22,-7,-23,-27,-29,-28,-30,-31,-26,-5,]),'OR':([4,5,8,9,10,11,12,13,26,28,29,34,36,37,38,39,40,42,45,46,47,48,50,51,52,53,54,55,56,],[-20,-19,-13,-14,-15,-16,31,32,-4,-21,-12,31,-8,-9,-10,-11,-25,-24,-6,-22,-7,-23,-27,-29,-28,-30,-31,-26,-5,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,],[1,]),'expression':([0,6,7,14,15,16,17,18,19,20,21,22,23,24,25,],[2,27,29,33,35,36,37,38,39,40,41,42,43,44,46,]),'accessor':([0,6,7,14,15,16,17,18,19,20,21,22,23,24,25,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'query':([0,4,6,7,14,15,16,17,18,19,20,21,22,23,24,25,],[5,26,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'list':([0,6,7,14,15,16,17,18,19,20,21,22,23,24,25,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'dict':([0,6,7,14,15,16,17,18,19,20,21,22,23,24,25,30,31,32,],[12,12,12,34,12,12,12,12,12,12,12,12,12,12,12,48,50,52,]),'querychain':([0,6,7,14,15,16,17,18,19,20,21,22,23,24,25,32,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,51,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> expression EQUALS expression','statement',3,'p_statement_equals','parser.py',27),
  ('statement -> NAME ASSIGN expression','statement',3,'p_statement_assign','parser.py',32),
  ('statement -> expression','statement',1,'p_statement_expr','parser.py',37),
  ('expression -> accessor query','expression',2,'p_expression_query_filter','parser.py',59),
  ('expression -> NAME LPAREN expression RPAREN','expression',4,'p_expression_func','parser.py',65),
  ('expression -> NAME LPAREN RPAREN','expression',3,'p_expression_func','parser.py',66),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','parser.py',76),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','parser.py',82),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','parser.py',83),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop','parser.py',84),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','parser.py',85),
  ('expression -> MINUS expression','expression',2,'p_expression_uminus','parser.py',98),
  ('expression -> FLOAT','expression',1,'p_expression_types','parser.py',104),
  ('expression -> INT','expression',1,'p_expression_types','parser.py',105),
  ('expression -> STRING','expression',1,'p_expression_types','parser.py',106),
  ('expression -> list','expression',1,'p_expression_types','parser.py',107),
  ('expression -> dict','expression',1,'p_expression_types','parser.py',108),
  ('expression -> querychain','expression',1,'p_expression_types','parser.py',109),
  ('expression -> query','expression',1,'p_expression_types','parser.py',110),
  ('expression -> accessor','expression',1,'p_expression_accessor','parser.py',117),
  ('expression -> NAME','expression',1,'p_expression_name','parser.py',123),
  ('dict -> NAME COLON expression','dict',3,'p_dict','parser.py',132),
  ('dict -> dict COMMA dict','dict',3,'p_dict_chain','parser.py',138),
  ('list -> expression COMMA expression','list',3,'p_list','parser.py',144),
  ('accessor -> expression PERIOD expression','accessor',3,'p_accessor','parser.py',161),
  ('accessor -> expression LBRACKET expression RBRACKET','accessor',4,'p_accessor','parser.py',162),
  ('querychain -> dict OR dict','querychain',3,'p_querychain','parser.py',187),
  ('querychain -> querychain OR dict','querychain',3,'p_querychain_or_dict','parser.py',192),
  ('querychain -> querychain OR querychain','querychain',3,'p_querychain_or_querychain','parser.py',198),
  ('query -> LQBRACKET expression RQBRACKET','query',3,'p_query','parser.py',203),
  ('query -> LQBRACKET dict RQBRACKET','query',3,'p_query_dict','parser.py',209),
]
