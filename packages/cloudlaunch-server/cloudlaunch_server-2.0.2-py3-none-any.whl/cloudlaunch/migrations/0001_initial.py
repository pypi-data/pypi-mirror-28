# -*- coding: utf-8 -*-
# Generated by Django 1.11.6 on 2017-10-18 13:52
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import smart_selects.db_fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('djcloudbridge', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AppCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, choices=[('FEATURED', 'Featured'), ('GALAXY', 'Galaxy'), ('SCALABLE', 'Scalable'), ('VM', 'Virtual machine')], max_length=100, null=True, unique=True)),
            ],
            options={
                'verbose_name_plural': 'App categories',
            },
        ),
        migrations.CreateModel(
            name='Application',
            fields=[
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=60)),
                ('slug', models.SlugField(max_length=100, primary_key=True, serialize=False)),
                ('status', models.CharField(blank=True, choices=[('DEV', 'Development'), ('CERTIFICATION', 'Certification'), ('LIVE', 'Live')], default='DEV', max_length=50, null=True)),
                ('summary', models.CharField(blank=True, max_length=140, null=True)),
                ('maintainer', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.TextField(blank=True, max_length=32767, null=True)),
                ('info_url', models.URLField(blank=True, max_length=2048, null=True)),
                ('icon_url', models.URLField(blank=True, max_length=2048, null=True)),
                ('default_launch_config', models.TextField(blank=True, help_text='Application-wide initial configuration data to parameterize the launch with.', max_length=16384, null=True)),
                ('category', models.ManyToManyField(blank=True, null=True, to='cloudlaunch.AppCategory')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ApplicationDeployment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=60)),
                ('archived', models.BooleanField(default=False)),
                ('provider_settings', models.TextField(blank=True, help_text='Cloud provider specific settings used for this launch.', max_length=16384, null=True)),
                ('application_config', models.TextField(blank=True, help_text='Application configuration data used for this launch.', max_length=16384, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ApplicationDeploymentTask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('celery_id', models.TextField(blank=True, help_text='Celery task id for any background jobs running on this deployment', max_length=64, null=True, unique=True)),
                ('action', models.CharField(blank=True, choices=[('LAUNCH', 'Launch'), ('HEALTH_CHECK', 'Health check'), ('RESTART', 'Restart'), ('DELETE', 'Delete')], max_length=255, null=True)),
                ('_result', models.TextField(blank=True, db_column='result', help_text='Result of Celery task', max_length=16384, null=True)),
                ('_status', models.CharField(blank=True, db_column='status', max_length=64, null=True)),
                ('traceback', models.TextField(blank=True, help_text='Celery task traceback, if any', max_length=16384, null=True)),
                ('deployment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='cloudlaunch.ApplicationDeployment')),
            ],
        ),
        migrations.CreateModel(
            name='ApplicationVersion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('version', models.CharField(max_length=30)),
                ('frontend_component_path', models.CharField(blank=True, max_length=255, null=True)),
                ('frontend_component_name', models.CharField(blank=True, max_length=255, null=True)),
                ('backend_component_name', models.CharField(blank=True, max_length=255, null=True)),
                ('default_launch_config', models.TextField(blank=True, help_text='Version specific configuration data to parameterize the launch with.', max_length=16384, null=True)),
                ('application', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='versions', to='cloudlaunch.Application')),
                ('default_cloud', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='djcloudbridge.Cloud')),
            ],
        ),
        migrations.CreateModel(
            name='ApplicationVersionCloudConfig',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('default_instance_type', models.CharField(blank=True, max_length=256, null=True)),
                ('default_launch_config', models.TextField(blank=True, help_text='Cloud specific initial configuration data to parameterize the launch with.', max_length=16384, null=True)),
                ('application_version', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='app_version_config', to='cloudlaunch.ApplicationVersion')),
                ('cloud', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='app_version_config', to='djcloudbridge.Cloud')),
            ],
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=60)),
                ('image_id', models.CharField(max_length=50, verbose_name='Image ID')),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Usage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('app_config', models.TextField(blank=True, max_length=16384, null=True)),
                ('app_deployment', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='app_version_cloud_config', to='cloudlaunch.ApplicationDeployment')),
                ('app_version_cloud_config', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='app_version_cloud_config', to='cloudlaunch.ApplicationVersionCloudConfig')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Usage',
                'ordering': ['added'],
            },
        ),
        migrations.CreateModel(
            name='CloudImage',
            fields=[
                ('image_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='cloudlaunch.Image')),
                ('cloud', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='djcloudbridge.Cloud')),
            ],
            options={
                'abstract': False,
            },
            bases=('cloudlaunch.image',),
        ),
        migrations.AddField(
            model_name='applicationdeployment',
            name='application_version',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cloudlaunch.ApplicationVersion'),
        ),
        migrations.AddField(
            model_name='applicationdeployment',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='applicationdeployment',
            name='target_cloud',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='djcloudbridge.Cloud'),
        ),
        migrations.AddField(
            model_name='application',
            name='default_version',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='cloudlaunch.ApplicationVersion'),
        ),
        migrations.AddField(
            model_name='applicationversioncloudconfig',
            name='image',
            field=smart_selects.db_fields.ChainedForeignKey(chained_field='cloud', chained_model_field='cloud', on_delete=django.db.models.deletion.CASCADE, to='cloudlaunch.CloudImage'),
        ),
        migrations.AlterUniqueTogether(
            name='applicationversion',
            unique_together=set([('application', 'version')]),
        ),
        migrations.AlterUniqueTogether(
            name='applicationversioncloudconfig',
            unique_together=set([('application_version', 'cloud')]),
        ),
    ]
